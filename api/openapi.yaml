openapi: 3.0.1
info:
  title: vela-api
  version: 1.0.0
servers:
- url: /
tags:
- name: addon_registry
- name: addon
- name: application
- name: authentication
- name: cloudshell
- name: cluster
- name: config
- name: definition
- name: env
- name: payload_types
- name: rbac
- name: pipeline
- name: project
- name: velaQL
- name: repository
- name: systemInfo
- name: Target
- name: users
- name: webhook
- name: oam_application
paths:
  /api/v1/targets/{targetName}:
    delete:
      deprecated: false
      operationId: deleteTarget
      parameters:
      - description: identifier of the Target
        explode: false
        in: path
        name: targetName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: deletet Target
      tags:
      - Target
      x-apifox-folder: Target
      x-apifox-status: released
    get:
      deprecated: false
      operationId: detailTarget
      parameters:
      - description: identifier of the Target.
        explode: false
        in: path
        name: targetName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: detail Target
      tags:
      - Target
      x-apifox-folder: Target
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateTarget
      parameters:
      - description: identifier of the Target
        explode: false
        in: path
        name: targetName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateTargetRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: update application Target config
      tags:
      - Target
      x-apifox-folder: Target
      x-apifox-status: released
  /api/v1/projects/{projectName}/providers:
    get:
      deprecated: false
      operationId: getProviders
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListTerraformProviderResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get providers which are in a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/applications/{appName}/components:
    get:
      deprecated: false
      operationId: listApplicationComponents
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: list components that deployed in define env
        explode: true
        in: query
        name: envName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ComponentListResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: gets the list of application components
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createComponent
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateComponentRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ComponentBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: 'create component  for application '
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/configs/{configName}:
    delete:
      deprecated: false
      operationId: deleteConfig
      parameters:
      - description: identifier of the config
        explode: false
        in: path
        name: configName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
        "404":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Not Found
      summary: delete a config
      tags:
      - config
      x-apifox-folder: config
      x-apifox-status: released
    get:
      deprecated: false
      operationId: getConfig
      parameters:
      - description: identifier of the config
        explode: false
        in: path
        name: configName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/V1Config1'
                type: array
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: detail a config
      tags:
      - config
      x-apifox-folder: config
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateConfig
      parameters:
      - description: identifier of the config
        explode: false
        in: path
        name: configName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/V1UpdateConfigRequest1'
                type: array
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: update a config
      tags:
      - config
      x-apifox-folder: config
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/contexts/{contextName}:
    delete:
      deprecated: false
      operationId: deleteContextValue
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline context name
        explode: false
        in: path
        name: contextName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ContextNameResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete pipeline context value
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateContextValue
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline context name
        explode: false
        in: path
        name: contextName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateContextValuesRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1Context'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: update pipeline context value
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/applications/{appName}/policies:
    get:
      deprecated: false
      operationId: listApplicationPolicies
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListApplicationPolicy'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list policy for application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createApplicationPolicy
      parameters:
      - description: identifier of the application
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreatePolicyRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1PolicyBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: create policy for application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/applications/{appName}/components/{compName}:
    delete:
      deprecated: false
      operationId: deleteComponent
      parameters:
      - description: identifier of the application
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the component
        explode: false
        in: path
        name: compName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
        "404":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Not Found
      summary: delete a component
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    get:
      deprecated: false
      operationId: detailComponent
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the component
        explode: false
        in: path
        name: compName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1DetailComponentResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: 'detail component for application '
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateComponent
      parameters:
      - description: identifier of the application
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the component
        explode: false
        in: path
        name: compName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateApplicationComponentRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ComponentBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: update component config
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/pipelines:
    get:
      deprecated: false
      operationId: listPipelines
      parameters:
      - description: Fuzzy search based on name or description
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: query pipelines within a project
        explode: true
        in: query
        name: projectName
        required: false
        schema:
          type: string
        style: form
      - description: query pipelines with detail
        explode: true
        in: query
        name: detailed
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListPipelineResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list pipelines
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/addon_registries/{addonRegName}:
    delete:
      deprecated: false
      operationId: deleteAddonRegistry
      parameters:
      - description: identifier of the addon registry
        explode: false
        in: path
        name: addonRegName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1AddonRegistry'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete an addon registry
      tags:
      - addon_registry
      x-apifox-folder: addon_registry
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateAddonRegistry
      parameters:
      - description: identifier of the addon registry
        explode: false
        in: path
        name: addonRegName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateAddonRegistryRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1AddonRegistry'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: update an addon registry
      tags:
      - addon_registry
      x-apifox-folder: addon_registry
      x-apifox-status: released
  /api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/inputs:
    get:
      deprecated: false
      operationId: getWorkflowRecordInputs
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow record
        explode: false
        in: path
        name: record
        required: true
        schema:
          type: string
        style: simple
      - description: Specified the step filter
        explode: true
        in: query
        name: step
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1GetPipelineRunInputResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get the workflow step inputs
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/applications/{appName}/workflows/{workflowName}:
    delete:
      deprecated: false
      operationId: deleteWorkflow
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: deletet workflow
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    get:
      deprecated: false
      operationId: detailWorkflow
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workfloc.
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: detail application workflow
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateWorkflow
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateWorkflowRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: update application workflow config
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/system_info:
    get:
      deprecated: false
      operationId: getSystemInfo
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SystemInfoResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: /api/v1/system_info
      tags:
      - systemInfo
      x-apifox-folder: systemInfo
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateSystemInfo
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SystemInfoRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SystemInfoResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: /api/v1/system_info
      tags:
      - systemInfo
      x-apifox-folder: systemInfo
      x-apifox-status: released
  /api/v1/permissions:
    get:
      deprecated: false
      operationId: listPlatformPermissions
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/V1PermissionBase'
                type: array
          description: OK
      summary: list all platform level perm policies
      tags:
      - rbac
      x-apifox-folder: rbac
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createPlatformPermission
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreatePermissionRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1PermissionBase'
          description: OK
      summary: create the platform perm policy
      tags:
      - rbac
      x-apifox-folder: rbac
      x-apifox-status: released
  /view/cloudshell/{subpath}:
    get:
      deprecated: false
      operationId: proxy
      parameters:
      - explode: false
        in: path
        name: subpath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: prepare the user's cloud shell environment
      tags:
      - cloudshell
      x-apifox-folder: cloudshell
      x-apifox-status: released
  /api/v1/cloudshell:
    delete:
      deprecated: false
      operationId: destroyCloudShell
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: destroy the user's cloud shell environment
      tags:
      - cloudshell
      x-apifox-folder: cloudshell
      x-apifox-status: released
    post:
      deprecated: false
      operationId: prepareCloudShell
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: prepare the user's cloud shell environment
      tags:
      - cloudshell
      x-apifox-folder: cloudshell
      x-apifox-status: released
  /api/v1/config_templates/{templateName}:
    get:
      deprecated: false
      operationId: getConfigTemplate
      parameters:
      - description: identifier of the config template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: the name of the namespace
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ConfigTemplateDetail'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: Detail a template
      tags:
      - config
      x-apifox-folder: config
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/runs/{runName}/log:
    get:
      deprecated: false
      operationId: getPipelineRunLog
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline run name
        explode: false
        in: path
        name: runName
        required: true
        schema:
          type: string
        style: simple
      - description: query by specific step name
        explode: true
        in: query
        name: step
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1GetPipelineRunLogResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get pipeline run log
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/runs/{runName}/stop:
    post:
      deprecated: false
      operationId: stopPipeline
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline run name
        explode: false
        in: path
        name: runName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1PipelineRunMeta'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: stop pipeline run
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/definitions/{definitionName}/uischema:
    put:
      deprecated: false
      operationId: updateUISchema
      parameters:
      - explode: false
        in: path
        name: definitionName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateUiSchemaRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: Update the UI schema for a definition
      tags:
      - definition
      x-apifox-folder: definition
      x-apifox-status: released
  /api/v1/addons/{addonName}/disable:
    post:
      deprecated: false
      operationId: disableAddon
      parameters:
      - description: addon name to enable
        explode: false
        in: path
        name: addonName
        required: true
        schema:
          type: string
        style: simple
      - description: force disable an addon
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1AddonStatusResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: disable an addon
      tags:
      - addon
      x-apifox-folder: addon
      x-apifox-status: released
  /api/v1/configs:
    get:
      deprecated: false
      operationId: getConfigs
      parameters:
      - description: the name of the template
        explode: true
        in: query
        name: template
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListConfigResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list all configs that belong to the system scope
      tags:
      - config
      x-apifox-folder: config
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createConfig
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateConfigRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1Config'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
        "404":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Not Found
      summary: create or update a config
      tags:
      - config
      x-apifox-folder: config
      x-apifox-status: released
  /api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/resume:
    get:
      deprecated: false
      operationId: resumeWorkflowRecord
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the  workflow record
        explode: false
        in: path
        name: record
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: resume suspend workflow record
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/repository/chart_repos:
    get:
      deprecated: false
      operationId: listRepo
      parameters:
      - description: the config project
        explode: true
        in: query
        name: project
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list chart repo
      tags:
      - repository
      x-apifox-folder: repository
      x-apifox-status: released
  /api/v1/clusters/cloud_clusters/{provider}/create:
    post:
      deprecated: false
      operationId: createCloudCluster
      parameters:
      - description: identifier of the cloud provider
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateCloudClusterRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1CreateCloudClusterResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: create cloud cluster
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
  /api/v1/projects/{projectName}/users/{userName}:
    delete:
      deprecated: false
      operationId: deleteProjectUser
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the project user
        explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateProjectUserRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
      summary: delete a user from a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateProjectUser
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the project user
        explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateProjectUserRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ProjectUserBase'
          description: OK
      summary: update a user from a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/runs/{runName}/input:
    get:
      deprecated: false
      operationId: getPipelineRunInput
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline run name
        explode: false
        in: path
        name: runName
        required: true
        schema:
          type: string
        style: simple
      - description: query by specific step name
        explode: true
        in: query
        name: step
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1GetPipelineRunInputResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get pipeline run input
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/applications/{appName}/envs/{envName}:
    delete:
      deprecated: false
      operationId: deleteApplicationEnv
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: 'identifier of the envBinding '
        explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "404":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Not Found
      summary: 'delete an application environment '
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateApplicationEnv
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: 'identifier of the envBinding '
        explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1PutApplicationEnvBindingRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EnvBinding'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: set application  differences in the specified environment
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/outputs:
    get:
      deprecated: false
      operationId: getWorkflowRecordOutputs
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow record
        explode: false
        in: path
        name: record
        required: true
        schema:
          type: string
        style: simple
      - description: Specified the step filter
        explode: true
        in: query
        name: step
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1GetPipelineRunOutputResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get the workflow step inputs
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/envs/{envName}:
    delete:
      deprecated: false
      operationId: envdelete
      parameters:
      - description: identifier of the environment
        explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete one env
      tags:
      - env
      x-apifox-folder: env
      x-apifox-status: released
    put:
      deprecated: false
      operationId: envupdate
      parameters:
      - description: identifier of the environment
        explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateEnvRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1Env'
          description: OK
      summary: update an env
      tags:
      - env
      x-apifox-folder: env
      x-apifox-status: released
  /api/v1/clusters/{clusterName}/namespaces:
    post:
      deprecated: false
      operationId: createNamespace
      parameters:
      - description: name of the target cluster
        explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateClusterNamespaceRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1CreateClusterNamespaceResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: create namespace in cluster
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
  /api/v1/projects/{projectName}/config_templates:
    get:
      deprecated: false
      operationId: getConfigTemplates
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: the namespace of the template
        explode: true
        in: query
        name: namespace
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListConfigTemplateResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get the templates which are in a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/definitions:
    get:
      deprecated: false
      operationId: listDefinitions
      parameters:
      - description: query the definition type
        explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - description: query all definitions include hidden in UI
        explode: true
        in: query
        name: queryAll
        required: false
        schema:
          type: string
        style: form
      - description: if specified, query the trait definition applied to the workload
        explode: true
        in: query
        name: appliedWorkload
        required: false
        schema:
          type: string
        style: form
      - description: query by which addon created the definition
        explode: true
        in: query
        name: ownerAddon
        required: false
        schema:
          type: string
        style: form
      - description: query by the specified scope like WorkflowRun or Application
        explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: list all definitions
      tags:
      - definition
      x-apifox-folder: definition
      x-apifox-status: released
  /api/v1/clusters:
    get:
      deprecated: false
      operationId: listKubeClusters
      parameters:
      - description: Fuzzy search based on name or description
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Page for paging
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: PageSize for paging
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: list all clusters
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createKubeCluster
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateClusterRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ClusterBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: create cluster
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
  /api/v1/auth/login_type:
    get:
      deprecated: false
      operationId: getLoginType
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1GetLoginTypeResponse'
          description: 成功
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: "400"
      summary: get login type
      tags:
      - authentication
      x-apifox-folder: authentication
      x-apifox-status: released
  /api/v1/repository/charts/{chart}/versions/{version}/values:
    get:
      deprecated: false
      operationId: chartValues
      parameters:
      - explode: false
        in: path
        name: chart
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: helm repository url
        explode: true
        in: query
        name: repoUrl
        required: false
        schema:
          type: string
        style: form
      - description: secret of the repo
        explode: true
        in: query
        name: secretName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/MapStringInterface'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get chart value
      tags:
      - repository
      x-apifox-folder: repository
      x-apifox-status: released
  /api/v1/roles/{roleName}:
    delete:
      deprecated: false
      operationId: deletePlatformRole
      parameters:
      - description: identifier of the role
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
      summary: update platform level role
      tags:
      - rbac
      x-apifox-folder: rbac
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updatePlatformRole
      parameters:
      - description: identifier of the role
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateRoleRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1RoleBase'
          description: OK
      summary: update platform level role
      tags:
      - rbac
      x-apifox-folder: rbac
      x-apifox-status: released
  /api/v1/projects:
    get:
      deprecated: false
      operationId: listProjects
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListProjectResponse'
          description: OK
      summary: list all projects
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createProject
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateProjectRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ProjectBase'
          description: OK
      summary: create a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/applications/{appName}/envs:
    get:
      deprecated: false
      operationId: listApplicationEnvs
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListApplicationEnvBinding'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list policy for application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createApplicationEnv
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateApplicationEnvbindingRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EnvBinding'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: 'creating an application environment '
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/applications/{appName}/triggers/{token}:
    delete:
      deprecated: false
      operationId: deleteApplicationTrigger
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the trigger
        explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: Delete an application trigger
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateApplicationTrigger
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the trigger
        explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationTriggerBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: Update an application trigger
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/applications/{appName}/workflows/{workflowName}/records:
    get:
      deprecated: false
      operationId: listWorkflowRecords
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          type: string
        style: simple
      - description: query the page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: query the page size number
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: query application workflow execution record
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/projects/{projectName}/targets:
    get:
      deprecated: false
      operationId: listProjectTargets
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
      summary: get targets list belong to a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/targets:
    get:
      deprecated: false
      operationId: listTargets
      parameters:
      - description: Page for paging
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: PageSize for paging
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: list targets by project name
        explode: true
        in: query
        name: project
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: list Target
      tags:
      - Target
      x-apifox-folder: Target
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createTarget
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateTargetRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: create failure
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: create Target
      tags:
      - Target
      x-apifox-folder: Target
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}:
    delete:
      deprecated: false
      operationId: deletePipeline
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1PipelineMetaResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete pipeline
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
    get:
      deprecated: false
      operationId: getPipeline
      parameters:
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1GetPipelineResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get pipeline
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updatePipeline
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdatePipelineRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1PipelineBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: update pipeline
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/contexts:
    get:
      deprecated: false
      operationId: listContextValues
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListContextValueResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list pipeline context values
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createContextValue
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateContextValuesRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1Context'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: create pipeline context values
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /view/cloudshell:
    get:
      deprecated: false
      operationId: proxy
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: prepare the user's cloud shell environment
      tags:
      - cloudshell
      x-apifox-folder: cloudshell
      x-apifox-status: released
  /api/v1/applications/{appName}/workflows:
    get:
      deprecated: false
      operationId: listApplicationWorkflows
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: list application workflow
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createOrUpdateApplicationWorkflow
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateWorkflowRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: create failure
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: create application workflow
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/applications/{appName}/reset:
    post:
      deprecated: false
      operationId: resetAppToLatestRevision
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1AppResetResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: reset application to latest revision
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /v1/namespaces/{namespace}/applications/{appname}:
    delete:
      deprecated: false
      operationId: deleteOAMApplication
      parameters:
      - description: identifier of the namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the oam application
        explode: false
        in: path
        name: appname
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: OK
      summary: create or update oam application in the specified namespace
      tags:
      - oam_application
      x-apifox-folder: oam_application
      x-apifox-status: released
    get:
      deprecated: false
      operationId: getApplication
      parameters:
      - description: identifier of the namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the oam application
        explode: false
        in: path
        name: appname
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationResponse'
          description: OK
      summary: get the specified oam application in the specified namespace
      tags:
      - oam_application
      x-apifox-folder: oam_application
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createOrUpdateApplication
      parameters:
      - description: identifier of the namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the oam application
        explode: false
        in: path
        name: appname
        required: true
        schema:
          type: string
        style: simple
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        explode: true
        in: query
        name: dryRun
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1ApplicationRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: OK
      summary: create or update oam application in the specified namespace
      tags:
      - oam_application
      x-apifox-folder: oam_application
      x-apifox-status: released
  /api/v1/addons/{addonName}/enable:
    post:
      deprecated: false
      operationId: enableAddon
      parameters:
      - description: addon name to enable
        explode: false
        in: path
        name: addonName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1EnableAddonRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1AddonStatusResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: enable an addon
      tags:
      - addon
      x-apifox-folder: addon
      x-apifox-status: released
  /api/v1/projects/{projectName}/users:
    get:
      deprecated: false
      operationId: listProjectUser
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListProjectUsersResponse'
          description: OK
      summary: list all users belong to a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createProjectUser
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1AddProjectUserRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ProjectUserBase'
          description: OK
      summary: add a user to a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/enabled_addon:
    get:
      deprecated: false
      operationId: list
      parameters:
      - description: filter addons from given registry
        explode: true
        in: query
        name: registry
        required: false
        schema:
          type: string
        style: form
      - description: Fuzzy search based on name and description.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListEnabledAddonResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list all enabled addons
      tags:
      - addon
      x-apifox-folder: addon
      x-apifox-status: released
  /api/v1/envs:
    get:
      deprecated: false
      operationId: envlist
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListEnvResponse'
          description: OK
      summary: list all envs
      tags:
      - env
      x-apifox-folder: env
      x-apifox-status: released
    post:
      deprecated: false
      operationId: envcreate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateEnvRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1Env'
          description: OK
      summary: create an env
      tags:
      - env
      x-apifox-folder: env
      x-apifox-status: released
  /api/v1/projects/{projectName}/configs:
    get:
      deprecated: false
      operationId: getConfigs
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: the template name
        explode: true
        in: query
        name: template
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListConfigResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get configs which are in a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createConfig
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateConfigRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1Config'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: create a config in a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/applications/{appName}/triggers:
    get:
      deprecated: false
      operationId: listApplicationTriggers
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListApplicationTriggerResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: List the application triggers
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createApplicationTrigger
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateApplicationTriggerRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationTriggerBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: Create an application trigger
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/query:
    get:
      deprecated: false
      operationId: queryView
      parameters:
      - description: velaql query statement
        explode: true
        in: query
        name: velaql
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1VelaQlViewResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: use velaQL to query resource status
      tags:
      - velaQL
      x-apifox-folder: velaQL
      x-apifox-status: released
  /api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/rollback:
    get:
      deprecated: false
      operationId: rollbackWorkflowRecord
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow record
        explode: false
        in: path
        name: record
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the rollback revision
        explode: true
        in: query
        name: rollbackVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1WorkflowRecordBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: rollback suspend application record
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/projects/{projectName}/configs/{configName}:
    delete:
      deprecated: false
      operationId: deleteConfig
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the config
        explode: false
        in: path
        name: configName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete a config from a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    get:
      deprecated: false
      operationId: detailConfig
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the config
        explode: false
        in: path
        name: configName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateConfigRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1Config'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: detail a config in a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateConfig
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the config
        explode: false
        in: path
        name: configName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateConfigRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1Config'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: update a config in a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/clusters/{clusterName}:
    delete:
      deprecated: false
      operationId: deleteKubeCluster
      parameters:
      - description: identifier of the cluster
        explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ClusterBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete cluster
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
    get:
      deprecated: false
      operationId: getKubeCluster
      parameters:
      - description: identifier of the cluster
        explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1DetailClusterResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: detail cluster info
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
    put:
      deprecated: false
      operationId: modifyKubeCluster
      parameters:
      - description: identifier of the cluster
        explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateClusterRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ClusterBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: modify cluster
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
  /api/v1/applications/{appName}/policies/{policyName}:
    delete:
      deprecated: false
      operationId: deleteApplicationPolicy
      parameters:
      - description: identifier of the application
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the application policy
        explode: false
        in: path
        name: policyName
        required: true
        schema:
          type: string
        style: simple
      - description: Force delete the policy and all references
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: detail policy for application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    get:
      deprecated: false
      operationId: detailApplicationPolicy
      parameters:
      - description: identifier of the application
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the application policy
        explode: false
        in: path
        name: policyName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1DetailPolicyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: detail policy for application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateApplicationPolicy
      parameters:
      - description: identifier of the application
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the application policy
        explode: false
        in: path
        name: policyName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdatePolicyRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1DetailPolicyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: update policy for application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/addons/{addonName}/status:
    get:
      deprecated: false
      operationId: statusAddon
      parameters:
      - description: addon name to query status
        explode: false
        in: path
        name: addonName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1AddonStatusResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: show status of an addon
      tags:
      - addon
      x-apifox-folder: addon
      x-apifox-status: released
  /api/v1/projects/{projectName}:
    delete:
      deprecated: false
      operationId: deleteProject
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
      summary: delete a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    get:
      deprecated: false
      operationId: detailProject
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ProjectBase'
          description: OK
      summary: detail a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateProject
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateProjectRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ProjectBase'
          description: OK
      summary: update a project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/applications/{appName}/components/{compName}/traits/{traitType}:
    delete:
      deprecated: false
      operationId: deleteApplicationTrait
      parameters:
      - description: identifier of the application
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the component
        explode: false
        in: path
        name: compName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the type of trait
        explode: false
        in: path
        name: traitType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationTrait'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete trait from a component
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateApplicationTrait
      parameters:
      - description: identifier of the application
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the component
        explode: false
        in: path
        name: compName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the type of trait
        explode: false
        in: path
        name: traitType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateApplicationTraitRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationTrait'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: update trait from a component
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/definitions/{definitionName}:
    get:
      deprecated: false
      operationId: detailDefinition
      parameters:
      - description: identifier of the definition
        explode: false
        in: path
        name: definitionName
        required: true
        schema:
          type: string
        style: simple
      - description: query the definition type
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: Detail a definition
      tags:
      - definition
      x-apifox-folder: definition
      x-apifox-status: released
  /api/v1/applications/{appName}/workflows/{workflowName}/records/{record}:
    get:
      deprecated: false
      operationId: detailWorkflowRecord
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow record
        explode: false
        in: path
        name: record
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: query application workflow execution record detail
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/clusters/cloud_clusters/{provider}/creation:
    get:
      deprecated: false
      operationId: listCloudClusterCreation
      parameters:
      - description: identifier of the cloud provider
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListCloudClusterCreationResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list cloud cluster creation
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
  /api/v1/users/{username}:
    delete:
      deprecated: false
      operationId: deleteUser
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete a user
      tags:
      - users
      x-apifox-folder: users
      x-apifox-status: released
    get:
      deprecated: false
      operationId: detailUser
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1DetailUserResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get user detail
      tags:
      - users
      x-apifox-folder: users
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateUser
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateUserRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1UserBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: update a user's alias or password
      tags:
      - users
      x-apifox-folder: users
      x-apifox-status: released
  /api/v1/applications/{appName}/template:
    post:
      deprecated: false
      operationId: publishApplicationTemplate
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateApplicationTemplateRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationTemplateBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: create one application template
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/projects/{projectName}/config_templates/{templateName}:
    get:
      deprecated: false
      operationId: getConfigTemplate
      parameters:
      - description: identifier of the config template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: the name of the namespace
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ConfigTemplateDetail'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: Detail a template
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/runs/{runName}/status:
    get:
      deprecated: false
      operationId: getPipelineRunStatus
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline run name
        explode: false
        in: path
        name: runName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1alpha1WorkflowRunStatus'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get pipeline run status
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/roles:
    get:
      deprecated: false
      operationId: listPlatformRoles
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListRolesResponse'
          description: OK
      summary: list all platform level roles
      tags:
      - rbac
      x-apifox-folder: rbac
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createPlatformRole
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateRoleRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1RoleBase'
          description: OK
      summary: create platform level role
      tags:
      - rbac
      x-apifox-folder: rbac
      x-apifox-status: released
  /api/v1/permissions/{permissionName}:
    delete:
      deprecated: false
      operationId: deletePlatformPermission
      parameters:
      - description: identifier of the permission
        explode: false
        in: path
        name: permissionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
      summary: delete a platform perm policy
      tags:
      - rbac
      x-apifox-folder: rbac
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/runs/{runName}:
    delete:
      deprecated: false
      operationId: deletePipelineRun
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline run name
        explode: false
        in: path
        name: runName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1PipelineRunMeta'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete pipeline run
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
    get:
      deprecated: false
      operationId: getPipelineRun
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline run name
        explode: false
        in: path
        name: runName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1PipelineRunBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get pipeline run
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/runs/{runName}/output:
    get:
      deprecated: false
      operationId: getPipelineRunOutput
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline run name
        explode: false
        in: path
        name: runName
        required: true
        schema:
          type: string
        style: simple
      - description: query by specific step name
        explode: true
        in: query
        name: step
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1GetPipelineRunOutputResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get pipeline run output
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/projects/{projectName}/roles:
    get:
      deprecated: false
      operationId: listProjectRoles
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListRolesResponse'
          description: OK
      summary: list all project level roles
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createProjectRole
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateRoleRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1RoleBase'
          description: OK
      summary: create project level role
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/addons:
    get:
      deprecated: false
      operationId: listAddons
      parameters:
      - description: filter addons from given registry
        explode: true
        in: query
        name: registry
        required: false
        schema:
          type: string
        style: form
      - description: Fuzzy search based on name and description.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListAddonResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list all addons
      tags:
      - addon
      x-apifox-folder: addon
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/runs/{runName}/resume:
    post:
      deprecated: false
      operationId: resumePipelineRun
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline run name
        explode: false
        in: path
        name: runName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: resume suspend pipeline run
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/clusters/cloud_clusters/{provider}/creation/{cloudClusterName}:
    delete:
      deprecated: false
      operationId: deleteCloudClusterCreation
      parameters:
      - description: identifier of the cloud provider
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      - description: identifier for cloud cluster which is creating
        explode: false
        in: path
        name: cloudClusterName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1CreateCloudClusterResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete cloud cluster creation
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
    get:
      deprecated: false
      operationId: getCloudClusterCreationStatus
      parameters:
      - description: identifier of the cloud provider
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      - description: identifier for cloud cluster which is creating
        explode: false
        in: path
        name: cloudClusterName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1CreateCloudClusterResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: check cloud cluster create status
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
  /api/v1/users:
    get:
      deprecated: false
      operationId: listUser
      parameters:
      - description: query the page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: query the page size number
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: fuzzy search based on name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: fuzzy search based on email
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - description: fuzzy search based on alias
        explode: true
        in: query
        name: alias
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListUserResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list users
      tags:
      - users
      x-apifox-folder: users
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateUserRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1UserBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: create a user
      tags:
      - users
      x-apifox-folder: users
      x-apifox-status: released
  /api/v1/applications/{appName}/compare:
    post:
      deprecated: false
      operationId: compareApp
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1AppCompareReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1AppCompareResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: compare application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/config_templates:
    get:
      deprecated: false
      operationId: listConfigTemplates
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListConfigTemplateResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: List all config templates from the system namespace
      tags:
      - config
      x-apifox-folder: config
      x-apifox-status: released
  /api/v1/applications/{appName}:
    delete:
      deprecated: false
      operationId: deleteApplication
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete one application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    get:
      deprecated: false
      operationId: detailApplication
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1DetailApplicationResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: 'detail one application '
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateApplication
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateApplicationRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: 'update one application '
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/applications/{appName}/deploy:
    post:
      deprecated: false
      operationId: deployApplication
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1ApplicationDeployRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationDeployResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: deploy or upgrade the application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/applications/{appName}/envs/{envName}/status:
    get:
      deprecated: false
      operationId: getApplicationStatus
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the application envbinding
        explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationStatusResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get application status
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/runs:
    get:
      deprecated: false
      operationId: listPipelineRuns
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: query identifier of the status
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListPipelineRunResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list pipeline runs
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/projects/{projectName}/distributions:
    get:
      deprecated: false
      operationId: listDistributions
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListConfigDistributionResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list the distribution jobs of the config
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    post:
      deprecated: false
      operationId: applyDistribution
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateConfigDistributionRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: apply the distribution job of the config
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/addon_registries:
    get:
      deprecated: false
      operationId: listAddonRegistry
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListAddonRegistryResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list all addon registry
      tags:
      - addon_registry
      x-apifox-folder: addon_registry
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createAddonRegistry
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateAddonRegistryRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1AddonRegistry'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: create an addon registry
      tags:
      - addon_registry
      x-apifox-folder: addon_registry
      x-apifox-status: released
  /api/v1/repository/image/repos:
    get:
      deprecated: false
      operationId: getImageRepos
      parameters:
      - description: the config project
        explode: true
        in: query
        name: project
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListImageRegistryResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get the oci repos
      tags:
      - repository
      x-apifox-folder: repository
      x-apifox-status: released
  /api/v1/applications/{appName}/revisions/{revision}/rollback:
    post:
      deprecated: false
      operationId: rollbackApplicationWithRevision
      parameters:
      - description: identifier of the application
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the application revision
        explode: false
        in: path
        name: revision
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationRollbackResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: detail revision for application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/projects/{projectName}/permissions/{permissionName}:
    delete:
      deprecated: false
      operationId: deleteProjectPermission
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the permission
        explode: false
        in: path
        name: permissionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/V1PermissionBase'
                type: array
          description: OK
      summary: delete a project level perm policy
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/applications/{appName}/envs/{envName}/recycle:
    post:
      deprecated: false
      operationId: recycleApplicationEnv
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the application envbinding
        explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get application status
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines:
    post:
      deprecated: false
      operationId: createPipeline
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreatePipelineRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1PipelineBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: create pipeline
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/projects/{projectName}/roles/{roleName}:
    delete:
      deprecated: false
      operationId: deleteProjectRole
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the project role
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
      summary: delete project level role
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    put:
      deprecated: false
      operationId: updateProjectRole
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the project role
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateRoleRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1RoleBase'
          description: OK
      summary: update project level role
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/addons/{addonName}:
    get:
      deprecated: false
      operationId: detailAddon
      parameters:
      - description: addon name to query detail
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: addon name to query detail
        explode: false
        in: path
        name: addonName
        required: true
        schema:
          type: string
        style: simple
      - description: specify addon version to enable
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      - description: filter addons from given registry
        explode: true
        in: query
        name: registry
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1DetailAddonResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: show details of an addon
      tags:
      - addon
      x-apifox-folder: addon
      x-apifox-status: released
  /api/v1/repository/charts:
    get:
      deprecated: false
      operationId: listCharts
      parameters:
      - description: helm repository url
        explode: true
        in: query
        name: repoUrl
        required: false
        schema:
          type: string
        style: form
      - description: secret of the repo
        explode: true
        in: query
        name: secretName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list charts
      tags:
      - repository
      x-apifox-folder: repository
      x-apifox-status: released
  /api/v1/auth/refresh_token:
    get:
      deprecated: false
      operationId: refreshToken
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1RefreshTokenResponse'
          description: 成功
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: "400"
      summary: refresh token
      tags:
      - authentication
      x-apifox-folder: authentication
      x-apifox-status: released
  /api/v1/projects/{projectName}/distributions/{distributionName}:
    delete:
      deprecated: false
      operationId: deleteDistribution
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the distribution
        explode: false
        in: path
        name: distributionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: delete a distribution job of the config
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/terminate:
    get:
      deprecated: false
      operationId: terminateWorkflowRecord
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow record
        explode: false
        in: path
        name: record
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: terminate suspend workflow record
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/auth/login:
    post:
      deprecated: false
      operationId: login
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1LoginRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1LoginResponse'
          description: 成功
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: "400"
      summary: handle login request
      tags:
      - authentication
      x-apifox-folder: authentication
      x-apifox-status: released
  /api/v1/payload_types:
    get:
      deprecated: false
      operationId: ListPayloadTypes
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list application trigger payload types
      tags:
      - payload_types
      x-apifox-folder: payload_types
      x-apifox-status: released
  /api/v1/applications/{appName}/revisions:
    get:
      deprecated: false
      operationId: listApplicationRevisions
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: query identifier of the env
        explode: true
        in: query
        name: envName
        required: false
        schema:
          type: string
        style: form
      - description: query identifier of the status
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: query the page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: query the page size number
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListRevisionsResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list revisions for application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/applications:
    get:
      deprecated: false
      operationId: listApplications
      parameters:
      - description: Fuzzy search based on name or description
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: search base on project name
        explode: true
        in: query
        name: project
        required: false
        schema:
          type: string
        style: form
      - description: search base on env name
        explode: true
        in: query
        name: env
        required: false
        schema:
          type: string
        style: form
      - description: Name of the application delivery target
        explode: true
        in: query
        name: targetName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListApplicationResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list all applications
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createApplication
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateApplicationRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: 'create one application '
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/applications/{appName}/dry-run:
    post:
      deprecated: false
      operationId: dryRunAppOrRevision
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1AppDryRunReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1AppDryRunResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: dry-run application to latest revision
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/projects/{projectName}/permissions:
    get:
      deprecated: false
      operationId: listProjectPermissions
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/V1PermissionBase'
                type: array
          description: OK
      summary: list all project level perm policies
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
    post:
      deprecated: false
      operationId: createProjectPermission
      parameters:
      - description: identifier of the project
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/V1PermissionBase'
                type: array
          description: OK
      summary: create a project level perm policy
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/run:
    post:
      deprecated: false
      operationId: runPipeline
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1RunPipelineRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1PipelineRun'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: run pipeline
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/auth/dex_config:
    get:
      deprecated: false
      operationId: getDexConfig
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1DexConfigResponse'
          description: 成功
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: "400"
      summary: get Dex config
      tags:
      - authentication
      x-apifox-folder: authentication
      x-apifox-status: released
  /api/v1/clusters/cloud_clusters/{provider}:
    post:
      deprecated: false
      operationId: listCloudClusters
      parameters:
      - description: identifier of the cloud provider
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      - description: Page for paging
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: PageSize for paging
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1AccessKeyRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ListCloudClusterResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list cloud clusters
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
  /api/v1/clusters/cloud_clusters/{provider}/connect:
    post:
      deprecated: false
      operationId: connectCloudCluster
      parameters:
      - description: identifier of the cloud provider
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1ConnectCloudClusterRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ClusterBase'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: create cluster from cloud cluster
      tags:
      - cluster
      x-apifox-folder: cluster
      x-apifox-status: released
  /api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/logs:
    get:
      deprecated: false
      operationId: getWorkflowRecordLogs
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the workflow record
        explode: false
        in: path
        name: record
        required: true
        schema:
          type: string
        style: simple
      - description: Specified the step filter
        explode: true
        in: query
        name: step
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get the workflow step logs
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/users/{username}/enable:
    get:
      deprecated: false
      operationId: enableUser
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: enable a user
      tags:
      - users
      x-apifox-folder: users
      x-apifox-status: released
  /api/v1/applications/{appName}/statistics:
    get:
      deprecated: false
      operationId: applicationStatistics
      parameters:
      - description: 'identifier of the application '
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationStatisticsResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: 'detail one application '
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/users/{username}/disable:
    get:
      deprecated: false
      operationId: disableUser
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: disable a user
      tags:
      - users
      x-apifox-folder: users
      x-apifox-status: released
  /api/v1/auth/user_info:
    get:
      deprecated: false
      operationId: getLoginUserInfo
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1LoginUserInfoResponse'
          description: 成功
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: "400"
      summary: get login user detail info
      tags:
      - authentication
      x-apifox-folder: authentication
      x-apifox-status: released
  /api/v1/addons/{addonName}/update:
    put:
      deprecated: false
      operationId: updateAddon
      parameters:
      - description: addon name to update
        explode: false
        in: path
        name: addonName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1EnableAddonRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1AddonStatusResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: update an addon
      tags:
      - addon
      x-apifox-folder: addon
      x-apifox-status: released
  /api/v1/applications/{appName}/records:
    get:
      deprecated: false
      operationId: listApplicationRecords
      parameters:
      - description: identifier of the application.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list application records
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/repository/charts/{chart}/versions:
    get:
      deprecated: false
      operationId: listVersions
      parameters:
      - explode: false
        in: path
        name: chart
        required: true
        schema:
          type: string
        style: simple
      - description: helm repository url
        explode: true
        in: query
        name: repoUrl
        required: false
        schema:
          type: string
        style: form
      - description: secret of the repo
        explode: true
        in: query
        name: secretName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ChartVersionListResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: list versions
      tags:
      - repository
      x-apifox-folder: repository
      x-apifox-status: released
  /api/v1/repository/image/info:
    get:
      deprecated: false
      operationId: getImageInfo
      parameters:
      - description: the config project
        explode: true
        in: query
        name: project
        required: true
        schema:
          type: string
        style: form
      - description: the image name
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: the secret name of the image repository
        explode: true
        in: query
        name: secretName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ImageInfo'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: get the oci repos
      tags:
      - repository
      x-apifox-folder: repository
      x-apifox-status: released
  /api/v1/webhook/{token}:
    post:
      deprecated: false
      operationId: handleApplicationWebhook
      parameters:
      - description: webhook token
        explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1HandleApplicationTriggerWebhookRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1ApplicationDeployResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: handle application webhook request
      tags:
      - webhook
      x-apifox-folder: webhook
      x-apifox-status: released
  /api/v1/projects/{projectName}/pipelines/{pipelineName}/runs/{runName}/terminate:
    post:
      deprecated: false
      operationId: terminatePipelineRun
      parameters:
      - description: project name
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline name
        explode: false
        in: path
        name: pipelineName
        required: true
        schema:
          type: string
        style: simple
      - description: pipeline run name
        explode: false
        in: path
        name: runName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: resume suspend pipeline run
      tags:
      - pipeline
      x-apifox-folder: pipeline
      x-apifox-status: released
  /api/v1/definitions/{definitionName}/status:
    put:
      deprecated: false
      operationId: updateDefinitionStatus
      parameters:
      - explode: false
        in: path
        name: definitionName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateDefinitionStatusRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1SimpleResponse'
          description: OK
        "500":
          content:
            application/json:
              examples: {}
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bummer, something went wrong
      summary: Update the status for a definition
      tags:
      - definition
      x-apifox-folder: definition
      x-apifox-status: released
  /api/v1/applications/{appName}/revisions/{revision}:
    get:
      deprecated: false
      operationId: detailApplicationRevision
      parameters:
      - description: identifier of the application
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the application revision
        explode: false
        in: path
        name: revision
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1DetailRevisionResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: detail revision for application
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
  /api/v1/applications/{appName}/components/{compName}/traits:
    post:
      deprecated: false
      operationId: addApplicationTrait
      parameters:
      - description: identifier of the application
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: identifier of the component
        explode: false
        in: path
        name: compName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateApplicationTraitRequest'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/V1EmptyResponse'
          description: OK
        "400":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/BcodeBcode'
          description: Bad Request
      summary: add trait for a component
      tags:
      - application
      x-apifox-folder: application
      x-apifox-status: released
components:
  schemas:
    V1UpdateWorkflowRequest:
      example:
        mode: mode
        default: true
        alias: alias
        description: description
        steps:
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          subSteps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          alias: alias
          description: description
          type: type
          if: if
          properties: '{}'
          timeout: timeout
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          subSteps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          alias: alias
          description: description
          type: type
          if: if
          properties: '{}'
          timeout: timeout
        subMode: subMode
      properties:
        alias:
          type: string
        default:
          type: boolean
        description:
          type: string
        mode:
          type: string
        steps:
          items:
            $ref: '#/components/schemas/V1WorkflowStep'
          type: array
        subMode:
          type: string
      required:
      - default
      - mode
      - subMode
      type: object
      x-apifox-orders:
      - alias
      - default
      - description
      - mode
      - steps
      - subMode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CompareLatestWithRunningOption:
      example:
        env: env
      properties:
        env:
          type: string
      required:
      - env
      type: object
      x-apifox-orders:
      - env
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1Platform:
      example:
        features:
        - features
        - features
        os: os
        os.features:
        - os.features
        - os.features
        variant: variant
        architecture: architecture
        os.version: os.version
      properties:
        architecture:
          type: string
        features:
          items:
            type: string
          type: array
        os:
          type: string
        os.features:
          items:
            type: string
          type: array
        os.version:
          type: string
        variant:
          type: string
      required:
      - architecture
      - os
      type: object
      x-apifox-orders:
      - architecture
      - features
      - os
      - os.features
      - os.version
      - variant
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DetailTargetResponse:
      properties:
        alias:
          type: string
        appNum:
          format: int64
          type: integer
        cluster:
          $ref: '#/components/schemas/V1ClusterTarget'
        clusterAlias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        project:
          $ref: '#/components/schemas/V1NameAlias'
        updateTime:
          format: date-time
          type: string
        variable:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      required:
      - createTime
      - name
      - project
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - appNum
      - cluster
      - clusterAlias
      - createTime
      - description
      - name
      - project
      - updateTime
      - variable
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListTargetResponse:
      properties:
        targets:
          items:
            $ref: '#/components/schemas/V1TargetBase'
          type: array
        total:
          format: int64
          type: integer
      required:
      - targets
      - total
      type: object
      x-apifox-orders:
      - targets
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationTrait:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        alias: alias
        description: description
        updateTime: 2000-01-23T04:56:07.000+00:00
        type: type
        properties: '{}'
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        properties:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        type:
          type: string
        updateTime:
          format: date-time
          type: string
      required:
      - createTime
      - properties
      - type
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - properties
      - type
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1GetPipelineResponse:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        alias: alias
        description: description
        project:
          name: name
          alias: alias
        spec:
          mode:
            subSteps: subSteps
            steps: steps
          steps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            description: description
            type: type
            timeout: timeout
            meta:
              alias: alias
            name: name
            alias: alias
            orderIndex: 0
            if: if
            properties: '{}'
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            description: description
            type: type
            timeout: timeout
            meta:
              alias: alias
            name: name
            alias: alias
            orderIndex: 0
            if: if
            properties: '{}'
        info:
          lastRun:
            pipelineName: pipelineName
            contextName: contextName
            pipelineRunName: pipelineRunName
            record: 0
            contextValues:
            - value: value
              key: key
            - value: value
              key: key
            project:
              name: name
              alias: alias
            spec:
              mode:
                subSteps: subSteps
                steps: steps
              context: context
              workflowSpec:
                steps:
                - outputs:
                  - name: name
                    valueFrom: valueFrom
                  - name: name
                    valueFrom: valueFrom
                  dependsOn:
                  - dependsOn
                  - dependsOn
                  subSteps:
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                  inputs:
                  - parameterKey: parameterKey
                    from: from
                  - parameterKey: parameterKey
                    from: from
                  meta:
                    alias: alias
                  name: name
                  type: type
                  if: if
                  properties: properties
                  timeout: timeout
                - outputs:
                  - name: name
                    valueFrom: valueFrom
                  - name: name
                    valueFrom: valueFrom
                  dependsOn:
                  - dependsOn
                  - dependsOn
                  subSteps:
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                  inputs:
                  - parameterKey: parameterKey
                    from: from
                  - parameterKey: parameterKey
                    from: from
                  meta:
                    alias: alias
                  name: name
                  type: type
                  if: if
                  properties: properties
                  timeout: timeout
              workflowRef: workflowRef
            status:
              mode:
                subSteps: subSteps
                steps: steps
              suspend: true
              contextBackend:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              suspendState: suspendState
              finished: true
              startTime: startTime
              endTime: endTime
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              message: message
              steps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                subSteps:
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                subSteps:
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                name: name
                id: id
                message: message
                type: type
              terminated: true
              status: status
          runStat:
            activeNum: 6
            total:
              fail: 1
              total: 5
              success: 5
            week:
            - fail: 1
              total: 5
              success: 5
            - fail: 1
              total: 5
              success: 5
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        info:
          $ref: '#/components/schemas/V1PipelineInfo'
        name:
          type: string
        project:
          $ref: '#/components/schemas/V1NameAlias'
        spec:
          $ref: '#/components/schemas/ModelWorkflowSpec'
      required:
      - alias
      - createTime
      - description
      - info
      - name
      - project
      - spec
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - info
      - name
      - project
      - spec
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DexConfigResponse:
      example:
        clientID: clientID
        redirectURL: redirectURL
        clientSecret: clientSecret
        issuer: issuer
      properties:
        clientID:
          type: string
        clientSecret:
          type: string
        issuer:
          type: string
        redirectURL:
          type: string
      required:
      - clientID
      - clientSecret
      - issuer
      - redirectURL
      type: object
      x-apifox-orders:
      - clientID
      - clientSecret
      - issuer
      - redirectURL
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateDefinitionStatusRequest:
      example:
        hiddenInUI: true
        type: type
      properties:
        hiddenInUI:
          type: boolean
        type:
          type: string
      required:
      - hiddenInUI
      - type
      type: object
      x-apifox-orders:
      - hiddenInUI
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1SystemVersion:
      example:
        gitVersion: gitVersion
        velaVersion: velaVersion
      properties:
        gitVersion:
          type: string
        velaVersion:
          type: string
      required:
      - gitVersion
      - velaVersion
      type: object
      x-apifox-orders:
      - gitVersion
      - velaVersion
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1GetPipelineRunLogResponse:
      example:
        phase: phase
        log: log
        name: name
        id: id
        source: source
        type: type
      properties:
        id:
          type: string
        log:
          type: string
        name:
          type: string
        phase:
          type: string
        source:
          type: string
        type:
          type: string
      required:
      - id
      - log
      - name
      - phase
      - source
      - type
      type: object
      x-apifox-orders:
      - id
      - log
      - name
      - phase
      - source
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AddonGitlabAddonSource:
      example:
        path: path
        repo: repo
        url: url
        token: token
      properties:
        path:
          type: string
        repo:
          type: string
        token:
          type: string
        url:
          type: string
      type: object
      x-apifox-orders:
      - path
      - repo
      - token
      - url
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListImageRegistryResponse:
      example:
        registries:
        - secretName: secretName
          domain: domain
          name: name
        - secretName: secretName
          domain: domain
          name: name
      properties:
        registries:
          items:
            $ref: '#/components/schemas/V1ImageRegistry'
          type: array
      required:
      - registries
      type: object
      x-apifox-orders:
      - registries
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListRevisionsResponse:
      example:
        total: 0
        revisions:
        - note: note
          reason: reason
          deployUser:
            name: name
            alias: alias
          codeInfo:
            commit: commit
            branch: branch
            user: user
          createTime: 2000-01-23T04:56:07.000+00:00
          envName: envName
          imageInfo:
            resource:
              createTime: 2000-01-23T04:56:07.000+00:00
              digest: digest
              tag: tag
              url: url
            repository:
              createTime: 2000-01-23T04:56:07.000+00:00
              name: name
              namespace: namespace
              fullName: fullName
              region: region
              type: type
            type: type
          triggerType: triggerType
          version: version
          status: status
        - note: note
          reason: reason
          deployUser:
            name: name
            alias: alias
          codeInfo:
            commit: commit
            branch: branch
            user: user
          createTime: 2000-01-23T04:56:07.000+00:00
          envName: envName
          imageInfo:
            resource:
              createTime: 2000-01-23T04:56:07.000+00:00
              digest: digest
              tag: tag
              url: url
            repository:
              createTime: 2000-01-23T04:56:07.000+00:00
              name: name
              namespace: namespace
              fullName: fullName
              region: region
              type: type
            type: type
          triggerType: triggerType
          version: version
          status: status
      properties:
        revisions:
          items:
            $ref: '#/components/schemas/V1ApplicationRevisionBase'
          type: array
        total:
          format: int64
          type: integer
      required:
      - revisions
      - total
      type: object
      x-apifox-orders:
      - revisions
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonKubeParameter:
      example:
        fieldPaths:
        - fieldPaths
        - fieldPaths
        name: name
        description: description
        type: type
        required: true
      properties:
        description:
          type: string
        fieldPaths:
          items:
            type: string
          type: array
        name:
          type: string
        required:
          type: boolean
        type:
          type: string
      required:
      - fieldPaths
      - name
      - type
      type: object
      x-apifox-orders:
      - description
      - fieldPaths
      - name
      - required
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListAddonResponse:
      example:
        addons:
        - Meta:
            system:
              kubernetes: kubernetes
              vela: vela
            needNamespace:
            - needNamespace
            - needNamespace
            icon: icon
            name: name
            description: description
            invisible: true
            deployTo:
              disableControlPlane: true
              runtime_cluster: true
              runtimeCluster: true
            version: version
            url: url
            dependencies:
            - name: name
              version: version
            - name: name
              version: version
            tags:
            - tags
            - tags
          registryName: registryName
        - Meta:
            system:
              kubernetes: kubernetes
              vela: vela
            needNamespace:
            - needNamespace
            - needNamespace
            icon: icon
            name: name
            description: description
            invisible: true
            deployTo:
              disableControlPlane: true
              runtime_cluster: true
              runtimeCluster: true
            version: version
            url: url
            dependencies:
            - name: name
              version: version
            - name: name
              version: version
            tags:
            - tags
            - tags
          registryName: registryName
        message: message
      properties:
        addons:
          items:
            $ref: '#/components/schemas/V1AddonInfo'
          type: array
        message:
          type: string
      required:
      - addons
      type: object
      x-apifox-orders:
      - addons
      - message
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationTriggerBase:
      example:
        registry: registry
        payloadType: payloadType
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        alias: alias
        description: description
        updateTime: 2000-01-23T04:56:07.000+00:00
        workflowName: workflowName
        componentName: componentName
        type: type
        token: token
      properties:
        alias:
          type: string
        componentName:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        payloadType:
          type: string
        registry:
          type: string
        token:
          type: string
        type:
          type: string
        updateTime:
          format: date-time
          type: string
        workflowName:
          type: string
      required:
      - createTime
      - name
      - payloadType
      - registry
      - token
      - type
      - updateTime
      - workflowName
      type: object
      x-apifox-orders:
      - alias
      - componentName
      - createTime
      - description
      - name
      - payloadType
      - registry
      - token
      - type
      - updateTime
      - workflowName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1beta1ApplicationSpec:
      example:
        components:
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          traits:
          - type: type
            properties: properties
          - type: type
            properties: properties
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          name: name
          scopes:
            key: scopes
          type: type
          properties: properties
          externalRevision: externalRevision
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          traits:
          - type: type
            properties: properties
          - type: type
            properties: properties
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          name: name
          scopes:
            key: scopes
          type: type
          properties: properties
          externalRevision: externalRevision
        workflow:
          mode:
            subSteps: subSteps
            steps: steps
          ref: ref
          steps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
        policies:
        - name: name
          type: type
          properties: properties
        - name: name
          type: type
          properties: properties
      properties:
        components:
          items:
            $ref: '#/components/schemas/CommonApplicationComponent'
          type: array
        policies:
          items:
            $ref: '#/components/schemas/V1beta1AppPolicy'
          type: array
        workflow:
          $ref: '#/components/schemas/V1beta1Workflow'
      required:
      - components
      type: object
      x-apifox-orders:
      - components
      - policies
      - workflow
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateApplicationRequest:
      example:
        component:
          outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          componentType: componentType
          traits:
          - alias: alias
            description: description
            type: type
            properties: properties
          - alias: alias
            description: description
            type: type
            properties: properties
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          icon: icon
          name: name
          alias: alias
          description: description
          properties: properties
          labels:
            key: labels
        icon: icon
        name: name
        alias: alias
        description: description
        envBinding:
        - name: name
        - name: name
        project: project
        labels:
          key: labels
      properties:
        alias:
          type: string
        component:
          $ref: '#/components/schemas/V1CreateComponentRequest'
        description:
          type: string
        envBinding:
          items:
            $ref: '#/components/schemas/V1EnvBinding'
          type: array
        icon:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
        project:
          type: string
      required:
      - component
      - icon
      - name
      - project
      type: object
      x-apifox-orders:
      - alias
      - component
      - description
      - envBinding
      - icon
      - labels
      - name
      - project
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonRevision:
      example:
        name: name
        revisionHash: revisionHash
        revision: 0
      properties:
        name:
          type: string
        revision:
          format: int64
          type: integer
        revisionHash:
          type: string
      required:
      - name
      - revision
      type: object
      x-apifox-orders:
      - name
      - revision
      - revisionHash
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateProjectUserRequest:
      example:
        userRoles:
        - userRoles
        - userRoles
      properties:
        userRoles:
          items:
            type: string
          type: array
      required:
      - userRoles
      type: object
      x-apifox-orders:
      - userRoles
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1beta1WorkflowStepDefinitionSpec:
      properties:
        definitionRef:
          $ref: '#/components/schemas/CommonDefinitionReference'
        schematic:
          $ref: '#/components/schemas/CommonSchematic'
      type: object
      x-apifox-orders:
      - definitionRef
      - schematic
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1Config:
      example:
        StopSignal: StopSignal
        User: User
        Entrypoint:
        - Entrypoint
        - Entrypoint
        AttachStderr: true
        ArgsEscaped: true
        Hostname: Hostname
        Labels:
          key: Labels
        OpenStdin: true
        Healthcheck:
          Test:
          - Test
          - Test
          Retries: 6
          Timeout: 5
          Interval: 0
          StartPeriod: 1
        Env:
        - Env
        - Env
        Image: Image
        MacAddress: MacAddress
        NetworkDisabled: true
        ExposedPorts:
          key: '{}'
        StdinOnce: true
        AttachStdout: true
        WorkingDir: WorkingDir
        Shell:
        - Shell
        - Shell
        Volumes:
          key: '{}'
        OnBuild:
        - OnBuild
        - OnBuild
        AttachStdin: true
        Domainname: Domainname
        Tty: true
        Cmd:
        - Cmd
        - Cmd
      properties:
        ArgsEscaped:
          type: boolean
        AttachStderr:
          type: boolean
        AttachStdin:
          type: boolean
        AttachStdout:
          type: boolean
        Cmd:
          items:
            type: string
          type: array
        Domainname:
          type: string
        Entrypoint:
          items:
            type: string
          type: array
        Env:
          items:
            type: string
          type: array
        ExposedPorts:
          additionalProperties:
            $ref: '#/definitions/42676794'
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        Healthcheck:
          $ref: '#/components/schemas/V1HealthConfig'
        Hostname:
          type: string
        Image:
          type: string
        Labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        MacAddress:
          type: string
        NetworkDisabled:
          type: boolean
        OnBuild:
          items:
            type: string
          type: array
        OpenStdin:
          type: boolean
        Shell:
          items:
            type: string
          type: array
        StdinOnce:
          type: boolean
        StopSignal:
          type: string
        Tty:
          type: boolean
        User:
          type: string
        Volumes:
          additionalProperties:
            $ref: '#/definitions/42676798'
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        WorkingDir:
          type: string
      type: object
      x-apifox-orders:
      - ArgsEscaped
      - AttachStderr
      - AttachStdin
      - AttachStdout
      - Cmd
      - Domainname
      - Entrypoint
      - Env
      - ExposedPorts
      - Healthcheck
      - Hostname
      - Image
      - Labels
      - MacAddress
      - NetworkDisabled
      - OnBuild
      - OpenStdin
      - Shell
      - StdinOnce
      - StopSignal
      - Tty
      - User
      - Volumes
      - WorkingDir
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListUserResponse:
      example:
        total: 0
        users:
        - lastLoginTime: 2000-01-23T04:56:07.000+00:00
          projects:
          - owner:
              name: name
              alias: alias
            createTime: 2000-01-23T04:56:07.000+00:00
            name: name
            namespace: namespace
            alias: alias
            description: description
            updateTime: 2000-01-23T04:56:07.000+00:00
          - owner:
              name: name
              alias: alias
            createTime: 2000-01-23T04:56:07.000+00:00
            name: name
            namespace: namespace
            alias: alias
            description: description
            updateTime: 2000-01-23T04:56:07.000+00:00
          createTime: 2000-01-23T04:56:07.000+00:00
          roles:
          - name: name
            alias: alias
          - name: name
            alias: alias
          name: name
          alias: alias
          disabled: true
          email: email
        - lastLoginTime: 2000-01-23T04:56:07.000+00:00
          projects:
          - owner:
              name: name
              alias: alias
            createTime: 2000-01-23T04:56:07.000+00:00
            name: name
            namespace: namespace
            alias: alias
            description: description
            updateTime: 2000-01-23T04:56:07.000+00:00
          - owner:
              name: name
              alias: alias
            createTime: 2000-01-23T04:56:07.000+00:00
            name: name
            namespace: namespace
            alias: alias
            description: description
            updateTime: 2000-01-23T04:56:07.000+00:00
          createTime: 2000-01-23T04:56:07.000+00:00
          roles:
          - name: name
            alias: alias
          - name: name
            alias: alias
          name: name
          alias: alias
          disabled: true
          email: email
      properties:
        total:
          format: int64
          type: integer
        users:
          items:
            $ref: '#/components/schemas/V1DetailUserResponse'
          type: array
      required:
      - total
      - users
      type: object
      x-apifox-orders:
      - total
      - users
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1SystemInfo:
      properties:
        dexUserDefaultPlatformRoles:
          items:
            type: string
          type: array
        dexUserDefaultProjects:
          items:
            $ref: '#/components/schemas/ModelProjectRef'
          type: array
        enableCollection:
          type: boolean
        installTime:
          format: date-time
          type: string
        loginType:
          type: string
        platformID:
          type: string
      required:
      - enableCollection
      - loginType
      - platformID
      type: object
      x-apifox-orders:
      - dexUserDefaultPlatformRoles
      - dexUserDefaultProjects
      - enableCollection
      - installTime
      - loginType
      - platformID
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ProjectBase:
      example:
        owner:
          name: name
          alias: alias
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        namespace: namespace
        alias: alias
        description: description
        updateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        namespace:
          type: string
        owner:
          $ref: '#/components/schemas/V1NameAlias'
        updateTime:
          format: date-time
          type: string
      required:
      - alias
      - createTime
      - description
      - name
      - namespace
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - name
      - namespace
      - owner
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1Hash:
      example:
        Hex: Hex
        Algorithm: Algorithm
      properties:
        Algorithm:
          type: string
        Hex:
          type: string
      required:
      - Algorithm
      - Hex
      type: object
      x-apifox-orders:
      - Algorithm
      - Hex
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1LoginResponse:
      example:
        accessToken: accessToken
        user:
          lastLoginTime: 2000-01-23T04:56:07.000+00:00
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          alias: alias
          disabled: true
          email: email
        refreshToken: refreshToken
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        user:
          $ref: '#/components/schemas/V1UserBase'
      required:
      - accessToken
      - refreshToken
      - user
      type: object
      x-apifox-orders:
      - accessToken
      - refreshToken
      - user
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateCloudClusterRequest:
      example:
        accessKeyID: accessKeyID
        workerNumber: 1
        accessKeySecret: accessKeySecret
        zone: zone
        memoryPerWorker: 6
        name: name
        cpuCoresPerWorker: 0
      properties:
        accessKeyID:
          type: string
        accessKeySecret:
          type: string
        cpuCoresPerWorker:
          format: int64
          type: integer
        memoryPerWorker:
          format: int64
          type: integer
        name:
          type: string
        workerNumber:
          format: int32
          type: integer
        zone:
          type: string
      required:
      - accessKeyID
      - accessKeySecret
      - cpuCoresPerWorker
      - memoryPerWorker
      - name
      - workerNumber
      - zone
      type: object
      x-apifox-orders:
      - accessKeyID
      - accessKeySecret
      - cpuCoresPerWorker
      - memoryPerWorker
      - name
      - workerNumber
      - zone
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateTargetRequest:
      example:
        variable: '{}'
        alias: alias
        description: description
      properties:
        alias:
          type: string
        description:
          type: string
        variable:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      type: object
      x-apifox-orders:
      - alias
      - description
      - variable
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CloudShellPrepareResponse:
      properties:
        message:
          type: string
        status:
          type: string
      required:
      - message
      - status
      type: object
      x-apifox-orders:
      - message
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AddonDeployTo:
      example:
        disableControlPlane: true
        runtime_cluster: true
        runtimeCluster: true
      properties:
        disableControlPlane:
          type: boolean
        runtimeCluster:
          type: boolean
        runtime_cluster:
          type: boolean
      required:
      - disableControlPlane
      - runtimeCluster
      type: object
      x-apifox-orders:
      - disableControlPlane
      - runtimeCluster
      - runtime_cluster
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ChartDependencyImportValues:
      type: string
      x-apifox-folder: Schemas
    V1AddonBaseStatus:
      example:
        phase: phase
        name: name
      properties:
        name:
          type: string
        phase:
          type: string
      required:
      - name
      - phase
      type: object
      x-apifox-orders:
      - name
      - phase
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListApplicationTriggerResponse:
      example:
        triggers:
        - registry: registry
          payloadType: payloadType
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          workflowName: workflowName
          componentName: componentName
          type: type
          token: token
        - registry: registry
          payloadType: payloadType
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          workflowName: workflowName
          componentName: componentName
          type: type
          token: token
      properties:
        triggers:
          items:
            $ref: '#/components/schemas/V1ApplicationTriggerBase'
          type: array
      required:
      - triggers
      type: object
      x-apifox-orders:
      - triggers
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateRoleRequest:
      example:
        permissions:
        - permissions
        - permissions
        name: name
        alias: alias
      properties:
        alias:
          type: string
        name:
          type: string
        permissions:
          items:
            type: string
          type: array
      required:
      - alias
      - name
      - permissions
      type: object
      x-apifox-orders:
      - alias
      - name
      - permissions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AddonGiteeAddonSource:
      example:
        path: path
        url: url
        token: token
      properties:
        path:
          type: string
        token:
          type: string
        url:
          type: string
      type: object
      x-apifox-orders:
      - path
      - token
      - url
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListConfigDistributionResponse:
      example:
        distributions:
        - configs:
          - name: name
            namespace: namespace
          - name: name
            namespace: namespace
          application:
            Namespace: Namespace
            Name: Name
          name: name
          namespace: namespace
          createdTime: 2000-01-23T04:56:07.000+00:00
          targets:
          - clusterName: clusterName
            namespace: namespace
          - clusterName: clusterName
            namespace: namespace
          status:
            appliedResources:
            - cluster: cluster
              uid: uid
              creator: creator
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - cluster: cluster
              uid: uid
              creator: creator
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            components:
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            workflow:
              mode: mode
              suspend: true
              contextBackend:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              appRevision: appRevision
              suspendState: suspendState
              finished: true
              startTime: startTime
              endTime: endTime
              message: message
              steps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                subSteps:
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                subSteps:
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                name: name
                id: id
                message: message
                type: type
              terminated: true
              status: status
            services:
            - cluster: cluster
              traits:
              - healthy: true
                message: message
                type: type
              - healthy: true
                message: message
                type: type
              healthy: true
              name: name
              namespace: namespace
              workloadDefinition:
                apiVersion: apiVersion
                kind: kind
              scopes:
              - uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              - uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              env: env
              message: message
            - cluster: cluster
              traits:
              - healthy: true
                message: message
                type: type
              - healthy: true
                message: message
                type: type
              healthy: true
              name: name
              namespace: namespace
              workloadDefinition:
                apiVersion: apiVersion
                kind: kind
              scopes:
              - uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              - uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              env: env
              message: message
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            latestRevision:
              name: name
              revisionHash: revisionHash
              revision: 0
            observedGeneration: 6
            policy:
            - name: name
              type: type
              status: status
            - name: name
              type: type
              status: status
            status: status
        - configs:
          - name: name
            namespace: namespace
          - name: name
            namespace: namespace
          application:
            Namespace: Namespace
            Name: Name
          name: name
          namespace: namespace
          createdTime: 2000-01-23T04:56:07.000+00:00
          targets:
          - clusterName: clusterName
            namespace: namespace
          - clusterName: clusterName
            namespace: namespace
          status:
            appliedResources:
            - cluster: cluster
              uid: uid
              creator: creator
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - cluster: cluster
              uid: uid
              creator: creator
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            components:
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            workflow:
              mode: mode
              suspend: true
              contextBackend:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              appRevision: appRevision
              suspendState: suspendState
              finished: true
              startTime: startTime
              endTime: endTime
              message: message
              steps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                subSteps:
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                subSteps:
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                name: name
                id: id
                message: message
                type: type
              terminated: true
              status: status
            services:
            - cluster: cluster
              traits:
              - healthy: true
                message: message
                type: type
              - healthy: true
                message: message
                type: type
              healthy: true
              name: name
              namespace: namespace
              workloadDefinition:
                apiVersion: apiVersion
                kind: kind
              scopes:
              - uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              - uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              env: env
              message: message
            - cluster: cluster
              traits:
              - healthy: true
                message: message
                type: type
              - healthy: true
                message: message
                type: type
              healthy: true
              name: name
              namespace: namespace
              workloadDefinition:
                apiVersion: apiVersion
                kind: kind
              scopes:
              - uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              - uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              env: env
              message: message
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            latestRevision:
              name: name
              revisionHash: revisionHash
              revision: 0
            observedGeneration: 6
            policy:
            - name: name
              type: type
              status: status
            - name: name
              type: type
              status: status
            status: status
      properties:
        distributions:
          items:
            $ref: '#/components/schemas/ConfigDistribution'
          type: array
      required:
      - distributions
      type: object
      x-apifox-orders:
      - distributions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1alpha1WorkflowSpec:
      example:
        steps:
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          subSteps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          type: type
          if: if
          properties: properties
          timeout: timeout
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          subSteps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          type: type
          if: if
          properties: properties
          timeout: timeout
      properties:
        steps:
          items:
            $ref: '#/components/schemas/V1alpha1WorkflowStep'
          type: array
      type: object
      x-apifox-orders:
      - steps
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UtilsConditionValue:
      type: string
      x-apifox-folder: Schemas
    V1Env:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        namespace: namespace
        alias: alias
        description: description
        project:
          name: name
          alias: alias
        updateTime: 2000-01-23T04:56:07.000+00:00
        targets:
        - name: name
          alias: alias
        - name: name
          alias: alias
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        namespace:
          type: string
        project:
          $ref: '#/components/schemas/V1NameAlias'
        targets:
          items:
            $ref: '#/components/schemas/V1NameAlias'
          type: array
        updateTime:
          format: date-time
          type: string
      required:
      - alias
      - createTime
      - name
      - namespace
      - project
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - name
      - namespace
      - project
      - targets
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListAddonRegistryResponse:
      example:
        registries:
        - git:
            path: path
            url: url
            token: token
          name: name
          gitlab:
            path: path
            repo: repo
            url: url
            token: token
          gitee:
            path: path
            url: url
            token: token
          helm:
            password: password
            insecureSkipTLS: true
            url: url
            username: username
          oss:
            bucket: bucket
            path: path
            end_point: end_point
        - git:
            path: path
            url: url
            token: token
          name: name
          gitlab:
            path: path
            repo: repo
            url: url
            token: token
          gitee:
            path: path
            url: url
            token: token
          helm:
            password: password
            insecureSkipTLS: true
            url: url
            username: username
          oss:
            bucket: bucket
            path: path
            end_point: end_point
      properties:
        registries:
          items:
            $ref: '#/components/schemas/V1AddonRegistry'
          type: array
      required:
      - registries
      type: object
      x-apifox-orders:
      - registries
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateConfigDistributionRequest:
      example:
        configs:
        - name: name
          namespace: namespace
        - name: name
          namespace: namespace
        name: name
        targets:
        - clusterName: clusterName
          namespace: namespace
        - clusterName: clusterName
          namespace: namespace
      properties:
        configs:
          items:
            $ref: '#/components/schemas/V1NamespacedName'
          type: array
        name:
          type: string
        targets:
          items:
            $ref: '#/components/schemas/V1ClusterTarget'
          type: array
      required:
      - configs
      - name
      - targets
      type: object
      x-apifox-orders:
      - configs
      - name
      - targets
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1alpha1WorkflowRunStatus:
      example:
        mode:
          subSteps: subSteps
          steps: steps
        suspend: true
        contextBackend:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        suspendState: suspendState
        finished: true
        startTime: startTime
        endTime: endTime
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        message: message
        steps:
        - lastExecuteTime: lastExecuteTime
          phase: phase
          firstExecuteTime: firstExecuteTime
          reason: reason
          subSteps:
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            name: name
            id: id
            message: message
            type: type
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            name: name
            id: id
            message: message
            type: type
          name: name
          id: id
          message: message
          type: type
        - lastExecuteTime: lastExecuteTime
          phase: phase
          firstExecuteTime: firstExecuteTime
          reason: reason
          subSteps:
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            name: name
            id: id
            message: message
            type: type
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            name: name
            id: id
            message: message
            type: type
          name: name
          id: id
          message: message
          type: type
        terminated: true
        status: status
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/ConditionCondition'
          type: array
        contextBackend:
          $ref: '#/components/schemas/V1ObjectReference'
        endTime:
          type: string
        finished:
          type: boolean
        message:
          type: string
        mode:
          $ref: '#/components/schemas/V1alpha1WorkflowExecuteMode'
        startTime:
          type: string
        status:
          type: string
        steps:
          items:
            $ref: '#/components/schemas/V1alpha1WorkflowStepStatus'
          type: array
        suspend:
          type: boolean
        suspendState:
          type: string
        terminated:
          type: boolean
      required:
      - finished
      - mode
      - status
      - suspend
      - terminated
      type: object
      x-apifox-orders:
      - conditions
      - contextBackend
      - endTime
      - finished
      - message
      - mode
      - startTime
      - status
      - steps
      - suspend
      - suspendState
      - terminated
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ComponentBase:
      example:
        outputs:
        - name: name
          valueFrom: valueFrom
        - name: name
          valueFrom: valueFrom
        componentType: componentType
        creator: creator
        traits:
        - createTime: 2000-01-23T04:56:07.000+00:00
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          type: type
          properties: '{}'
        - createTime: 2000-01-23T04:56:07.000+00:00
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          type: type
          properties: '{}'
        dependsOn:
        - dependsOn
        - dependsOn
        inputs:
        - parameterKey: parameterKey
          from: from
        - parameterKey: parameterKey
          from: from
        icon: icon
        description: description
        main: true
        updateTime: 2000-01-23T04:56:07.000+00:00
        labels:
          key: labels
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        alias: alias
        workloadType:
          definition:
            apiVersion: apiVersion
            kind: kind
          type: type
      properties:
        alias:
          type: string
        componentType:
          type: string
        createTime:
          format: date-time
          type: string
        creator:
          type: string
        dependsOn:
          items:
            type: string
          type: array
        description:
          type: string
        icon:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/V1alpha1InputItem'
          type: array
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        main:
          type: boolean
        name:
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/V1alpha1OutputItem'
          type: array
        traits:
          items:
            $ref: '#/components/schemas/V1ApplicationTrait'
          type: array
        updateTime:
          format: date-time
          type: string
        workloadType:
          $ref: '#/components/schemas/CommonWorkloadTypeDescriptor'
      required:
      - alias
      - componentType
      - createTime
      - dependsOn
      - description
      - main
      - name
      - traits
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - componentType
      - createTime
      - creator
      - dependsOn
      - description
      - icon
      - inputs
      - labels
      - main
      - name
      - outputs
      - traits
      - updateTime
      - workloadType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationResourceInfo:
      example:
        componentNum: 0
      properties:
        componentNum:
          format: int64
          type: integer
      required:
      - componentNum
      type: object
      x-apifox-orders:
      - componentNum
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1RoleBase:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        permissions:
        - name: name
          alias: alias
        - name: name
          alias: alias
        name: name
        alias: alias
        updateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        name:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/V1NameAlias'
          type: array
        updateTime:
          format: date-time
          type: string
      required:
      - createTime
      - name
      - permissions
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - name
      - permissions
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ConnectCloudClusterRequest:
      example:
        accessKeyID: accessKeyID
        accessKeySecret: accessKeySecret
        icon: icon
        name: name
        alias: alias
        description: description
        clusterID: clusterID
        labels:
          key: labels
      properties:
        accessKeyID:
          type: string
        accessKeySecret:
          type: string
        alias:
          type: string
        clusterID:
          type: string
        description:
          type: string
        icon:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
      required:
      - accessKeyID
      - accessKeySecret
      - clusterID
      - icon
      - name
      type: object
      x-apifox-orders:
      - accessKeyID
      - accessKeySecret
      - alias
      - clusterID
      - description
      - icon
      - labels
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateUserRequest:
      example:
        password: password
        roles:
        - roles
        - roles
        alias: alias
        email: email
      properties:
        alias:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          items:
            type: string
          type: array
      required:
      - roles
      type: object
      x-apifox-orders:
      - alias
      - email
      - password
      - roles
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1alpha1WorkflowStepStatus:
      example:
        lastExecuteTime: lastExecuteTime
        phase: phase
        firstExecuteTime: firstExecuteTime
        reason: reason
        subSteps:
        - lastExecuteTime: lastExecuteTime
          phase: phase
          firstExecuteTime: firstExecuteTime
          reason: reason
          name: name
          id: id
          message: message
          type: type
        - lastExecuteTime: lastExecuteTime
          phase: phase
          firstExecuteTime: firstExecuteTime
          reason: reason
          name: name
          id: id
          message: message
          type: type
        name: name
        id: id
        message: message
        type: type
      properties:
        firstExecuteTime:
          type: string
        id:
          type: string
        lastExecuteTime:
          type: string
        message:
          type: string
        name:
          type: string
        phase:
          type: string
        reason:
          type: string
        subSteps:
          items:
            $ref: '#/components/schemas/V1alpha1StepStatus'
          type: array
        type:
          type: string
      required:
      - id
      type: object
      x-apifox-orders:
      - firstExecuteTime
      - id
      - lastExecuteTime
      - message
      - name
      - phase
      - reason
      - subSteps
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListApplicationEnvBinding:
      example:
        envBindings:
        - targetNames:
          - targetNames
          - targetNames
          workflow:
            name: name
            alias: alias
          createTime: 2000-01-23T04:56:07.000+00:00
          appDeployNamespace: appDeployNamespace
          name: name
          alias: alias
          appDeployName: appDeployName
          componentSelector:
            components:
            - components
            - components
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          targets:
          - cluster:
              clusterName: clusterName
              namespace: namespace
            name: name
            alias: alias
          - cluster:
              clusterName: clusterName
              namespace: namespace
            name: name
            alias: alias
        - targetNames:
          - targetNames
          - targetNames
          workflow:
            name: name
            alias: alias
          createTime: 2000-01-23T04:56:07.000+00:00
          appDeployNamespace: appDeployNamespace
          name: name
          alias: alias
          appDeployName: appDeployName
          componentSelector:
            components:
            - components
            - components
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          targets:
          - cluster:
              clusterName: clusterName
              namespace: namespace
            name: name
            alias: alias
          - cluster:
              clusterName: clusterName
              namespace: namespace
            name: name
            alias: alias
      properties:
        envBindings:
          items:
            $ref: '#/components/schemas/V1EnvBindingBase'
          type: array
      required:
      - envBindings
      type: object
      x-apifox-orders:
      - envBindings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonSchematic:
      example:
        cue:
          template: template
        terraform:
          gitCredentialsSecretReference:
            name: name
            namespace: namespace
          path: path
          providerRef:
            name: name
            namespace: namespace
          deleteResource: true
          configuration: configuration
          writeConnectionSecretToRef:
            name: name
            namespace: namespace
          customRegion: customRegion
          type: type
        helm:
          release: release
          repository: repository
        kube:
          template: template
          parameters:
          - fieldPaths:
            - fieldPaths
            - fieldPaths
            name: name
            description: description
            type: type
            required: true
          - fieldPaths:
            - fieldPaths
            - fieldPaths
            name: name
            description: description
            type: type
            required: true
      properties:
        cue:
          $ref: '#/components/schemas/CommonCue'
        helm:
          $ref: '#/components/schemas/CommonHelm'
        kube:
          $ref: '#/components/schemas/CommonKube'
        terraform:
          $ref: '#/components/schemas/CommonTerraform'
      type: object
      x-apifox-orders:
      - cue
      - helm
      - kube
      - terraform
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1PipelineMetaResponse:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        alias: alias
        description: description
        project:
          name: name
          alias: alias
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        project:
          $ref: '#/components/schemas/V1NameAlias'
      required:
      - alias
      - createTime
      - description
      - name
      - project
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - name
      - project
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonApplicationComponent:
      example:
        outputs:
        - name: name
          valueFrom: valueFrom
        - name: name
          valueFrom: valueFrom
        traits:
        - type: type
          properties: properties
        - type: type
          properties: properties
        dependsOn:
        - dependsOn
        - dependsOn
        inputs:
        - parameterKey: parameterKey
          from: from
        - parameterKey: parameterKey
          from: from
        name: name
        scopes:
          key: scopes
        type: type
        properties: properties
        externalRevision: externalRevision
      properties:
        dependsOn:
          items:
            type: string
          type: array
        externalRevision:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/V1alpha1InputItem'
          type: array
        name:
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/V1alpha1OutputItem'
          type: array
        properties:
          type: string
        scopes:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        traits:
          items:
            $ref: '#/components/schemas/CommonApplicationTrait'
          type: array
        type:
          type: string
      required:
      - name
      - type
      type: object
      x-apifox-orders:
      - dependsOn
      - externalRevision
      - inputs
      - name
      - outputs
      - properties
      - scopes
      - traits
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelImageRepository:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        namespace: namespace
        fullName: fullName
        region: region
        type: type
      properties:
        createTime:
          format: date-time
          type: string
        fullName:
          type: string
        name:
          type: string
        namespace:
          type: string
        region:
          type: string
        type:
          type: string
      required:
      - fullName
      - name
      - namespace
      - type
      type: object
      x-apifox-orders:
      - createTime
      - fullName
      - name
      - namespace
      - region
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonKube:
      example:
        template: template
        parameters:
        - fieldPaths:
          - fieldPaths
          - fieldPaths
          name: name
          description: description
          type: type
          required: true
        - fieldPaths:
          - fieldPaths
          - fieldPaths
          name: name
          description: description
          type: type
          required: true
      properties:
        parameters:
          items:
            $ref: '#/components/schemas/CommonKubeParameter'
          type: array
        template:
          type: string
      required:
      - template
      type: object
      x-apifox-orders:
      - parameters
      - template
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ChartMetadata:
      example:
        maintainers:
        - name: name
          email: email
          url: url
        - name: name
          email: email
          url: url
        appVersion: appVersion
        keywords:
        - keywords
        - keywords
        sources:
        - sources
        - sources
        deprecated: true
        icon: icon
        annotations:
          key: annotations
        description: description
        type: type
        version: version
        dependencies:
        - condition: condition
          name: name
          alias: alias
          repository: repository
          import-values:
          - null
          - null
          version: version
          enabled: true
          tags:
          - tags
          - tags
        - condition: condition
          name: name
          alias: alias
          repository: repository
          import-values:
          - null
          - null
          version: version
          enabled: true
          tags:
          - tags
          - tags
        home: home
        tags: tags
        condition: condition
        apiVersion: apiVersion
        kubeVersion: kubeVersion
        name: name
      properties:
        annotations:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        apiVersion:
          type: string
        appVersion:
          type: string
        condition:
          type: string
        dependencies:
          items:
            $ref: '#/components/schemas/ChartDependency'
          type: array
        deprecated:
          type: boolean
        description:
          type: string
        home:
          type: string
        icon:
          type: string
        keywords:
          items:
            type: string
          type: array
        kubeVersion:
          type: string
        maintainers:
          items:
            $ref: '#/components/schemas/ChartMaintainer'
          type: array
        name:
          type: string
        sources:
          items:
            type: string
          type: array
        tags:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
      x-apifox-orders:
      - annotations
      - apiVersion
      - appVersion
      - condition
      - dependencies
      - deprecated
      - description
      - home
      - icon
      - keywords
      - kubeVersion
      - maintainers
      - name
      - sources
      - tags
      - type
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1alpha1WorkflowRunSpec:
      example:
        mode:
          subSteps: subSteps
          steps: steps
        context: context
        workflowSpec:
          steps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
        workflowRef: workflowRef
      properties:
        context:
          type: string
        mode:
          $ref: '#/components/schemas/V1alpha1WorkflowExecuteMode'
        workflowRef:
          type: string
        workflowSpec:
          $ref: '#/components/schemas/V1alpha1WorkflowSpec'
      type: object
      x-apifox-orders:
      - context
      - mode
      - workflowRef
      - workflowSpec
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ProjectUserBase:
      example:
        userRoles:
        - userRoles
        - userRoles
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        alias: alias
        updateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        name:
          type: string
        updateTime:
          format: date-time
          type: string
        userRoles:
          items:
            type: string
          type: array
      required:
      - alias
      - createTime
      - name
      - updateTime
      - userRoles
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - name
      - updateTime
      - userRoles
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1Descriptor:
      example:
        urls:
        - urls
        - urls
        data: data
        size: 0
        digest: digest
        annotations:
          key: annotations
        mediaType: mediaType
        platform:
          features:
          - features
          - features
          os: os
          os.features:
          - os.features
          - os.features
          variant: variant
          architecture: architecture
          os.version: os.version
      properties:
        annotations:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        data:
          type: string
        digest:
          type: string
        mediaType:
          type: string
        platform:
          $ref: '#/components/schemas/V1Platform'
        size:
          format: int64
          type: integer
        urls:
          items:
            type: string
          type: array
      required:
      - digest
      - mediaType
      - size
      type: object
      x-apifox-orders:
      - annotations
      - data
      - digest
      - mediaType
      - platform
      - size
      - urls
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateContextValuesRequest:
      example:
        values:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        values:
          items:
            $ref: '#/components/schemas/ModelValue'
          type: array
      required:
      - values
      type: object
      x-apifox-orders:
      - values
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonApplicationComponentStatus:
      example:
        cluster: cluster
        traits:
        - healthy: true
          message: message
          type: type
        - healthy: true
          message: message
          type: type
        healthy: true
        name: name
        namespace: namespace
        workloadDefinition:
          apiVersion: apiVersion
          kind: kind
        scopes:
        - uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        - uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        env: env
        message: message
      properties:
        cluster:
          type: string
        env:
          type: string
        healthy:
          type: boolean
        message:
          type: string
        name:
          type: string
        namespace:
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/V1ObjectReference'
          type: array
        traits:
          items:
            $ref: '#/components/schemas/CommonApplicationTraitStatus'
          type: array
        workloadDefinition:
          $ref: '#/components/schemas/CommonWorkloadGvk'
      required:
      - healthy
      - name
      type: object
      x-apifox-orders:
      - cluster
      - env
      - healthy
      - message
      - name
      - namespace
      - scopes
      - traits
      - workloadDefinition
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateApplicationRequest:
      example:
        icon: icon
        alias: alias
        description: description
        labels:
          key: labels
      properties:
        alias:
          type: string
        description:
          type: string
        icon:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      type: object
      x-apifox-orders:
      - alias
      - description
      - icon
      - labels
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1EnvBinding:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
      x-apifox-orders:
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateWorkflowRequest:
      example:
        mode: mode
        default: true
        envName: envName
        name: name
        alias: alias
        description: description
        steps:
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          subSteps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          alias: alias
          description: description
          type: type
          if: if
          properties: '{}'
          timeout: timeout
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          subSteps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          alias: alias
          description: description
          type: type
          if: if
          properties: '{}'
          timeout: timeout
        subMode: subMode
      properties:
        alias:
          type: string
        default:
          type: boolean
        description:
          type: string
        envName:
          type: string
        mode:
          type: string
        name:
          type: string
        steps:
          items:
            $ref: '#/components/schemas/V1WorkflowStep'
          type: array
        subMode:
          type: string
      required:
      - default
      - envName
      - mode
      - name
      - subMode
      type: object
      x-apifox-orders:
      - alias
      - default
      - description
      - envName
      - mode
      - name
      - steps
      - subMode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AppResetResponse:
      example:
        isReset: true
      properties:
        isReset:
          type: boolean
      required:
      - isReset
      type: object
      x-apifox-orders:
      - isReset
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1HealthConfig:
      example:
        Test:
        - Test
        - Test
        Retries: 6
        Timeout: 5
        Interval: 0
        StartPeriod: 1
      properties:
        Interval:
          format: integer
          type: integer
        Retries:
          format: int32
          type: integer
        StartPeriod:
          format: integer
          type: integer
        Test:
          items:
            type: string
          type: array
        Timeout:
          format: integer
          type: integer
      type: object
      x-apifox-orders:
      - Interval
      - Retries
      - StartPeriod
      - Test
      - Timeout
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationDeployRequest:
      example:
        note: note
        codeInfo:
          commit: commit
          branch: branch
          user: user
        force: true
        imageInfo:
          resource:
            createTime: 2000-01-23T04:56:07.000+00:00
            digest: digest
            tag: tag
            url: url
          repository:
            createTime: 2000-01-23T04:56:07.000+00:00
            name: name
            namespace: namespace
            fullName: fullName
            region: region
            type: type
          type: type
        workflowName: workflowName
        triggerType: triggerType
      properties:
        codeInfo:
          $ref: '#/components/schemas/ModelCodeInfo'
        force:
          type: boolean
        imageInfo:
          $ref: '#/components/schemas/ModelImageInfo'
        note:
          type: string
        triggerType:
          type: string
        workflowName:
          type: string
      required:
      - force
      - note
      - triggerType
      - workflowName
      type: object
      x-apifox-orders:
      - codeInfo
      - force
      - imageInfo
      - note
      - triggerType
      - workflowName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1PipelineRunBriefing:
      example:
        phase: phase
        contextName: contextName
        pipelineRunName: pipelineRunName
        contextValues:
        - value: value
          key: key
        - value: value
          key: key
        finished: true
        startTime: startTime
        endTime: endTime
        message: message
      properties:
        contextName:
          type: string
        contextValues:
          items:
            $ref: '#/components/schemas/ModelValue'
          type: array
        endTime:
          type: string
        finished:
          type: boolean
        message:
          type: string
        phase:
          type: string
        pipelineRunName:
          type: string
        startTime:
          type: string
      required:
      - contextName
      - contextValues
      - endTime
      - finished
      - message
      - phase
      - pipelineRunName
      - startTime
      type: object
      x-apifox-orders:
      - contextName
      - contextValues
      - endTime
      - finished
      - message
      - phase
      - pipelineRunName
      - startTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1EnvBindingTarget:
      example:
        cluster:
          clusterName: clusterName
          namespace: namespace
        name: name
        alias: alias
      properties:
        alias:
          type: string
        cluster:
          $ref: '#/components/schemas/V1ClusterTarget'
        name:
          type: string
      required:
      - alias
      - name
      type: object
      x-apifox-orders:
      - alias
      - cluster
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelCodeInfo:
      example:
        commit: commit
        branch: branch
        user: user
      properties:
        branch:
          type: string
        commit:
          type: string
        user:
          type: string
      type: object
      x-apifox-orders:
      - branch
      - commit
      - user
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TypesSecretReference:
      example:
        name: name
        namespace: namespace
      properties:
        name:
          type: string
        namespace:
          type: string
      required:
      - name
      type: object
      x-apifox-orders:
      - name
      - namespace
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AddonMeta:
      example:
        system:
          kubernetes: kubernetes
          vela: vela
        needNamespace:
        - needNamespace
        - needNamespace
        icon: icon
        name: name
        description: description
        invisible: true
        deployTo:
          disableControlPlane: true
          runtime_cluster: true
          runtimeCluster: true
        version: version
        url: url
        dependencies:
        - name: name
          version: version
        - name: name
          version: version
        tags:
        - tags
        - tags
      properties:
        dependencies:
          items:
            $ref: '#/components/schemas/AddonDependency'
          type: array
        deployTo:
          $ref: '#/components/schemas/AddonDeployTo'
        description:
          type: string
        icon:
          type: string
        invisible:
          type: boolean
        name:
          type: string
        needNamespace:
          items:
            type: string
          type: array
        system:
          $ref: '#/components/schemas/AddonSystemRequirements'
        tags:
          items:
            type: string
          type: array
        url:
          type: string
        version:
          type: string
      required:
      - description
      - icon
      - invisible
      - name
      - version
      type: object
      x-apifox-orders:
      - dependencies
      - deployTo
      - description
      - icon
      - invisible
      - name
      - needNamespace
      - system
      - tags
      - url
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1PermissionBase:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        effect: effect
        name: name
        alias: alias
        resources:
        - resources
        - resources
        updateTime: 2000-01-23T04:56:07.000+00:00
        actions:
        - actions
        - actions
      properties:
        actions:
          items:
            type: string
          type: array
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        effect:
          type: string
        name:
          type: string
        resources:
          items:
            type: string
          type: array
        updateTime:
          format: date-time
          type: string
      required:
      - actions
      - alias
      - createTime
      - effect
      - name
      - resources
      - updateTime
      type: object
      x-apifox-orders:
      - actions
      - alias
      - createTime
      - effect
      - name
      - resources
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DetailWorkflowResponse:
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        default:
          type: boolean
        description:
          type: string
        enable:
          type: boolean
        envName:
          type: string
        mode:
          type: string
        name:
          type: string
        steps:
          items:
            $ref: '#/components/schemas/V1WorkflowStep'
          type: array
        subMode:
          type: string
        updateTime:
          format: date-time
          type: string
      required:
      - alias
      - createTime
      - default
      - description
      - enable
      - envName
      - mode
      - name
      - subMode
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - default
      - description
      - enable
      - envName
      - mode
      - name
      - steps
      - subMode
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AppDryRunResponse:
      example:
        success: true
        message: message
        yaml: yaml
      properties:
        message:
          type: string
        success:
          type: boolean
        yaml:
          type: string
      required:
      - success
      - yaml
      type: object
      x-apifox-orders:
      - message
      - success
      - yaml
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelImageResource:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        digest: digest
        tag: tag
        url: url
      properties:
        createTime:
          format: date-time
          type: string
        digest:
          type: string
        tag:
          type: string
        url:
          type: string
      required:
      - digest
      - tag
      - url
      type: object
      x-apifox-orders:
      - createTime
      - digest
      - tag
      - url
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TypesNamespacedName:
      example:
        Namespace: Namespace
        Name: Name
      properties:
        Name:
          type: string
        Namespace:
          type: string
      required:
      - Name
      - Namespace
      type: object
      x-apifox-orders:
      - Name
      - Namespace
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelApplicationTrait:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        alias: alias
        description: description
        updateTime: 2000-01-23T04:56:07.000+00:00
        type: type
        properties: '{}'
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        properties:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        type:
          type: string
        updateTime:
          format: date-time
          type: string
      required:
      - alias
      - createTime
      - description
      - type
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - properties
      - type
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ChartDependency:
      example:
        condition: condition
        name: name
        alias: alias
        repository: repository
        import-values:
        - null
        - null
        version: version
        enabled: true
        tags:
        - tags
        - tags
      properties:
        alias:
          type: string
        condition:
          type: string
        enabled:
          type: boolean
        import-values:
          items:
            $ref: '#/components/schemas/ChartDependencyImportValues'
          type: array
        name:
          type: string
        repository:
          type: string
        tags:
          items:
            type: string
          type: array
        version:
          type: string
      required:
      - name
      - repository
      type: object
      x-apifox-orders:
      - alias
      - condition
      - enabled
      - import-values
      - name
      - repository
      - tags
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ComponentListResponse:
      example:
        components:
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          componentType: componentType
          creator: creator
          traits:
          - createTime: 2000-01-23T04:56:07.000+00:00
            alias: alias
            description: description
            updateTime: 2000-01-23T04:56:07.000+00:00
            type: type
            properties: '{}'
          - createTime: 2000-01-23T04:56:07.000+00:00
            alias: alias
            description: description
            updateTime: 2000-01-23T04:56:07.000+00:00
            type: type
            properties: '{}'
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          icon: icon
          description: description
          main: true
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          alias: alias
          workloadType:
            definition:
              apiVersion: apiVersion
              kind: kind
            type: type
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          componentType: componentType
          creator: creator
          traits:
          - createTime: 2000-01-23T04:56:07.000+00:00
            alias: alias
            description: description
            updateTime: 2000-01-23T04:56:07.000+00:00
            type: type
            properties: '{}'
          - createTime: 2000-01-23T04:56:07.000+00:00
            alias: alias
            description: description
            updateTime: 2000-01-23T04:56:07.000+00:00
            type: type
            properties: '{}'
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          icon: icon
          description: description
          main: true
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          alias: alias
          workloadType:
            definition:
              apiVersion: apiVersion
              kind: kind
            type: type
      properties:
        components:
          items:
            $ref: '#/components/schemas/V1ComponentBase'
          type: array
      required:
      - components
      type: object
      x-apifox-orders:
      - components
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListConfigResponse:
      example:
        configs:
        - StopSignal: StopSignal
          User: User
          Entrypoint:
          - Entrypoint
          - Entrypoint
          AttachStderr: true
          ArgsEscaped: true
          Hostname: Hostname
          Labels:
            key: Labels
          OpenStdin: true
          Healthcheck:
            Test:
            - Test
            - Test
            Retries: 6
            Timeout: 5
            Interval: 0
            StartPeriod: 1
          Env:
          - Env
          - Env
          Image: Image
          MacAddress: MacAddress
          NetworkDisabled: true
          ExposedPorts:
            key: '{}'
          StdinOnce: true
          AttachStdout: true
          WorkingDir: WorkingDir
          Shell:
          - Shell
          - Shell
          Volumes:
            key: '{}'
          OnBuild:
          - OnBuild
          - OnBuild
          AttachStdin: true
          Domainname: Domainname
          Tty: true
          Cmd:
          - Cmd
          - Cmd
        - StopSignal: StopSignal
          User: User
          Entrypoint:
          - Entrypoint
          - Entrypoint
          AttachStderr: true
          ArgsEscaped: true
          Hostname: Hostname
          Labels:
            key: Labels
          OpenStdin: true
          Healthcheck:
            Test:
            - Test
            - Test
            Retries: 6
            Timeout: 5
            Interval: 0
            StartPeriod: 1
          Env:
          - Env
          - Env
          Image: Image
          MacAddress: MacAddress
          NetworkDisabled: true
          ExposedPorts:
            key: '{}'
          StdinOnce: true
          AttachStdout: true
          WorkingDir: WorkingDir
          Shell:
          - Shell
          - Shell
          Volumes:
            key: '{}'
          OnBuild:
          - OnBuild
          - OnBuild
          AttachStdin: true
          Domainname: Domainname
          Tty: true
          Cmd:
          - Cmd
          - Cmd
      properties:
        configs:
          items:
            $ref: '#/components/schemas/V1Config'
          type: array
      required:
      - configs
      type: object
      x-apifox-orders:
      - configs
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListDefinitionResponse:
      properties:
        definitions:
          items:
            $ref: '#/components/schemas/V1DefinitionBase'
          type: array
      required:
      - definitions
      type: object
      x-apifox-orders:
      - definitions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreatePolicyRequest:
      example:
        envName: envName
        name: name
        alias: alias
        description: description
        type: type
        properties: properties
        workflowPolicyBind:
        - name: name
          steps:
          - steps
          - steps
        - name: name
          steps:
          - steps
          - steps
      properties:
        alias:
          type: string
        description:
          type: string
        envName:
          type: string
        name:
          type: string
        properties:
          type: string
        type:
          type: string
        workflowPolicyBind:
          items:
            $ref: '#/components/schemas/V1WorkflowPolicyBinding'
          type: array
      required:
      - alias
      - description
      - envName
      - name
      - properties
      - type
      - workflowPolicyBind
      type: object
      x-apifox-orders:
      - alias
      - description
      - envName
      - name
      - properties
      - type
      - workflowPolicyBind
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1alpha1InputItem:
      example:
        parameterKey: parameterKey
        from: from
      properties:
        from:
          type: string
        parameterKey:
          type: string
      required:
      - from
      type: object
      x-apifox-orders:
      - from
      - parameterKey
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateCloudClusterResponse:
      example:
        clusterName: clusterName
        clusterID: clusterID
        status: status
      properties:
        clusterID:
          type: string
        clusterName:
          type: string
        status:
          type: string
      required:
      - clusterID
      - clusterName
      - status
      type: object
      x-apifox-orders:
      - clusterID
      - clusterName
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ClusterBase:
      example:
        reason: reason
        dashboardURL: dashboardURL
        apiServerURL: apiServerURL
        icon: icon
        name: name
        alias: alias
        description: description
        labels:
          key: labels
        providerInfo:
          provider: provider
          regionID: regionID
          zone: zone
          clusterName: clusterName
          vpcID: vpcID
          zoneID: zoneID
          clusterID: clusterID
          labels:
            key: labels
        status: status
      properties:
        alias:
          type: string
        apiServerURL:
          type: string
        dashboardURL:
          type: string
        description:
          type: string
        icon:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
        providerInfo:
          $ref: '#/components/schemas/ModelProviderInfo'
        reason:
          type: string
        status:
          type: string
      required:
      - apiServerURL
      - dashboardURL
      - name
      - providerInfo
      - reason
      - status
      type: object
      x-apifox-orders:
      - alias
      - apiServerURL
      - dashboardURL
      - description
      - icon
      - labels
      - name
      - providerInfo
      - reason
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1EnablingProgress:
      example:
        total_components: 5
        enabled_components: 1
      properties:
        enabled_components:
          format: int32
          type: integer
        total_components:
          format: int32
          type: integer
      required:
      - enabled_components
      - total_components
      type: object
      x-apifox-orders:
      - enabled_components
      - total_components
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelCluster:
      properties:
        alias:
          type: string
        apiServerURL:
          type: string
        createTime:
          format: date-time
          type: string
        dashboardURL:
          type: string
        description:
          type: string
        icon:
          type: string
        kubeConfig:
          type: string
        kubeConfigSecret:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
        provider:
          $ref: '#/components/schemas/ModelProviderInfo'
        reason:
          type: string
        status:
          type: string
        updateTime:
          format: date-time
          type: string
      required:
      - alias
      - apiServerURL
      - createTime
      - dashboardURL
      - description
      - icon
      - kubeConfig
      - kubeConfigSecret
      - labels
      - name
      - provider
      - reason
      - status
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - apiServerURL
      - createTime
      - dashboardURL
      - description
      - icon
      - kubeConfig
      - kubeConfigSecret
      - labels
      - name
      - provider
      - reason
      - status
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AddonDefinition:
      example:
        name: name
        description: description
        type: type
      properties:
        description:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
      x-apifox-orders:
      - description
      - name
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1SystemInfoResponse:
      example:
        dexUserDefaultProjects:
        - roles:
          - roles
          - roles
          name: name
        - roles:
          - roles
          - roles
          name: name
        loginType: loginType
        dexUserDefaultPlatformRoles:
        - dexUserDefaultPlatformRoles
        - dexUserDefaultPlatformRoles
        statisticInfo:
          componentDefinitionTopList:
          - componentDefinitionTopList
          - componentDefinitionTopList
          appCount: appCount
          enableAddonList:
            key: enableAddonList
          clusterCount: clusterCount
          policyDefinitionTopList:
          - policyDefinitionTopList
          - policyDefinitionTopList
          updateTime: 2000-01-23T04:56:07.000+00:00
          traitDefinitionTopList:
          - traitDefinitionTopList
          - traitDefinitionTopList
          workflowDefinitionTopList:
          - workflowDefinitionTopList
          - workflowDefinitionTopList
        enableCollection: true
        installTime: 2000-01-23T04:56:07.000+00:00
        platformID: platformID
        systemVersion:
          gitVersion: gitVersion
          velaVersion: velaVersion
      properties:
        dexUserDefaultPlatformRoles:
          items:
            type: string
          type: array
        dexUserDefaultProjects:
          items:
            $ref: '#/components/schemas/ModelProjectRef'
          type: array
        enableCollection:
          type: boolean
        installTime:
          format: date-time
          type: string
        loginType:
          type: string
        platformID:
          type: string
        statisticInfo:
          $ref: '#/components/schemas/V1StatisticInfo'
        systemVersion:
          $ref: '#/components/schemas/V1SystemVersion'
      required:
      - enableCollection
      - loginType
      - platformID
      - systemVersion
      type: object
      x-apifox-orders:
      - dexUserDefaultPlatformRoles
      - dexUserDefaultProjects
      - enableCollection
      - installTime
      - loginType
      - platformID
      - statisticInfo
      - systemVersion
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelProjectRef:
      example:
        roles:
        - roles
        - roles
        name: name
      properties:
        name:
          type: string
        roles:
          items:
            type: string
          type: array
      required:
      - name
      - roles
      type: object
      x-apifox-orders:
      - name
      - roles
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListEnabledAddonResponse:
      example:
        enabledAddons:
        - phase: phase
          name: name
        - phase: phase
          name: name
      properties:
        enabledAddons:
          items:
            $ref: '#/components/schemas/V1AddonBaseStatus'
          type: array
      required:
      - enabledAddons
      type: object
      x-apifox-orders:
      - enabledAddons
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationRevisionBase:
      example:
        note: note
        reason: reason
        deployUser:
          name: name
          alias: alias
        codeInfo:
          commit: commit
          branch: branch
          user: user
        createTime: 2000-01-23T04:56:07.000+00:00
        envName: envName
        imageInfo:
          resource:
            createTime: 2000-01-23T04:56:07.000+00:00
            digest: digest
            tag: tag
            url: url
          repository:
            createTime: 2000-01-23T04:56:07.000+00:00
            name: name
            namespace: namespace
            fullName: fullName
            region: region
            type: type
          type: type
        triggerType: triggerType
        version: version
        status: status
      properties:
        codeInfo:
          $ref: '#/components/schemas/ModelCodeInfo'
        createTime:
          format: date-time
          type: string
        deployUser:
          $ref: '#/components/schemas/V1NameAlias'
        envName:
          type: string
        imageInfo:
          $ref: '#/components/schemas/ModelImageInfo'
        note:
          type: string
        reason:
          type: string
        status:
          type: string
        triggerType:
          type: string
        version:
          type: string
      required:
      - createTime
      - envName
      - note
      - status
      - triggerType
      - version
      type: object
      x-apifox-orders:
      - codeInfo
      - createTime
      - deployUser
      - envName
      - imageInfo
      - note
      - reason
      - status
      - triggerType
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AddonInfo:
      example:
        Meta:
          system:
            kubernetes: kubernetes
            vela: vela
          needNamespace:
          - needNamespace
          - needNamespace
          icon: icon
          name: name
          description: description
          invisible: true
          deployTo:
            disableControlPlane: true
            runtime_cluster: true
            runtimeCluster: true
          version: version
          url: url
          dependencies:
          - name: name
            version: version
          - name: name
            version: version
          tags:
          - tags
          - tags
        registryName: registryName
      properties:
        Meta:
          $ref: '#/components/schemas/AddonMeta'
        registryName:
          type: string
      required:
      - Meta
      - registryName
      type: object
      x-apifox-orders:
      - Meta
      - registryName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateRoleRequest:
      example:
        permissions:
        - permissions
        - permissions
        alias: alias
      properties:
        alias:
          type: string
        permissions:
          items:
            type: string
          type: array
      required:
      - alias
      - permissions
      type: object
      x-apifox-orders:
      - alias
      - permissions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateAddonRegistryRequest:
      example:
        git:
          path: path
          url: url
          token: token
        name: name
        gitlab:
          path: path
          repo: repo
          url: url
          token: token
        gitee:
          path: path
          url: url
          token: token
        helm:
          password: password
          insecureSkipTLS: true
          url: url
          username: username
        oss:
          bucket: bucket
          path: path
          end_point: end_point
      properties:
        git:
          $ref: '#/components/schemas/AddonGitAddonSource'
        gitee:
          $ref: '#/components/schemas/AddonGiteeAddonSource'
        gitlab:
          $ref: '#/components/schemas/AddonGitlabAddonSource'
        helm:
          $ref: '#/components/schemas/AddonHelmSource'
        name:
          type: string
        oss:
          $ref: '#/components/schemas/AddonOssAddonSource'
      required:
      - name
      type: object
      x-apifox-orders:
      - git
      - gitee
      - gitlab
      - helm
      - name
      - oss
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateClusterRequest:
      example:
        dashboardURL: dashboardURL
        icon: icon
        name: name
        alias: alias
        description: description
        kubeConfig: kubeConfig
        kubeConfigSecret: kubeConfigSecret
        labels:
          key: labels
      properties:
        alias:
          type: string
        dashboardURL:
          type: string
        description:
          type: string
        icon:
          type: string
        kubeConfig:
          type: string
        kubeConfigSecret:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
      required:
      - icon
      - name
      type: object
      x-apifox-orders:
      - alias
      - dashboardURL
      - description
      - icon
      - kubeConfig
      - kubeConfigSecret
      - labels
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListPipelineRunResponse:
      example:
        total: 0
        runs:
        - phase: phase
          contextName: contextName
          pipelineRunName: pipelineRunName
          contextValues:
          - value: value
            key: key
          - value: value
            key: key
          finished: true
          startTime: startTime
          endTime: endTime
          message: message
        - phase: phase
          contextName: contextName
          pipelineRunName: pipelineRunName
          contextValues:
          - value: value
            key: key
          - value: value
            key: key
          finished: true
          startTime: startTime
          endTime: endTime
          message: message
      properties:
        runs:
          items:
            $ref: '#/components/schemas/V1PipelineRunBriefing'
          type: array
        total:
          format: int64
          type: integer
      required:
      - runs
      - total
      type: object
      x-apifox-orders:
      - runs
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelWorkflowStep:
      example:
        outputs:
        - name: name
          valueFrom: valueFrom
        - name: name
          valueFrom: valueFrom
        dependsOn:
        - dependsOn
        - dependsOn
        subSteps:
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          alias: alias
          description: description
          orderIndex: 6
          type: type
          if: if
          properties: '{}'
          timeout: timeout
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          alias: alias
          description: description
          orderIndex: 6
          type: type
          if: if
          properties: '{}'
          timeout: timeout
        inputs:
        - parameterKey: parameterKey
          from: from
        - parameterKey: parameterKey
          from: from
        description: description
        type: type
        timeout: timeout
        meta:
          alias: alias
        name: name
        alias: alias
        orderIndex: 0
        if: if
        properties: '{}'
      properties:
        alias:
          type: string
        dependsOn:
          items:
            type: string
          type: array
        description:
          type: string
        if:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/V1alpha1InputItem'
          type: array
        meta:
          $ref: '#/components/schemas/V1alpha1WorkflowStepMeta'
        name:
          type: string
        orderIndex:
          format: int32
          type: integer
        outputs:
          items:
            $ref: '#/components/schemas/V1alpha1OutputItem'
          type: array
        properties:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        subSteps:
          items:
            $ref: '#/components/schemas/ModelWorkflowStepBase'
          type: array
        timeout:
          type: string
        type:
          type: string
      required:
      - alias
      - dependsOn
      - description
      - name
      - orderIndex
      - type
      type: object
      x-apifox-orders:
      - alias
      - dependsOn
      - description
      - if
      - inputs
      - meta
      - name
      - orderIndex
      - outputs
      - properties
      - subSteps
      - timeout
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListWorkflowResponse:
      properties:
        workflows:
          items:
            $ref: '#/components/schemas/V1WorkflowBase'
          type: array
      required:
      - workflows
      type: object
      x-apifox-orders:
      - workflows
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateProjectRequest:
      example:
        owner: owner
        alias: alias
        description: description
      properties:
        alias:
          type: string
        description:
          type: string
        owner:
          type: string
      type: object
      x-apifox-orders:
      - alias
      - description
      - owner
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListCloudClusterResponse:
      example:
        total: 0
        clusters:
        - dashboardURL: dashboardURL
          provider: provider
          regionID: regionID
          zone: zone
          vpcID: vpcID
          apiServerURL: apiServerURL
          name: name
          zoneID: zoneID
          id: id
          type: type
          labels:
            key: labels
          status: status
        - dashboardURL: dashboardURL
          provider: provider
          regionID: regionID
          zone: zone
          vpcID: vpcID
          apiServerURL: apiServerURL
          name: name
          zoneID: zoneID
          id: id
          type: type
          labels:
            key: labels
          status: status
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/CloudproviderCloudCluster'
          type: array
        total:
          format: int32
          type: integer
      required:
      - clusters
      - total
      type: object
      x-apifox-orders:
      - clusters
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateConfigRequest:
      example:
        alias: alias
        description: description
        properties: properties
      properties:
        alias:
          type: string
        description:
          type: string
        properties:
          type: string
      required:
      - alias
      - description
      type: object
      x-apifox-orders:
      - alias
      - description
      - properties
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1WorkflowBase:
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        default:
          type: boolean
        description:
          type: string
        enable:
          type: boolean
        envName:
          type: string
        mode:
          type: string
        name:
          type: string
        steps:
          items:
            $ref: '#/components/schemas/V1WorkflowStep'
          type: array
        subMode:
          type: string
        updateTime:
          format: date-time
          type: string
      required:
      - alias
      - createTime
      - default
      - description
      - enable
      - envName
      - mode
      - name
      - subMode
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - default
      - description
      - enable
      - envName
      - mode
      - name
      - steps
      - subMode
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateContextValuesRequest:
      example:
        values:
        - value: value
          key: key
        - value: value
          key: key
        name: name
      properties:
        name:
          type: string
        values:
          items:
            $ref: '#/components/schemas/ModelValue'
          type: array
      required:
      - name
      - values
      type: object
      x-apifox-orders:
      - name
      - values
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1NamespacedName:
      example:
        name: name
        namespace: namespace
      properties:
        name:
          type: string
        namespace:
          type: string
      required:
      - name
      type: object
      x-apifox-orders:
      - name
      - namespace
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1SystemInfoRequest:
      example:
        dexUserDefaultProjects:
        - roles:
          - roles
          - roles
          name: name
        - roles:
          - roles
          - roles
          name: name
        loginType: loginType
        velaAddress: velaAddress
        enableCollection: true
      properties:
        dexUserDefaultProjects:
          items:
            $ref: '#/components/schemas/ModelProjectRef'
          type: array
        enableCollection:
          type: boolean
        loginType:
          type: string
        velaAddress:
          type: string
      required:
      - enableCollection
      - loginType
      type: object
      x-apifox-orders:
      - dexUserDefaultProjects
      - enableCollection
      - loginType
      - velaAddress
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonAppStatus:
      example:
        appliedResources:
        - cluster: cluster
          uid: uid
          creator: creator
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        - cluster: cluster
          uid: uid
          creator: creator
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        components:
        - uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        - uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        workflow:
          mode: mode
          suspend: true
          contextBackend:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          appRevision: appRevision
          suspendState: suspendState
          finished: true
          startTime: startTime
          endTime: endTime
          message: message
          steps:
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            subSteps:
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              name: name
              id: id
              message: message
              type: type
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              name: name
              id: id
              message: message
              type: type
            name: name
            id: id
            message: message
            type: type
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            subSteps:
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              name: name
              id: id
              message: message
              type: type
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              name: name
              id: id
              message: message
              type: type
            name: name
            id: id
            message: message
            type: type
          terminated: true
          status: status
        services:
        - cluster: cluster
          traits:
          - healthy: true
            message: message
            type: type
          - healthy: true
            message: message
            type: type
          healthy: true
          name: name
          namespace: namespace
          workloadDefinition:
            apiVersion: apiVersion
            kind: kind
          scopes:
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          env: env
          message: message
        - cluster: cluster
          traits:
          - healthy: true
            message: message
            type: type
          - healthy: true
            message: message
            type: type
          healthy: true
          name: name
          namespace: namespace
          workloadDefinition:
            apiVersion: apiVersion
            kind: kind
          scopes:
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          env: env
          message: message
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        latestRevision:
          name: name
          revisionHash: revisionHash
          revision: 0
        observedGeneration: 6
        policy:
        - name: name
          type: type
          status: status
        - name: name
          type: type
          status: status
        status: status
      properties:
        appliedResources:
          items:
            $ref: '#/components/schemas/CommonClusterObjectReference'
          type: array
        components:
          items:
            $ref: '#/components/schemas/V1ObjectReference'
          type: array
        conditions:
          items:
            $ref: '#/components/schemas/ConditionCondition'
          type: array
        latestRevision:
          $ref: '#/components/schemas/CommonRevision'
        observedGeneration:
          format: int64
          type: integer
        policy:
          items:
            $ref: '#/components/schemas/CommonPolicyStatus'
          type: array
        services:
          items:
            $ref: '#/components/schemas/CommonApplicationComponentStatus'
          type: array
        status:
          type: string
        workflow:
          $ref: '#/components/schemas/CommonWorkflowStatus'
      type: object
      x-apifox-orders:
      - appliedResources
      - components
      - conditions
      - latestRevision
      - observedGeneration
      - policy
      - services
      - status
      - workflow
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelWorkflowStepBase:
      example:
        outputs:
        - name: name
          valueFrom: valueFrom
        - name: name
          valueFrom: valueFrom
        dependsOn:
        - dependsOn
        - dependsOn
        inputs:
        - parameterKey: parameterKey
          from: from
        - parameterKey: parameterKey
          from: from
        meta:
          alias: alias
        name: name
        alias: alias
        description: description
        orderIndex: 6
        type: type
        if: if
        properties: '{}'
        timeout: timeout
      properties:
        alias:
          type: string
        dependsOn:
          items:
            type: string
          type: array
        description:
          type: string
        if:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/V1alpha1InputItem'
          type: array
        meta:
          $ref: '#/components/schemas/V1alpha1WorkflowStepMeta'
        name:
          type: string
        orderIndex:
          format: int32
          type: integer
        outputs:
          items:
            $ref: '#/components/schemas/V1alpha1OutputItem'
          type: array
        properties:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        timeout:
          type: string
        type:
          type: string
      required:
      - alias
      - dependsOn
      - description
      - name
      - orderIndex
      - type
      type: object
      x-apifox-orders:
      - alias
      - dependsOn
      - description
      - if
      - inputs
      - meta
      - name
      - orderIndex
      - outputs
      - properties
      - timeout
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UtilsCondition:
      example:
        op: op
        jsonKey: jsonKey
        action: action
        value: value
      properties:
        action:
          type: string
        jsonKey:
          type: string
        op:
          type: string
        value:
          type: string
          x-apifox-folder: Schemas
      required:
      - jsonKey
      - value
      type: object
      x-apifox-orders:
      - action
      - jsonKey
      - op
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListWorkflowRecordsResponse:
      properties:
        records:
          items:
            $ref: '#/components/schemas/V1WorkflowRecord'
          type: array
        total:
          format: int64
          type: integer
      required:
      - records
      - total
      type: object
      x-apifox-orders:
      - records
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1alpha1StepStatus:
      example:
        lastExecuteTime: lastExecuteTime
        phase: phase
        firstExecuteTime: firstExecuteTime
        reason: reason
        name: name
        id: id
        message: message
        type: type
      properties:
        firstExecuteTime:
          type: string
        id:
          type: string
        lastExecuteTime:
          type: string
        message:
          type: string
        name:
          type: string
        phase:
          type: string
        reason:
          type: string
        type:
          type: string
      required:
      - id
      type: object
      x-apifox-orders:
      - firstExecuteTime
      - id
      - lastExecuteTime
      - message
      - name
      - phase
      - reason
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1WorkflowStep:
      example:
        outputs:
        - name: name
          valueFrom: valueFrom
        - name: name
          valueFrom: valueFrom
        dependsOn:
        - dependsOn
        - dependsOn
        subSteps:
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          alias: alias
          description: description
          type: type
          if: if
          properties: '{}'
          timeout: timeout
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          alias: alias
          description: description
          type: type
          if: if
          properties: '{}'
          timeout: timeout
        inputs:
        - parameterKey: parameterKey
          from: from
        - parameterKey: parameterKey
          from: from
        meta:
          alias: alias
        name: name
        alias: alias
        description: description
        type: type
        if: if
        properties: '{}'
        timeout: timeout
      properties:
        alias:
          type: string
        dependsOn:
          items:
            type: string
          type: array
        description:
          type: string
        if:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/V1alpha1InputItem'
          type: array
        meta:
          $ref: '#/components/schemas/V1alpha1WorkflowStepMeta'
        name:
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/V1alpha1OutputItem'
          type: array
        properties:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        subSteps:
          items:
            $ref: '#/components/schemas/V1WorkflowStepBase'
          type: array
        timeout:
          type: string
        type:
          type: string
      required:
      - name
      - type
      type: object
      x-apifox-orders:
      - alias
      - dependsOn
      - description
      - if
      - inputs
      - meta
      - name
      - outputs
      - properties
      - subSteps
      - timeout
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationBase:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        icon: icon
        name: name
        alias: alias
        description: description
        project:
          owner:
            name: name
            alias: alias
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
        readOnly: true
        updateTime: 2000-01-23T04:56:07.000+00:00
        labels:
          key: labels
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        icon:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
        project:
          $ref: '#/components/schemas/V1ProjectBase'
        readOnly:
          type: boolean
        updateTime:
          format: date-time
          type: string
      required:
      - alias
      - createTime
      - description
      - icon
      - name
      - project
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - icon
      - labels
      - name
      - project
      - readOnly
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1beta1TraitDefinitionSpec:
      properties:
        appliesToWorkloads:
          items:
            type: string
          type: array
        conflictsWith:
          items:
            type: string
          type: array
        controlPlaneOnly:
          type: boolean
        definitionRef:
          $ref: '#/components/schemas/CommonDefinitionReference'
        extension:
          type: string
        manageWorkload:
          type: boolean
        podDisruptive:
          type: boolean
        revisionEnabled:
          type: boolean
        schematic:
          $ref: '#/components/schemas/CommonSchematic'
        stage:
          type: string
        status:
          $ref: '#/components/schemas/CommonStatus'
        workloadRefPath:
          type: string
      type: object
      x-apifox-orders:
      - appliesToWorkloads
      - conflictsWith
      - controlPlaneOnly
      - definitionRef
      - extension
      - manageWorkload
      - podDisruptive
      - revisionEnabled
      - schematic
      - stage
      - status
      - workloadRefPath
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1alpha1WorkflowStepBase:
      example:
        outputs:
        - name: name
          valueFrom: valueFrom
        - name: name
          valueFrom: valueFrom
        dependsOn:
        - dependsOn
        - dependsOn
        inputs:
        - parameterKey: parameterKey
          from: from
        - parameterKey: parameterKey
          from: from
        meta:
          alias: alias
        name: name
        type: type
        if: if
        properties: properties
        timeout: timeout
      properties:
        dependsOn:
          items:
            type: string
          type: array
        if:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/V1alpha1InputItem'
          type: array
        meta:
          $ref: '#/components/schemas/V1alpha1WorkflowStepMeta'
        name:
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/V1alpha1OutputItem'
          type: array
        properties:
          type: string
        timeout:
          type: string
        type:
          type: string
      required:
      - type
      type: object
      x-apifox-orders:
      - dependsOn
      - if
      - inputs
      - meta
      - name
      - outputs
      - properties
      - timeout
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ConditionCondition:
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        status: status
      properties:
        lastTransitionTime:
          type: string
        message:
          type: string
        reason:
          type: string
        status:
          type: string
        type:
          type: string
      required:
      - lastTransitionTime
      - reason
      - status
      - type
      type: object
      x-apifox-orders:
      - lastTransitionTime
      - message
      - reason
      - status
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1PipelineRunMeta:
      example:
        pipelineName: pipelineName
        pipelineRunName: pipelineRunName
        project:
          name: name
          alias: alias
      properties:
        pipelineName:
          type: string
        pipelineRunName:
          type: string
        project:
          $ref: '#/components/schemas/V1NameAlias'
      required:
      - pipelineName
      - pipelineRunName
      - project
      type: object
      x-apifox-orders:
      - pipelineName
      - pipelineRunName
      - project
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ChartMaintainer:
      example:
        name: name
        email: email
        url: url
      properties:
        email:
          type: string
        name:
          type: string
        url:
          type: string
      type: object
      x-apifox-orders:
      - email
      - name
      - url
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1Config1:
      type: string
      x-apifox-folder: Schemas
    ModelApplicationRevision:
      properties:
        appPrimaryKey:
          type: string
        applyAppConfig:
          type: string
        codeInfo:
          $ref: '#/components/schemas/ModelCodeInfo'
        createTime:
          format: date-time
          type: string
        deployUser:
          type: string
        envName:
          type: string
        imageInfo:
          $ref: '#/components/schemas/ModelImageInfo'
        note:
          type: string
        reason:
          type: string
        revisionCRName:
          type: string
        rollbackVersion:
          type: string
        status:
          type: string
        triggerType:
          type: string
        updateTime:
          format: date-time
          type: string
        version:
          type: string
        workflowName:
          type: string
      required:
      - appPrimaryKey
      - createTime
      - deployUser
      - envName
      - note
      - reason
      - revisionCRName
      - status
      - triggerType
      - updateTime
      - version
      - workflowName
      type: object
      x-apifox-orders:
      - appPrimaryKey
      - applyAppConfig
      - codeInfo
      - createTime
      - deployUser
      - envName
      - imageInfo
      - note
      - reason
      - revisionCRName
      - rollbackVersion
      - status
      - triggerType
      - updateTime
      - version
      - workflowName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelStepStatus:
      properties:
        alias:
          type: string
        firstExecuteTime:
          format: date-time
          type: string
        id:
          type: string
        lastExecuteTime:
          format: date-time
          type: string
        message:
          type: string
        name:
          type: string
        phase:
          type: string
        reason:
          type: string
        type:
          type: string
      required:
      - alias
      - id
      - name
      type: object
      x-apifox-orders:
      - alias
      - firstExecuteTime
      - id
      - lastExecuteTime
      - message
      - name
      - phase
      - reason
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateComponentRequest:
      example:
        outputs:
        - name: name
          valueFrom: valueFrom
        - name: name
          valueFrom: valueFrom
        componentType: componentType
        traits:
        - alias: alias
          description: description
          type: type
          properties: properties
        - alias: alias
          description: description
          type: type
          properties: properties
        dependsOn:
        - dependsOn
        - dependsOn
        inputs:
        - parameterKey: parameterKey
          from: from
        - parameterKey: parameterKey
          from: from
        icon: icon
        name: name
        alias: alias
        description: description
        properties: properties
        labels:
          key: labels
      properties:
        alias:
          type: string
        componentType:
          type: string
        dependsOn:
          items:
            type: string
          type: array
        description:
          type: string
        icon:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/V1alpha1InputItem'
          type: array
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/V1alpha1OutputItem'
          type: array
        properties:
          type: string
        traits:
          items:
            $ref: '#/components/schemas/V1CreateApplicationTraitRequest'
          type: array
      required:
      - componentType
      - name
      type: object
      x-apifox-orders:
      - alias
      - componentType
      - dependsOn
      - description
      - icon
      - inputs
      - labels
      - name
      - outputs
      - properties
      - traits
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DetailPolicyResponse:
      example:
        creator: creator
        createTime: 2000-01-23T04:56:07.000+00:00
        envName: envName
        name: name
        alias: alias
        description: description
        updateTime: 2000-01-23T04:56:07.000+00:00
        type: type
        properties: '{}'
        workflowPolicyBind:
        - name: name
          steps:
          - steps
          - steps
        - name: name
          steps:
          - steps
          - steps
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        creator:
          type: string
        description:
          type: string
        envName:
          type: string
        name:
          type: string
        properties:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        type:
          type: string
        updateTime:
          format: date-time
          type: string
        workflowPolicyBind:
          items:
            $ref: '#/components/schemas/V1WorkflowPolicyBinding'
          type: array
      required:
      - alias
      - createTime
      - creator
      - description
      - envName
      - name
      - properties
      - type
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - creator
      - description
      - envName
      - name
      - properties
      - type
      - updateTime
      - workflowPolicyBind
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationStatusResponse:
      example:
        envName: envName
        status:
          appliedResources:
          - cluster: cluster
            uid: uid
            creator: creator
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          - cluster: cluster
            uid: uid
            creator: creator
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          components:
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          workflow:
            mode: mode
            suspend: true
            contextBackend:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            appRevision: appRevision
            suspendState: suspendState
            finished: true
            startTime: startTime
            endTime: endTime
            message: message
            steps:
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              subSteps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              name: name
              id: id
              message: message
              type: type
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              subSteps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              name: name
              id: id
              message: message
              type: type
            terminated: true
            status: status
          services:
          - cluster: cluster
            traits:
            - healthy: true
              message: message
              type: type
            - healthy: true
              message: message
              type: type
            healthy: true
            name: name
            namespace: namespace
            workloadDefinition:
              apiVersion: apiVersion
              kind: kind
            scopes:
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env: env
            message: message
          - cluster: cluster
            traits:
            - healthy: true
              message: message
              type: type
            - healthy: true
              message: message
              type: type
            healthy: true
            name: name
            namespace: namespace
            workloadDefinition:
              apiVersion: apiVersion
              kind: kind
            scopes:
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env: env
            message: message
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          latestRevision:
            name: name
            revisionHash: revisionHash
            revision: 0
          observedGeneration: 6
          policy:
          - name: name
            type: type
            status: status
          - name: name
            type: type
            status: status
          status: status
      properties:
        envName:
          type: string
        status:
          $ref: '#/components/schemas/CommonAppStatus'
      required:
      - envName
      - status
      type: object
      x-apifox-orders:
      - envName
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelImageInfo:
      example:
        resource:
          createTime: 2000-01-23T04:56:07.000+00:00
          digest: digest
          tag: tag
          url: url
        repository:
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          fullName: fullName
          region: region
          type: type
        type: type
      properties:
        repository:
          $ref: '#/components/schemas/ModelImageRepository'
        resource:
          $ref: '#/components/schemas/ModelImageResource'
        type:
          type: string
      required:
      - type
      type: object
      x-apifox-orders:
      - repository
      - resource
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DetailClusterResponse:
      example:
        reason: reason
        dashboardURL: dashboardURL
        icon: icon
        description: description
        kubeConfig: kubeConfig
        updateTime: 2000-01-23T04:56:07.000+00:00
        resourceInfo:
          gpuUsed: 5
          workerNumber: 2
          memoryCapacity: 2
          cpuUsed: 6
          storageClassList:
          - storageClassList
          - storageClassList
          cpuCapacity: 0
          memoryUsed: 7
          gpuCapacity: 1
          masterNumber: 5
          podCapacity: 9
          podUsed: 3
        kubeConfigSecret: kubeConfigSecret
        labels:
          key: labels
        createTime: 2000-01-23T04:56:07.000+00:00
        provider:
          provider: provider
          regionID: regionID
          zone: zone
          clusterName: clusterName
          vpcID: vpcID
          zoneID: zoneID
          clusterID: clusterID
          labels:
            key: labels
        apiServerURL: apiServerURL
        name: name
        alias: alias
        status: status
      properties:
        alias:
          type: string
        apiServerURL:
          type: string
        createTime:
          format: date-time
          type: string
        dashboardURL:
          type: string
        description:
          type: string
        icon:
          type: string
        kubeConfig:
          type: string
        kubeConfigSecret:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
        provider:
          $ref: '#/components/schemas/ModelProviderInfo'
        reason:
          type: string
        resourceInfo:
          $ref: '#/components/schemas/V1ClusterResourceInfo'
        status:
          type: string
        updateTime:
          format: date-time
          type: string
      required:
      - alias
      - apiServerURL
      - createTime
      - dashboardURL
      - description
      - icon
      - kubeConfig
      - kubeConfigSecret
      - labels
      - name
      - provider
      - reason
      - resourceInfo
      - status
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - apiServerURL
      - createTime
      - dashboardURL
      - description
      - icon
      - kubeConfig
      - kubeConfigSecret
      - labels
      - name
      - provider
      - reason
      - resourceInfo
      - status
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelWorkflowSpec:
      example:
        mode:
          subSteps: subSteps
          steps: steps
        steps:
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          subSteps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            orderIndex: 6
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            orderIndex: 6
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          description: description
          type: type
          timeout: timeout
          meta:
            alias: alias
          name: name
          alias: alias
          orderIndex: 0
          if: if
          properties: '{}'
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          subSteps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            orderIndex: 6
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            alias: alias
            description: description
            orderIndex: 6
            type: type
            if: if
            properties: '{}'
            timeout: timeout
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          description: description
          type: type
          timeout: timeout
          meta:
            alias: alias
          name: name
          alias: alias
          orderIndex: 0
          if: if
          properties: '{}'
      properties:
        mode:
          $ref: '#/components/schemas/V1alpha1WorkflowExecuteMode'
        steps:
          items:
            $ref: '#/components/schemas/ModelWorkflowStep'
          type: array
      type: object
      x-apifox-orders:
      - mode
      - steps
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1History:
      example:
        author: author
        created: created
        empty_layer: true
        comment: comment
        created_by: created_by
      properties:
        author:
          type: string
        comment:
          type: string
        created:
          type: string
        created_by:
          type: string
        empty_layer:
          type: boolean
      type: object
      x-apifox-orders:
      - author
      - comment
      - created
      - created_by
      - empty_layer
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AddonGitAddonSource:
      example:
        path: path
        url: url
        token: token
      properties:
        path:
          type: string
        token:
          type: string
        url:
          type: string
      type: object
      x-apifox-orders:
      - path
      - token
      - url
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AccessKeyRequest:
      example:
        accessKeyID: accessKeyID
        accessKeySecret: accessKeySecret
      properties:
        accessKeyID:
          type: string
        accessKeySecret:
          type: string
      required:
      - accessKeyID
      - accessKeySecret
      type: object
      x-apifox-orders:
      - accessKeyID
      - accessKeySecret
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1RunStatInfo:
      example:
        fail: 1
        total: 5
        success: 5
      properties:
        fail:
          format: int32
          type: integer
        success:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - fail
      - success
      - total
      type: object
      x-apifox-orders:
      - fail
      - success
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1VelaQlViewResponse:
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DetailApplicationResponse:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        icon: icon
        name: name
        policies:
        - policies
        - policies
        alias: alias
        description: description
        project:
          owner:
            name: name
            alias: alias
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
        readOnly: true
        updateTime: 2000-01-23T04:56:07.000+00:00
        envBindings:
        - envBindings
        - envBindings
        resourceInfo:
          componentNum: 0
        labels:
          key: labels
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        envBindings:
          items:
            type: string
          type: array
        icon:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
        policies:
          items:
            type: string
          type: array
        project:
          $ref: '#/components/schemas/V1ProjectBase'
        readOnly:
          type: boolean
        resourceInfo:
          $ref: '#/components/schemas/V1ApplicationResourceInfo'
        updateTime:
          format: date-time
          type: string
      required:
      - alias
      - createTime
      - description
      - envBindings
      - icon
      - name
      - policies
      - project
      - resourceInfo
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - envBindings
      - icon
      - labels
      - name
      - policies
      - project
      - readOnly
      - resourceInfo
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateApplicationEnvbindingRequest:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
      x-apifox-orders:
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1PolicyBase:
      example:
        creator: creator
        createTime: 2000-01-23T04:56:07.000+00:00
        envName: envName
        name: name
        alias: alias
        description: description
        updateTime: 2000-01-23T04:56:07.000+00:00
        type: type
        properties: '{}'
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        creator:
          type: string
        description:
          type: string
        envName:
          type: string
        name:
          type: string
        properties:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        type:
          type: string
        updateTime:
          format: date-time
          type: string
      required:
      - alias
      - createTime
      - creator
      - description
      - envName
      - name
      - properties
      - type
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - creator
      - description
      - envName
      - name
      - properties
      - type
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1EmptyResponse:
      type: string
      x-apifox-folder: Schemas
    V1UserBase:
      example:
        lastLoginTime: 2000-01-23T04:56:07.000+00:00
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        alias: alias
        disabled: true
        email: email
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        disabled:
          type: boolean
        email:
          type: string
        lastLoginTime:
          format: date-time
          type: string
        name:
          type: string
      required:
      - createTime
      - disabled
      - email
      - lastLoginTime
      - name
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - disabled
      - email
      - lastLoginTime
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RepoChartVersion:
      example:
        tillerVersion: tillerVersion
        urls:
        - urls
        - urls
        removed: true
        engine: engine
        created: 2000-01-23T04:56:07.000+00:00
        Metadata:
          maintainers:
          - name: name
            email: email
            url: url
          - name: name
            email: email
            url: url
          appVersion: appVersion
          keywords:
          - keywords
          - keywords
          sources:
          - sources
          - sources
          deprecated: true
          icon: icon
          annotations:
            key: annotations
          description: description
          type: type
          version: version
          dependencies:
          - condition: condition
            name: name
            alias: alias
            repository: repository
            import-values:
            - null
            - null
            version: version
            enabled: true
            tags:
            - tags
            - tags
          - condition: condition
            name: name
            alias: alias
            repository: repository
            import-values:
            - null
            - null
            version: version
            enabled: true
            tags:
            - tags
            - tags
          home: home
          tags: tags
          condition: condition
          apiVersion: apiVersion
          kubeVersion: kubeVersion
          name: name
        checksum: checksum
        digest: digest
        url: url
      properties:
        Metadata:
          $ref: '#/components/schemas/ChartMetadata'
        checksum:
          type: string
        created:
          format: date-time
          type: string
        digest:
          type: string
        engine:
          type: string
        removed:
          type: boolean
        tillerVersion:
          type: string
        url:
          type: string
        urls:
          items:
            type: string
          type: array
      required:
      - Metadata
      - urls
      type: object
      x-apifox-orders:
      - Metadata
      - checksum
      - created
      - digest
      - engine
      - removed
      - tillerVersion
      - url
      - urls
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DetailAddonResponse:
      example:
        schema: schema
        needNamespace:
        - needNamespace
        - needNamespace
        icon: icon
        uiSchema:
        - additional: true
          subParameterGroupOption:
          - keys:
            - keys
            - keys
            label: label
          - keys:
            - keys
            - keys
            label: label
          subParameters:
          - null
          - null
          description: description
          label: label
          sort: 0
          disable: true
          jsonKey: jsonKey
          uiType: uiType
          style:
            colSpan: 6
          conditions:
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          validate:
            immutable: true
            min: 5.637376656633329
            max: 1.4658129805029452
            defaultValue: defaultValue
            minLength: 2
            options:
            - label: label
              value: value
            - label: label
              value: value
            pattern: pattern
            maxLength: 5
            required: true
        - additional: true
          subParameterGroupOption:
          - keys:
            - keys
            - keys
            label: label
          - keys:
            - keys
            - keys
            label: label
          subParameters:
          - null
          - null
          description: description
          label: label
          sort: 0
          disable: true
          jsonKey: jsonKey
          uiType: uiType
          style:
            colSpan: 6
          conditions:
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          validate:
            immutable: true
            min: 5.637376656633329
            max: 1.4658129805029452
            defaultValue: defaultValue
            minLength: 2
            options:
            - label: label
              value: value
            - label: label
              value: value
            pattern: pattern
            maxLength: 5
            required: true
        description: description
        invisible: true
        registryName: registryName
        deployTo:
          disableControlPlane: true
          runtime_cluster: true
          runtimeCluster: true
        version: version
        url: url
        dependencies:
        - name: name
          version: version
        - name: name
          version: version
        tags:
        - tags
        - tags
        system:
          kubernetes: kubernetes
          vela: vela
        name: name
        detail: detail
        definitions:
        - name: name
          description: description
          type: type
        - name: name
          description: description
          type: type
        availableVersions:
        - availableVersions
        - availableVersions
      properties:
        availableVersions:
          items:
            type: string
          type: array
        definitions:
          items:
            $ref: '#/components/schemas/V1AddonDefinition'
          type: array
        dependencies:
          items:
            $ref: '#/components/schemas/AddonDependency'
          type: array
        deployTo:
          $ref: '#/components/schemas/AddonDeployTo'
        description:
          type: string
        detail:
          type: string
        icon:
          type: string
        invisible:
          type: boolean
        name:
          type: string
        needNamespace:
          items:
            type: string
          type: array
        registryName:
          type: string
        schema:
          type: string
        system:
          $ref: '#/components/schemas/AddonSystemRequirements'
        tags:
          items:
            type: string
          type: array
        uiSchema:
          items:
            $ref: '#/components/schemas/UtilsUiParameter'
          type: array
        url:
          type: string
        version:
          type: string
      required:
      - availableVersions
      - definitions
      - description
      - icon
      - invisible
      - name
      - schema
      - uiSchema
      - version
      type: object
      x-apifox-orders:
      - availableVersions
      - definitions
      - dependencies
      - deployTo
      - description
      - detail
      - icon
      - invisible
      - name
      - needNamespace
      - registryName
      - schema
      - system
      - tags
      - uiSchema
      - url
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AppDryRunReq:
      example:
        workflow: workflow
        dryRunType: dryRunType
        env: env
        version: version
      properties:
        dryRunType:
          type: string
        env:
          type: string
        version:
          type: string
        workflow:
          type: string
      required:
      - dryRunType
      - env
      - version
      - workflow
      type: object
      x-apifox-orders:
      - dryRunType
      - env
      - version
      - workflow
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AddonStatusResponseClusters:
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateApplicationTraitRequest:
      example:
        alias: alias
        description: description
        type: type
        properties: properties
      properties:
        alias:
          type: string
        description:
          type: string
        properties:
          type: string
        type:
          type: string
      required:
      - properties
      - type
      type: object
      x-apifox-orders:
      - alias
      - description
      - properties
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AddonRegistry:
      example:
        git:
          path: path
          url: url
          token: token
        name: name
        gitlab:
          path: path
          repo: repo
          url: url
          token: token
        gitee:
          path: path
          url: url
          token: token
        helm:
          password: password
          insecureSkipTLS: true
          url: url
          username: username
        oss:
          bucket: bucket
          path: path
          end_point: end_point
      properties:
        git:
          $ref: '#/components/schemas/AddonGitAddonSource'
        gitee:
          $ref: '#/components/schemas/AddonGiteeAddonSource'
        gitlab:
          $ref: '#/components/schemas/AddonGitlabAddonSource'
        helm:
          $ref: '#/components/schemas/AddonHelmSource'
        name:
          type: string
        oss:
          $ref: '#/components/schemas/AddonOssAddonSource'
      required:
      - name
      type: object
      x-apifox-orders:
      - git
      - gitee
      - gitlab
      - helm
      - name
      - oss
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelWorkflowStepStatus:
      properties:
        alias:
          type: string
        firstExecuteTime:
          format: date-time
          type: string
        id:
          type: string
        lastExecuteTime:
          format: date-time
          type: string
        message:
          type: string
        name:
          type: string
        phase:
          type: string
        reason:
          type: string
        subSteps:
          items:
            $ref: '#/components/schemas/ModelStepStatus'
          type: array
        type:
          type: string
      required:
      - alias
      - id
      - name
      type: object
      x-apifox-orders:
      - alias
      - firstExecuteTime
      - id
      - lastExecuteTime
      - message
      - name
      - phase
      - reason
      - subSteps
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DefinitionBase:
      properties:
        alias:
          type: string
        component:
          $ref: '#/components/schemas/V1beta1ComponentDefinitionSpec'
        description:
          type: string
        icon:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
        ownerAddon:
          type: string
        policy:
          $ref: '#/components/schemas/V1beta1PolicyDefinitionSpec'
        status:
          type: string
        trait:
          $ref: '#/components/schemas/V1beta1TraitDefinitionSpec'
        workflowStep:
          $ref: '#/components/schemas/V1beta1WorkflowStepDefinitionSpec'
        workloadType:
          type: string
      required:
      - alias
      - description
      - icon
      - labels
      - name
      - ownerAddon
      - status
      type: object
      x-apifox-orders:
      - alias
      - component
      - description
      - icon
      - labels
      - name
      - ownerAddon
      - policy
      - status
      - trait
      - workflowStep
      - workloadType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DetailWorkflowRecordResponse:
      properties:
        applicationRevision:
          type: string
        deployTime:
          format: date-time
          type: string
        deployUser:
          type: string
        endTime:
          format: date-time
          type: string
        message:
          type: string
        mode:
          type: string
        name:
          type: string
        namespace:
          type: string
        note:
          type: string
        startTime:
          format: date-time
          type: string
        status:
          type: string
        steps:
          items:
            $ref: '#/components/schemas/ModelWorkflowStepStatus'
          type: array
        triggerType:
          type: string
        workflowAlias:
          type: string
        workflowName:
          type: string
      required:
      - applicationRevision
      - deployTime
      - deployUser
      - message
      - mode
      - name
      - namespace
      - note
      - status
      - triggerType
      - workflowAlias
      - workflowName
      type: object
      x-apifox-orders:
      - applicationRevision
      - deployTime
      - deployUser
      - endTime
      - message
      - mode
      - name
      - namespace
      - note
      - startTime
      - status
      - steps
      - triggerType
      - workflowAlias
      - workflowName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1InputVar:
      example:
        parameterKey: parameterKey
        fromStep: fromStep
        from: from
        value: value
      properties:
        from:
          type: string
        fromStep:
          type: string
        parameterKey:
          type: string
        value:
          type: string
      required:
      - from
      - fromStep
      - parameterKey
      - value
      type: object
      x-apifox-orders:
      - from
      - fromStep
      - parameterKey
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ConfigDistribution:
      example:
        configs:
        - name: name
          namespace: namespace
        - name: name
          namespace: namespace
        application:
          Namespace: Namespace
          Name: Name
        name: name
        namespace: namespace
        createdTime: 2000-01-23T04:56:07.000+00:00
        targets:
        - clusterName: clusterName
          namespace: namespace
        - clusterName: clusterName
          namespace: namespace
        status:
          appliedResources:
          - cluster: cluster
            uid: uid
            creator: creator
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          - cluster: cluster
            uid: uid
            creator: creator
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          components:
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          workflow:
            mode: mode
            suspend: true
            contextBackend:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            appRevision: appRevision
            suspendState: suspendState
            finished: true
            startTime: startTime
            endTime: endTime
            message: message
            steps:
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              subSteps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              name: name
              id: id
              message: message
              type: type
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              subSteps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              name: name
              id: id
              message: message
              type: type
            terminated: true
            status: status
          services:
          - cluster: cluster
            traits:
            - healthy: true
              message: message
              type: type
            - healthy: true
              message: message
              type: type
            healthy: true
            name: name
            namespace: namespace
            workloadDefinition:
              apiVersion: apiVersion
              kind: kind
            scopes:
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env: env
            message: message
          - cluster: cluster
            traits:
            - healthy: true
              message: message
              type: type
            - healthy: true
              message: message
              type: type
            healthy: true
            name: name
            namespace: namespace
            workloadDefinition:
              apiVersion: apiVersion
              kind: kind
            scopes:
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env: env
            message: message
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          latestRevision:
            name: name
            revisionHash: revisionHash
            revision: 0
          observedGeneration: 6
          policy:
          - name: name
            type: type
            status: status
          - name: name
            type: type
            status: status
          status: status
      properties:
        application:
          $ref: '#/components/schemas/TypesNamespacedName'
        configs:
          items:
            $ref: '#/components/schemas/ConfigNamespacedName'
          type: array
        createdTime:
          format: date-time
          type: string
        name:
          type: string
        namespace:
          type: string
        status:
          $ref: '#/components/schemas/CommonAppStatus'
        targets:
          items:
            $ref: '#/components/schemas/ConfigClusterTarget'
          type: array
      required:
      - application
      - configs
      - createdTime
      - name
      - namespace
      - status
      - targets
      type: object
      x-apifox-orders:
      - application
      - configs
      - createdTime
      - name
      - namespace
      - status
      - targets
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TypesReference:
      example:
        name: name
        namespace: namespace
      properties:
        name:
          type: string
        namespace:
          type: string
      required:
      - name
      type: object
      x-apifox-orders:
      - name
      - namespace
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UtilsUiParameter:
      example:
        additional: true
        subParameterGroupOption:
        - keys:
          - keys
          - keys
          label: label
        - keys:
          - keys
          - keys
          label: label
        subParameters:
        - null
        - null
        description: description
        label: label
        sort: 0
        disable: true
        jsonKey: jsonKey
        uiType: uiType
        style:
          colSpan: 6
        conditions:
        - op: op
          jsonKey: jsonKey
          action: action
          value: value
        - op: op
          jsonKey: jsonKey
          action: action
          value: value
        validate:
          immutable: true
          min: 5.637376656633329
          max: 1.4658129805029452
          defaultValue: defaultValue
          minLength: 2
          options:
          - label: label
            value: value
          - label: label
            value: value
          pattern: pattern
          maxLength: 5
          required: true
      properties:
        additional:
          type: boolean
        additionalParameter:
          $ref: '#/components/schemas/UtilsUiParameter'
        conditions:
          items:
            $ref: '#/components/schemas/UtilsCondition'
          type: array
        description:
          type: string
        disable:
          type: boolean
        jsonKey:
          type: string
        label:
          type: string
        sort:
          format: integer
          type: integer
        style:
          $ref: '#/components/schemas/UtilsStyle'
        subParameterGroupOption:
          items:
            $ref: '#/components/schemas/UtilsGroupOption'
          type: array
        subParameters:
          items:
            $ref: '#/components/schemas/UtilsUiParameter'
          type: array
        uiType:
          type: string
        validate:
          $ref: '#/components/schemas/UtilsValidate'
      required:
      - description
      - jsonKey
      - label
      - sort
      - uiType
      type: object
      x-apifox-orders:
      - additional
      - additionalParameter
      - conditions
      - description
      - disable
      - jsonKey
      - label
      - sort
      - style
      - subParameterGroupOption
      - subParameters
      - uiType
      - validate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CompareRevisionWithRunningOption:
      example:
        revision: revision
      properties:
        revision:
          type: string
      type: object
      x-apifox-orders:
      - revision
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1LoginRequest:
      example:
        password: password
        code: code
        username: username
      properties:
        code:
          type: string
        password:
          type: string
        username:
          type: string
      type: object
      x-apifox-orders:
      - code
      - password
      - username
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListConfigTemplateResponse:
      example:
        templates:
        - createTime: 2000-01-23T04:56:07.000+00:00
          scope: scope
          name: name
          namespace: namespace
          alias: alias
          description: description
          sensitive: true
        - createTime: 2000-01-23T04:56:07.000+00:00
          scope: scope
          name: name
          namespace: namespace
          alias: alias
          description: description
          sensitive: true
      properties:
        templates:
          items:
            $ref: '#/components/schemas/V1ConfigTemplate'
          type: array
      required:
      - templates
      type: object
      x-apifox-orders:
      - templates
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListPipelineResponse:
      example:
        total: 2
        pipelines:
        - createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          alias: alias
          description: description
          project:
            name: name
            alias: alias
          info:
            lastRun:
              pipelineName: pipelineName
              contextName: contextName
              pipelineRunName: pipelineRunName
              record: 0
              contextValues:
              - value: value
                key: key
              - value: value
                key: key
              project:
                name: name
                alias: alias
              spec:
                mode:
                  subSteps: subSteps
                  steps: steps
                context: context
                workflowSpec:
                  steps:
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    subSteps:
                    - outputs:
                      - name: name
                        valueFrom: valueFrom
                      - name: name
                        valueFrom: valueFrom
                      dependsOn:
                      - dependsOn
                      - dependsOn
                      inputs:
                      - parameterKey: parameterKey
                        from: from
                      - parameterKey: parameterKey
                        from: from
                      meta:
                        alias: alias
                      name: name
                      type: type
                      if: if
                      properties: properties
                      timeout: timeout
                    - outputs:
                      - name: name
                        valueFrom: valueFrom
                      - name: name
                        valueFrom: valueFrom
                      dependsOn:
                      - dependsOn
                      - dependsOn
                      inputs:
                      - parameterKey: parameterKey
                        from: from
                      - parameterKey: parameterKey
                        from: from
                      meta:
                        alias: alias
                      name: name
                      type: type
                      if: if
                      properties: properties
                      timeout: timeout
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    subSteps:
                    - outputs:
                      - name: name
                        valueFrom: valueFrom
                      - name: name
                        valueFrom: valueFrom
                      dependsOn:
                      - dependsOn
                      - dependsOn
                      inputs:
                      - parameterKey: parameterKey
                        from: from
                      - parameterKey: parameterKey
                        from: from
                      meta:
                        alias: alias
                      name: name
                      type: type
                      if: if
                      properties: properties
                      timeout: timeout
                    - outputs:
                      - name: name
                        valueFrom: valueFrom
                      - name: name
                        valueFrom: valueFrom
                      dependsOn:
                      - dependsOn
                      - dependsOn
                      inputs:
                      - parameterKey: parameterKey
                        from: from
                      - parameterKey: parameterKey
                        from: from
                      meta:
                        alias: alias
                      name: name
                      type: type
                      if: if
                      properties: properties
                      timeout: timeout
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                workflowRef: workflowRef
              status:
                mode:
                  subSteps: subSteps
                  steps: steps
                suspend: true
                contextBackend:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                suspendState: suspendState
                finished: true
                startTime: startTime
                endTime: endTime
                conditions:
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  status: status
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  status: status
                message: message
                steps:
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  subSteps:
                  - lastExecuteTime: lastExecuteTime
                    phase: phase
                    firstExecuteTime: firstExecuteTime
                    reason: reason
                    name: name
                    id: id
                    message: message
                    type: type
                  - lastExecuteTime: lastExecuteTime
                    phase: phase
                    firstExecuteTime: firstExecuteTime
                    reason: reason
                    name: name
                    id: id
                    message: message
                    type: type
                  name: name
                  id: id
                  message: message
                  type: type
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  subSteps:
                  - lastExecuteTime: lastExecuteTime
                    phase: phase
                    firstExecuteTime: firstExecuteTime
                    reason: reason
                    name: name
                    id: id
                    message: message
                    type: type
                  - lastExecuteTime: lastExecuteTime
                    phase: phase
                    firstExecuteTime: firstExecuteTime
                    reason: reason
                    name: name
                    id: id
                    message: message
                    type: type
                  name: name
                  id: id
                  message: message
                  type: type
                terminated: true
                status: status
            runStat:
              activeNum: 6
              total:
                fail: 1
                total: 5
                success: 5
              week:
              - fail: 1
                total: 5
                success: 5
              - fail: 1
                total: 5
                success: 5
        - createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          alias: alias
          description: description
          project:
            name: name
            alias: alias
          info:
            lastRun:
              pipelineName: pipelineName
              contextName: contextName
              pipelineRunName: pipelineRunName
              record: 0
              contextValues:
              - value: value
                key: key
              - value: value
                key: key
              project:
                name: name
                alias: alias
              spec:
                mode:
                  subSteps: subSteps
                  steps: steps
                context: context
                workflowSpec:
                  steps:
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    subSteps:
                    - outputs:
                      - name: name
                        valueFrom: valueFrom
                      - name: name
                        valueFrom: valueFrom
                      dependsOn:
                      - dependsOn
                      - dependsOn
                      inputs:
                      - parameterKey: parameterKey
                        from: from
                      - parameterKey: parameterKey
                        from: from
                      meta:
                        alias: alias
                      name: name
                      type: type
                      if: if
                      properties: properties
                      timeout: timeout
                    - outputs:
                      - name: name
                        valueFrom: valueFrom
                      - name: name
                        valueFrom: valueFrom
                      dependsOn:
                      - dependsOn
                      - dependsOn
                      inputs:
                      - parameterKey: parameterKey
                        from: from
                      - parameterKey: parameterKey
                        from: from
                      meta:
                        alias: alias
                      name: name
                      type: type
                      if: if
                      properties: properties
                      timeout: timeout
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    subSteps:
                    - outputs:
                      - name: name
                        valueFrom: valueFrom
                      - name: name
                        valueFrom: valueFrom
                      dependsOn:
                      - dependsOn
                      - dependsOn
                      inputs:
                      - parameterKey: parameterKey
                        from: from
                      - parameterKey: parameterKey
                        from: from
                      meta:
                        alias: alias
                      name: name
                      type: type
                      if: if
                      properties: properties
                      timeout: timeout
                    - outputs:
                      - name: name
                        valueFrom: valueFrom
                      - name: name
                        valueFrom: valueFrom
                      dependsOn:
                      - dependsOn
                      - dependsOn
                      inputs:
                      - parameterKey: parameterKey
                        from: from
                      - parameterKey: parameterKey
                        from: from
                      meta:
                        alias: alias
                      name: name
                      type: type
                      if: if
                      properties: properties
                      timeout: timeout
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                workflowRef: workflowRef
              status:
                mode:
                  subSteps: subSteps
                  steps: steps
                suspend: true
                contextBackend:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                suspendState: suspendState
                finished: true
                startTime: startTime
                endTime: endTime
                conditions:
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  status: status
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  status: status
                message: message
                steps:
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  subSteps:
                  - lastExecuteTime: lastExecuteTime
                    phase: phase
                    firstExecuteTime: firstExecuteTime
                    reason: reason
                    name: name
                    id: id
                    message: message
                    type: type
                  - lastExecuteTime: lastExecuteTime
                    phase: phase
                    firstExecuteTime: firstExecuteTime
                    reason: reason
                    name: name
                    id: id
                    message: message
                    type: type
                  name: name
                  id: id
                  message: message
                  type: type
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  subSteps:
                  - lastExecuteTime: lastExecuteTime
                    phase: phase
                    firstExecuteTime: firstExecuteTime
                    reason: reason
                    name: name
                    id: id
                    message: message
                    type: type
                  - lastExecuteTime: lastExecuteTime
                    phase: phase
                    firstExecuteTime: firstExecuteTime
                    reason: reason
                    name: name
                    id: id
                    message: message
                    type: type
                  name: name
                  id: id
                  message: message
                  type: type
                terminated: true
                status: status
            runStat:
              activeNum: 6
              total:
                fail: 1
                total: 5
                success: 5
              week:
              - fail: 1
                total: 5
                success: 5
              - fail: 1
                total: 5
                success: 5
      properties:
        pipelines:
          items:
            $ref: '#/components/schemas/V1PipelineListItem'
          type: array
        total:
          format: int32
          type: integer
      required:
      - pipelines
      - total
      type: object
      x-apifox-orders:
      - pipelines
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateApplicationTemplateRequest:
      example:
        templateName: templateName
        description: description
        version: version
      properties:
        description:
          type: string
        templateName:
          type: string
        version:
          type: string
      required:
      - description
      - templateName
      - version
      type: object
      x-apifox-orders:
      - description
      - templateName
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateConfigRequest:
      example:
        template:
          name: name
          namespace: namespace
        name: name
        alias: alias
        description: description
        properties: properties
      properties:
        alias:
          type: string
        description:
          type: string
        name:
          type: string
        properties:
          type: string
        template:
          $ref: '#/components/schemas/V1NamespacedName'
      required:
      - alias
      - description
      - name
      - template
      type: object
      x-apifox-orders:
      - alias
      - description
      - name
      - properties
      - template
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdatePolicyRequest:
      example:
        envName: envName
        alias: alias
        description: description
        type: type
        properties: properties
        workflowPolicyBind:
        - name: name
          steps:
          - steps
          - steps
        - name: name
          steps:
          - steps
          - steps
      properties:
        alias:
          type: string
        description:
          type: string
        envName:
          type: string
        properties:
          type: string
        type:
          type: string
        workflowPolicyBind:
          items:
            $ref: '#/components/schemas/V1WorkflowPolicyBinding'
          type: array
      required:
      - alias
      - description
      - envName
      - properties
      - type
      - workflowPolicyBind
      type: object
      x-apifox-orders:
      - alias
      - description
      - envName
      - properties
      - type
      - workflowPolicyBind
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AddonStatusResponse:
      example:
        args: '{}'
        phase: phase
        enabling_progress:
          total_components: 5
          enabled_components: 1
        name: name
        allClusters:
        - name: name
          alias: alias
        - name: name
          alias: alias
        installedVersion: installedVersion
        appStatus:
          appliedResources:
          - cluster: cluster
            uid: uid
            creator: creator
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          - cluster: cluster
            uid: uid
            creator: creator
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          components:
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          workflow:
            mode: mode
            suspend: true
            contextBackend:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            appRevision: appRevision
            suspendState: suspendState
            finished: true
            startTime: startTime
            endTime: endTime
            message: message
            steps:
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              subSteps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              name: name
              id: id
              message: message
              type: type
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              subSteps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              name: name
              id: id
              message: message
              type: type
            terminated: true
            status: status
          services:
          - cluster: cluster
            traits:
            - healthy: true
              message: message
              type: type
            - healthy: true
              message: message
              type: type
            healthy: true
            name: name
            namespace: namespace
            workloadDefinition:
              apiVersion: apiVersion
              kind: kind
            scopes:
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env: env
            message: message
          - cluster: cluster
            traits:
            - healthy: true
              message: message
              type: type
            - healthy: true
              message: message
              type: type
            healthy: true
            name: name
            namespace: namespace
            workloadDefinition:
              apiVersion: apiVersion
              kind: kind
            scopes:
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env: env
            message: message
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          latestRevision:
            name: name
            revisionHash: revisionHash
            revision: 0
          observedGeneration: 6
          policy:
          - name: name
            type: type
            status: status
          - name: name
            type: type
            status: status
          status: status
        clusters:
          key: '{}'
      properties:
        allClusters:
          items:
            $ref: '#/components/schemas/V1NameAlias'
          type: array
        appStatus:
          $ref: '#/components/schemas/CommonAppStatus'
        args:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        clusters:
          additionalProperties:
            $ref: '#/definitions/42676762'
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        enabling_progress:
          $ref: '#/components/schemas/V1EnablingProgress'
        installedVersion:
          type: string
        name:
          type: string
        phase:
          type: string
      required:
      - args
      - name
      - phase
      type: object
      x-apifox-orders:
      - allClusters
      - appStatus
      - args
      - clusters
      - enabling_progress
      - installedVersion
      - name
      - phase
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    MapStringInterface:
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateAddonRegistryRequest:
      example:
        git:
          path: path
          url: url
          token: token
        gitlab:
          path: path
          repo: repo
          url: url
          token: token
        gitee:
          path: path
          url: url
          token: token
        helm:
          password: password
          insecureSkipTLS: true
          url: url
          username: username
        oss:
          bucket: bucket
          path: path
          end_point: end_point
      properties:
        git:
          $ref: '#/components/schemas/AddonGitAddonSource'
        gitee:
          $ref: '#/components/schemas/AddonGiteeAddonSource'
        gitlab:
          $ref: '#/components/schemas/AddonGitlabAddonSource'
        helm:
          $ref: '#/components/schemas/AddonHelmSource'
        oss:
          $ref: '#/components/schemas/AddonOssAddonSource'
      type: object
      x-apifox-orders:
      - git
      - gitee
      - gitlab
      - helm
      - oss
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1alpha1WorkflowExecuteMode:
      example:
        subSteps: subSteps
        steps: steps
      properties:
        steps:
          type: string
        subSteps:
          type: string
      type: object
      x-apifox-orders:
      - steps
      - subSteps
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AddonOssAddonSource:
      example:
        bucket: bucket
        path: path
        end_point: end_point
      properties:
        bucket:
          type: string
        end_point:
          type: string
        path:
          type: string
      required:
      - bucket
      - end_point
      - path
      type: object
      x-apifox-orders:
      - bucket
      - end_point
      - path
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UtilsGroupOption:
      example:
        keys:
        - keys
        - keys
        label: label
      properties:
        keys:
          items:
            type: string
          type: array
        label:
          type: string
      required:
      - keys
      - label
      type: object
      x-apifox-orders:
      - keys
      - label
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1EmptyResponse1:
      type: string
      x-apifox-folder: Schemas
    V1UpdateConfigRequest1:
      type: string
      x-apifox-folder: Schemas
    V1GetLoginTypeResponse:
      example:
        loginType: loginType
      properties:
        loginType:
          type: string
      required:
      - loginType
      type: object
      x-apifox-orders:
      - loginType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ImageInfo:
      example:
        registry: registry
        size: 1
        manifest:
          schemaVersion: 6
          layers:
          - urls:
            - urls
            - urls
            data: data
            size: 0
            digest: digest
            annotations:
              key: annotations
            mediaType: mediaType
            platform:
              features:
              - features
              - features
              os: os
              os.features:
              - os.features
              - os.features
              variant: variant
              architecture: architecture
              os.version: os.version
          - urls:
            - urls
            - urls
            data: data
            size: 0
            digest: digest
            annotations:
              key: annotations
            mediaType: mediaType
            platform:
              features:
              - features
              - features
              os: os
              os.features:
              - os.features
              - os.features
              variant: variant
              architecture: architecture
              os.version: os.version
          annotations:
            key: annotations
          mediaType: mediaType
          config:
            urls:
            - urls
            - urls
            data: data
            size: 0
            digest: digest
            annotations:
              key: annotations
            mediaType: mediaType
            platform:
              features:
              - features
              - features
              os: os
              os.features:
              - os.features
              - os.features
              variant: variant
              architecture: architecture
              os.version: os.version
        name: name
        secretNames:
        - secretNames
        - secretNames
        message: message
        info:
          container: container
          os: os
          author: author
          created: created
          rootfs:
            diff_ids:
            - Hex: Hex
              Algorithm: Algorithm
            - Hex: Hex
              Algorithm: Algorithm
            type: type
          variant: variant
          history:
          - author: author
            created: created
            empty_layer: true
            comment: comment
            created_by: created_by
          - author: author
            created: created
            empty_layer: true
            comment: comment
            created_by: created_by
          config:
            StopSignal: StopSignal
            User: User
            Entrypoint:
            - Entrypoint
            - Entrypoint
            AttachStderr: true
            ArgsEscaped: true
            Hostname: Hostname
            Labels:
              key: Labels
            OpenStdin: true
            Healthcheck:
              Test:
              - Test
              - Test
              Retries: 6
              Timeout: 5
              Interval: 0
              StartPeriod: 1
            Env:
            - Env
            - Env
            Image: Image
            MacAddress: MacAddress
            NetworkDisabled: true
            ExposedPorts:
              key: '{}'
            StdinOnce: true
            AttachStdout: true
            WorkingDir: WorkingDir
            Shell:
            - Shell
            - Shell
            Volumes:
              key: '{}'
            OnBuild:
            - OnBuild
            - OnBuild
            AttachStdin: true
            Domainname: Domainname
            Tty: true
            Cmd:
            - Cmd
            - Cmd
          docker_version: docker_version
          architecture: architecture
          os.version: os.version
      properties:
        info:
          $ref: '#/components/schemas/V1ConfigFile'
        manifest:
          $ref: '#/components/schemas/V1Manifest'
        message:
          type: string
        name:
          type: string
        registry:
          type: string
        secretNames:
          items:
            type: string
          type: array
        size:
          format: int64
          type: integer
      required:
      - manifest
      - name
      - registry
      - secretNames
      - size
      type: object
      x-apifox-orders:
      - info
      - manifest
      - message
      - name
      - registry
      - secretNames
      - size
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListContextValueResponse:
      example:
        total: 0
        contexts:
          key:
          - '{}'
          - '{}'
      properties:
        contexts:
          additionalProperties:
            items:
              $ref: '#/definitions/42676737'
            type: array
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        total:
          format: int32
          type: integer
      required:
      - contexts
      - total
      type: object
      x-apifox-orders:
      - contexts
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationStatisticsResponse:
      example:
        workflowCount: 5
        envCount: 0
        revisionCount: 6
        targetCount: 1
      properties:
        envCount:
          format: int64
          type: integer
        revisionCount:
          format: int64
          type: integer
        targetCount:
          format: int64
          type: integer
        workflowCount:
          format: int64
          type: integer
      required:
      - envCount
      - revisionCount
      - targetCount
      - workflowCount
      type: object
      x-apifox-orders:
      - envCount
      - revisionCount
      - targetCount
      - workflowCount
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationDeployResponse:
      example:
        note: note
        reason: reason
        deployUser:
          name: name
          alias: alias
        codeInfo:
          commit: commit
          branch: branch
          user: user
        createTime: 2000-01-23T04:56:07.000+00:00
        envName: envName
        record:
          mode: mode
          workflowAlias: workflowAlias
          name: name
          namespace: namespace
          startTime: 2000-01-23T04:56:07.000+00:00
          workflowName: workflowName
          applicationRevision: applicationRevision
          endTime: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
        imageInfo:
          resource:
            createTime: 2000-01-23T04:56:07.000+00:00
            digest: digest
            tag: tag
            url: url
          repository:
            createTime: 2000-01-23T04:56:07.000+00:00
            name: name
            namespace: namespace
            fullName: fullName
            region: region
            type: type
          type: type
        triggerType: triggerType
        version: version
        status: status
      properties:
        codeInfo:
          $ref: '#/components/schemas/ModelCodeInfo'
        createTime:
          format: date-time
          type: string
        deployUser:
          $ref: '#/components/schemas/V1NameAlias'
        envName:
          type: string
        imageInfo:
          $ref: '#/components/schemas/ModelImageInfo'
        note:
          type: string
        reason:
          type: string
        record:
          $ref: '#/components/schemas/V1WorkflowRecordBase'
        status:
          type: string
        triggerType:
          type: string
        version:
          type: string
      required:
      - createTime
      - envName
      - note
      - record
      - status
      - triggerType
      - version
      type: object
      x-apifox-orders:
      - codeInfo
      - createTime
      - deployUser
      - envName
      - imageInfo
      - note
      - reason
      - record
      - status
      - triggerType
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1beta1Workflow:
      example:
        mode:
          subSteps: subSteps
          steps: steps
        ref: ref
        steps:
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          subSteps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          type: type
          if: if
          properties: properties
          timeout: timeout
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          subSteps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          type: type
          if: if
          properties: properties
          timeout: timeout
      properties:
        mode:
          $ref: '#/components/schemas/V1alpha1WorkflowExecuteMode'
        ref:
          type: string
        steps:
          items:
            $ref: '#/components/schemas/V1alpha1WorkflowStep'
          type: array
      type: object
      x-apifox-orders:
      - mode
      - ref
      - steps
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateApplicationComponentRequest:
      example:
        dependsOn:
        - dependsOn
        - dependsOn
        icon: icon
        alias: alias
        description: description
        properties: properties
        labels:
          key: labels
      properties:
        alias:
          type: string
        dependsOn:
          items:
            type: string
          type: array
        description:
          type: string
        icon:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        properties:
          type: string
      type: object
      x-apifox-orders:
      - alias
      - dependsOn
      - description
      - icon
      - labels
      - properties
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1TerraformProvider:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        provider: provider
        name: name
        region: region
      properties:
        createTime:
          format: date-time
          type: string
        name:
          type: string
        provider:
          type: string
        region:
          type: string
      required:
      - createTime
      - name
      - provider
      - region
      type: object
      x-apifox-orders:
      - createTime
      - name
      - provider
      - region
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ConfigTemplate:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        scope: scope
        name: name
        namespace: namespace
        alias: alias
        description: description
        sensitive: true
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        namespace:
          type: string
        scope:
          type: string
        sensitive:
          type: boolean
      required:
      - alias
      - createTime
      - description
      - name
      - namespace
      - scope
      - sensitive
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - name
      - namespace
      - scope
      - sensitive
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1alpha1WorkflowStep:
      example:
        outputs:
        - name: name
          valueFrom: valueFrom
        - name: name
          valueFrom: valueFrom
        dependsOn:
        - dependsOn
        - dependsOn
        subSteps:
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          type: type
          if: if
          properties: properties
          timeout: timeout
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          meta:
            alias: alias
          name: name
          type: type
          if: if
          properties: properties
          timeout: timeout
        inputs:
        - parameterKey: parameterKey
          from: from
        - parameterKey: parameterKey
          from: from
        meta:
          alias: alias
        name: name
        type: type
        if: if
        properties: properties
        timeout: timeout
      properties:
        dependsOn:
          items:
            type: string
          type: array
        if:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/V1alpha1InputItem'
          type: array
        meta:
          $ref: '#/components/schemas/V1alpha1WorkflowStepMeta'
        name:
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/V1alpha1OutputItem'
          type: array
        properties:
          type: string
        subSteps:
          items:
            $ref: '#/components/schemas/V1alpha1WorkflowStepBase'
          type: array
        timeout:
          type: string
        type:
          type: string
      required:
      - type
      type: object
      x-apifox-orders:
      - dependsOn
      - if
      - inputs
      - meta
      - name
      - outputs
      - properties
      - subSteps
      - timeout
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1LoginUserInfoResponse:
      example:
        lastLoginTime: 2000-01-23T04:56:07.000+00:00
        projectPermissions:
          key:
          - '{}'
          - '{}'
        projects:
        - owner:
            name: name
            alias: alias
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
        - owner:
            name: name
            alias: alias
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        alias: alias
        disabled: true
        platformPermissions:
        - createTime: 2000-01-23T04:56:07.000+00:00
          effect: effect
          name: name
          alias: alias
          resources:
          - resources
          - resources
          updateTime: 2000-01-23T04:56:07.000+00:00
          actions:
          - actions
          - actions
        - createTime: 2000-01-23T04:56:07.000+00:00
          effect: effect
          name: name
          alias: alias
          resources:
          - resources
          - resources
          updateTime: 2000-01-23T04:56:07.000+00:00
          actions:
          - actions
          - actions
        email: email
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        disabled:
          type: boolean
        email:
          type: string
        lastLoginTime:
          format: date-time
          type: string
        name:
          type: string
        platformPermissions:
          items:
            $ref: '#/components/schemas/V1PermissionBase'
          type: array
        projectPermissions:
          additionalProperties:
            items:
              $ref: '#/definitions/42676895'
            type: array
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        projects:
          items:
            $ref: '#/components/schemas/V1ProjectBase'
          type: array
      required:
      - createTime
      - disabled
      - email
      - lastLoginTime
      - name
      - platformPermissions
      - projectPermissions
      - projects
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - disabled
      - email
      - lastLoginTime
      - name
      - platformPermissions
      - projectPermissions
      - projects
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1EnableAddonRequest:
      example:
        args: '{}'
        registryName: registryName
        version: version
        clusters:
        - clusters
        - clusters
      properties:
        args:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        clusters:
          items:
            type: string
          type: array
        registryName:
          type: string
        version:
          type: string
      type: object
      x-apifox-orders:
      - args
      - clusters
      - registryName
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DetailComponentResponse:
      example:
        outputs:
        - name: name
          valueFrom: valueFrom
        - name: name
          valueFrom: valueFrom
        creator: creator
        traits:
        - createTime: 2000-01-23T04:56:07.000+00:00
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          type: type
          properties: '{}'
        - createTime: 2000-01-23T04:56:07.000+00:00
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          type: type
          properties: '{}'
        dependsOn:
        - dependsOn
        - dependsOn
        inputs:
        - parameterKey: parameterKey
          from: from
        - parameterKey: parameterKey
          from: from
        icon: icon
        description: description
        main: true
        updateTime: 2000-01-23T04:56:07.000+00:00
        type: type
        labels:
          key: labels
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        alias: alias
        definition:
          extension: extension
          workload:
            definition:
              apiVersion: apiVersion
              kind: kind
            type: type
          podSpecPath: podSpecPath
          schematic:
            cue:
              template: template
            terraform:
              gitCredentialsSecretReference:
                name: name
                namespace: namespace
              path: path
              providerRef:
                name: name
                namespace: namespace
              deleteResource: true
              configuration: configuration
              writeConnectionSecretToRef:
                name: name
                namespace: namespace
              customRegion: customRegion
              type: type
            helm:
              release: release
              repository: repository
            kube:
              template: template
              parameters:
              - fieldPaths:
                - fieldPaths
                - fieldPaths
                name: name
                description: description
                type: type
                required: true
              - fieldPaths:
                - fieldPaths
                - fieldPaths
                name: name
                description: description
                type: type
                required: true
          childResourceKinds:
          - apiVersion: apiVersion
            kind: kind
            selector:
              key: selector
          - apiVersion: apiVersion
            kind: kind
            selector:
              key: selector
          revisionLabel: revisionLabel
          status:
            healthPolicy: healthPolicy
            customStatus: customStatus
        scopes:
          key: scopes
        appPrimaryKey: appPrimaryKey
        properties: '{}'
        externalRevision: externalRevision
        workloadType:
          definition:
            apiVersion: apiVersion
            kind: kind
          type: type
      properties:
        alias:
          type: string
        appPrimaryKey:
          type: string
        createTime:
          format: date-time
          type: string
        creator:
          type: string
        definition:
          $ref: '#/components/schemas/V1beta1ComponentDefinitionSpec'
        dependsOn:
          items:
            type: string
          type: array
        description:
          type: string
        externalRevision:
          type: string
        icon:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/V1alpha1InputItem'
          type: array
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        main:
          type: boolean
        name:
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/V1alpha1OutputItem'
          type: array
        properties:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        scopes:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        traits:
          items:
            $ref: '#/components/schemas/ModelApplicationTrait'
          type: array
        type:
          type: string
        updateTime:
          format: date-time
          type: string
        workloadType:
          $ref: '#/components/schemas/CommonWorkloadTypeDescriptor'
      required:
      - alias
      - appPrimaryKey
      - createTime
      - creator
      - definition
      - main
      - name
      - type
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - appPrimaryKey
      - createTime
      - creator
      - definition
      - dependsOn
      - description
      - externalRevision
      - icon
      - inputs
      - labels
      - main
      - name
      - outputs
      - properties
      - scopes
      - traits
      - type
      - updateTime
      - workloadType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelJsonStruct:
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1Manifest:
      example:
        schemaVersion: 6
        layers:
        - urls:
          - urls
          - urls
          data: data
          size: 0
          digest: digest
          annotations:
            key: annotations
          mediaType: mediaType
          platform:
            features:
            - features
            - features
            os: os
            os.features:
            - os.features
            - os.features
            variant: variant
            architecture: architecture
            os.version: os.version
        - urls:
          - urls
          - urls
          data: data
          size: 0
          digest: digest
          annotations:
            key: annotations
          mediaType: mediaType
          platform:
            features:
            - features
            - features
            os: os
            os.features:
            - os.features
            - os.features
            variant: variant
            architecture: architecture
            os.version: os.version
        annotations:
          key: annotations
        mediaType: mediaType
        config:
          urls:
          - urls
          - urls
          data: data
          size: 0
          digest: digest
          annotations:
            key: annotations
          mediaType: mediaType
          platform:
            features:
            - features
            - features
            os: os
            os.features:
            - os.features
            - os.features
            variant: variant
            architecture: architecture
            os.version: os.version
      properties:
        annotations:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        config:
          $ref: '#/components/schemas/V1Descriptor'
        layers:
          items:
            $ref: '#/components/schemas/V1Descriptor'
          type: array
        mediaType:
          type: string
        schemaVersion:
          format: int64
          type: integer
      required:
      - config
      - layers
      - schemaVersion
      type: object
      x-apifox-orders:
      - annotations
      - config
      - layers
      - mediaType
      - schemaVersion
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ConfigFile:
      example:
        container: container
        os: os
        author: author
        created: created
        rootfs:
          diff_ids:
          - Hex: Hex
            Algorithm: Algorithm
          - Hex: Hex
            Algorithm: Algorithm
          type: type
        variant: variant
        history:
        - author: author
          created: created
          empty_layer: true
          comment: comment
          created_by: created_by
        - author: author
          created: created
          empty_layer: true
          comment: comment
          created_by: created_by
        config:
          StopSignal: StopSignal
          User: User
          Entrypoint:
          - Entrypoint
          - Entrypoint
          AttachStderr: true
          ArgsEscaped: true
          Hostname: Hostname
          Labels:
            key: Labels
          OpenStdin: true
          Healthcheck:
            Test:
            - Test
            - Test
            Retries: 6
            Timeout: 5
            Interval: 0
            StartPeriod: 1
          Env:
          - Env
          - Env
          Image: Image
          MacAddress: MacAddress
          NetworkDisabled: true
          ExposedPorts:
            key: '{}'
          StdinOnce: true
          AttachStdout: true
          WorkingDir: WorkingDir
          Shell:
          - Shell
          - Shell
          Volumes:
            key: '{}'
          OnBuild:
          - OnBuild
          - OnBuild
          AttachStdin: true
          Domainname: Domainname
          Tty: true
          Cmd:
          - Cmd
          - Cmd
        docker_version: docker_version
        architecture: architecture
        os.version: os.version
      properties:
        architecture:
          type: string
        author:
          type: string
        config:
          $ref: '#/components/schemas/V1Config'
        container:
          type: string
        created:
          type: string
        docker_version:
          type: string
        history:
          items:
            $ref: '#/components/schemas/V1History'
          type: array
        os:
          type: string
        os.version:
          type: string
        rootfs:
          $ref: '#/components/schemas/V1RootFs'
        variant:
          type: string
      required:
      - architecture
      - config
      - os
      - rootfs
      type: object
      x-apifox-orders:
      - architecture
      - author
      - config
      - container
      - created
      - docker_version
      - history
      - os
      - os.version
      - rootfs
      - variant
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1WorkflowRecord:
      properties:
        applicationRevision:
          type: string
        endTime:
          format: date-time
          type: string
        message:
          type: string
        mode:
          type: string
        name:
          type: string
        namespace:
          type: string
        startTime:
          format: date-time
          type: string
        status:
          type: string
        steps:
          items:
            $ref: '#/components/schemas/ModelWorkflowStepStatus'
          type: array
        workflowAlias:
          type: string
        workflowName:
          type: string
      required:
      - applicationRevision
      - message
      - mode
      - name
      - namespace
      - status
      - workflowAlias
      - workflowName
      type: object
      x-apifox-orders:
      - applicationRevision
      - endTime
      - message
      - mode
      - name
      - namespace
      - startTime
      - status
      - steps
      - workflowAlias
      - workflowName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1PipelineBase:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        alias: alias
        description: description
        project:
          name: name
          alias: alias
        spec:
          mode:
            subSteps: subSteps
            steps: steps
          steps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            description: description
            type: type
            timeout: timeout
            meta:
              alias: alias
            name: name
            alias: alias
            orderIndex: 0
            if: if
            properties: '{}'
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            description: description
            type: type
            timeout: timeout
            meta:
              alias: alias
            name: name
            alias: alias
            orderIndex: 0
            if: if
            properties: '{}'
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        project:
          $ref: '#/components/schemas/V1NameAlias'
        spec:
          $ref: '#/components/schemas/ModelWorkflowSpec'
      required:
      - alias
      - createTime
      - description
      - name
      - project
      - spec
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - name
      - project
      - spec
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationRequest:
      example:
        components:
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          traits:
          - type: type
            properties: properties
          - type: type
            properties: properties
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          name: name
          scopes:
            key: scopes
          type: type
          properties: properties
          externalRevision: externalRevision
        - outputs:
          - name: name
            valueFrom: valueFrom
          - name: name
            valueFrom: valueFrom
          traits:
          - type: type
            properties: properties
          - type: type
            properties: properties
          dependsOn:
          - dependsOn
          - dependsOn
          inputs:
          - parameterKey: parameterKey
            from: from
          - parameterKey: parameterKey
            from: from
          name: name
          scopes:
            key: scopes
          type: type
          properties: properties
          externalRevision: externalRevision
        workflow:
          mode:
            subSteps: subSteps
            steps: steps
          ref: ref
          steps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            meta:
              alias: alias
            name: name
            type: type
            if: if
            properties: properties
            timeout: timeout
        policies:
        - name: name
          type: type
          properties: properties
        - name: name
          type: type
          properties: properties
      properties:
        components:
          items:
            $ref: '#/components/schemas/CommonApplicationComponent'
          type: array
        policies:
          items:
            $ref: '#/components/schemas/V1beta1AppPolicy'
          type: array
        workflow:
          $ref: '#/components/schemas/V1beta1Workflow'
      required:
      - components
      type: object
      x-apifox-orders:
      - components
      - policies
      - workflow
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ConfigVolumes:
      type: string
      x-apifox-folder: Schemas
    V1PipelineRunBase:
      example:
        pipelineName: pipelineName
        contextName: contextName
        pipelineRunName: pipelineRunName
        record: 0
        contextValues:
        - value: value
          key: key
        - value: value
          key: key
        project:
          name: name
          alias: alias
        spec:
          mode:
            subSteps: subSteps
            steps: steps
          context: context
          workflowSpec:
            steps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              subSteps:
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              subSteps:
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
          workflowRef: workflowRef
      properties:
        contextName:
          type: string
        contextValues:
          items:
            $ref: '#/components/schemas/ModelValue'
          type: array
        pipelineName:
          type: string
        pipelineRunName:
          type: string
        project:
          $ref: '#/components/schemas/V1NameAlias'
        record:
          format: int64
          type: integer
        spec:
          $ref: '#/components/schemas/V1alpha1WorkflowRunSpec'
      required:
      - contextName
      - contextValues
      - pipelineName
      - pipelineRunName
      - project
      - record
      - spec
      type: object
      x-apifox-orders:
      - contextName
      - contextValues
      - pipelineName
      - pipelineRunName
      - project
      - record
      - spec
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UtilsOptionValue:
      type: string
      x-apifox-folder: Schemas
    V1ListProjectUsersResponse:
      example:
        total: 0
        users:
        - userRoles:
          - userRoles
          - userRoles
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          alias: alias
          updateTime: 2000-01-23T04:56:07.000+00:00
        - userRoles:
          - userRoles
          - userRoles
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          alias: alias
          updateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          format: int64
          type: integer
        users:
          items:
            $ref: '#/components/schemas/V1ProjectUserBase'
          type: array
      required:
      - total
      - users
      type: object
      x-apifox-orders:
      - total
      - users
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListTerraformProviderResponse:
      example:
        providers:
        - createTime: 2000-01-23T04:56:07.000+00:00
          provider: provider
          name: name
          region: region
        - createTime: 2000-01-23T04:56:07.000+00:00
          provider: provider
          name: name
          region: region
      properties:
        providers:
          items:
            $ref: '#/components/schemas/V1TerraformProvider'
          type: array
      required:
      - providers
      type: object
      x-apifox-orders:
      - providers
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CloudproviderCloudCluster:
      example:
        dashboardURL: dashboardURL
        provider: provider
        regionID: regionID
        zone: zone
        vpcID: vpcID
        apiServerURL: apiServerURL
        name: name
        zoneID: zoneID
        id: id
        type: type
        labels:
          key: labels
        status: status
      properties:
        apiServerURL:
          type: string
        dashboardURL:
          type: string
        id:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
        provider:
          type: string
        regionID:
          type: string
        status:
          type: string
        type:
          type: string
        vpcID:
          type: string
        zone:
          type: string
        zoneID:
          type: string
      required:
      - apiServerURL
      - dashboardURL
      - id
      - labels
      - name
      - provider
      - regionID
      - status
      - type
      - vpcID
      - zone
      - zoneID
      type: object
      x-apifox-orders:
      - apiServerURL
      - dashboardURL
      - id
      - labels
      - name
      - provider
      - regionID
      - status
      - type
      - vpcID
      - zone
      - zoneID
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ConfigExposedPorts:
      type: string
      x-apifox-folder: Schemas
    V1DetailUserResponse:
      example:
        lastLoginTime: 2000-01-23T04:56:07.000+00:00
        projects:
        - owner:
            name: name
            alias: alias
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
        - owner:
            name: name
            alias: alias
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
        createTime: 2000-01-23T04:56:07.000+00:00
        roles:
        - name: name
          alias: alias
        - name: name
          alias: alias
        name: name
        alias: alias
        disabled: true
        email: email
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        disabled:
          type: boolean
        email:
          type: string
        lastLoginTime:
          format: date-time
          type: string
        name:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/V1ProjectBase'
          type: array
        roles:
          items:
            $ref: '#/components/schemas/V1NameAlias'
          type: array
      required:
      - createTime
      - disabled
      - email
      - lastLoginTime
      - name
      - projects
      - roles
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - disabled
      - email
      - lastLoginTime
      - name
      - projects
      - roles
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonTerraform:
      example:
        gitCredentialsSecretReference:
          name: name
          namespace: namespace
        path: path
        providerRef:
          name: name
          namespace: namespace
        deleteResource: true
        configuration: configuration
        writeConnectionSecretToRef:
          name: name
          namespace: namespace
        customRegion: customRegion
        type: type
      properties:
        configuration:
          type: string
        customRegion:
          type: string
        deleteResource:
          type: boolean
        gitCredentialsSecretReference:
          $ref: '#/components/schemas/V1SecretReference'
        path:
          type: string
        providerRef:
          $ref: '#/components/schemas/TypesReference'
        type:
          type: string
        writeConnectionSecretToRef:
          $ref: '#/components/schemas/TypesSecretReference'
      required:
      - configuration
      type: object
      x-apifox-orders:
      - configuration
      - customRegion
      - deleteResource
      - gitCredentialsSecretReference
      - path
      - providerRef
      - type
      - writeConnectionSecretToRef
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AddonDependency:
      example:
        name: name
        version: version
      properties:
        name:
          type: string
        version:
          type: string
      type: object
      x-apifox-orders:
      - name
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateUserRequest:
      example:
        password: password
        roles:
        - roles
        - roles
        name: name
        alias: alias
        email: email
      properties:
        alias:
          type: string
        email:
          type: string
        name:
          type: string
        password:
          type: string
        roles:
          items:
            type: string
          type: array
      required:
      - email
      - name
      - password
      - roles
      type: object
      x-apifox-orders:
      - alias
      - email
      - name
      - password
      - roles
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AddonHelmSource:
      example:
        password: password
        insecureSkipTLS: true
        url: url
        username: username
      properties:
        insecureSkipTLS:
          type: boolean
        password:
          type: string
        url:
          type: string
        username:
          type: string
      type: object
      x-apifox-orders:
      - insecureSkipTLS
      - password
      - url
      - username
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateApplicationTriggerRequest:
      example:
        registry: registry
        payloadType: payloadType
        name: name
        alias: alias
        description: description
        workflowName: workflowName
        componentName: componentName
        type: type
      properties:
        alias:
          type: string
        componentName:
          type: string
        description:
          type: string
        name:
          type: string
        payloadType:
          type: string
        registry:
          type: string
        type:
          type: string
        workflowName:
          type: string
      required:
      - name
      - payloadType
      - type
      - workflowName
      type: object
      x-apifox-orders:
      - alias
      - componentName
      - description
      - name
      - payloadType
      - registry
      - type
      - workflowName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationRollbackResponse:
      example:
        record:
          mode: mode
          workflowAlias: workflowAlias
          name: name
          namespace: namespace
          startTime: 2000-01-23T04:56:07.000+00:00
          workflowName: workflowName
          applicationRevision: applicationRevision
          endTime: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
      properties:
        record:
          $ref: '#/components/schemas/V1WorkflowRecordBase'
      required:
      - record
      type: object
      x-apifox-orders:
      - record
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ConditionConditionedStatus:
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/ConditionCondition'
          type: array
      type: object
      x-apifox-orders:
      - conditions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1alpha1WorkflowStepMeta:
      example:
        alias: alias
      properties:
        alias:
          type: string
      type: object
      x-apifox-orders:
      - alias
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ClusterResourceInfo:
      example:
        gpuUsed: 5
        workerNumber: 2
        memoryCapacity: 2
        cpuUsed: 6
        storageClassList:
        - storageClassList
        - storageClassList
        cpuCapacity: 0
        memoryUsed: 7
        gpuCapacity: 1
        masterNumber: 5
        podCapacity: 9
        podUsed: 3
      properties:
        cpuCapacity:
          format: int64
          type: integer
        cpuUsed:
          format: int64
          type: integer
        gpuCapacity:
          format: int64
          type: integer
        gpuUsed:
          format: int64
          type: integer
        masterNumber:
          format: int32
          type: integer
        memoryCapacity:
          format: int64
          type: integer
        memoryUsed:
          format: int64
          type: integer
        podCapacity:
          format: int64
          type: integer
        podUsed:
          format: int64
          type: integer
        storageClassList:
          items:
            type: string
          type: array
        workerNumber:
          format: int32
          type: integer
      required:
      - cpuCapacity
      - cpuUsed
      - masterNumber
      - memoryCapacity
      - memoryUsed
      - podCapacity
      - podUsed
      - workerNumber
      type: object
      x-apifox-orders:
      - cpuCapacity
      - cpuUsed
      - gpuCapacity
      - gpuUsed
      - masterNumber
      - memoryCapacity
      - memoryUsed
      - podCapacity
      - podUsed
      - storageClassList
      - workerNumber
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateClusterNamespaceResponse:
      example:
        exists: true
      properties:
        exists:
          type: boolean
      required:
      - exists
      type: object
      x-apifox-orders:
      - exists
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ConfigTemplateDetail:
      example:
        schema: schema
        createTime: 2000-01-23T04:56:07.000+00:00
        scope: scope
        name: name
        namespace: namespace
        uiSchema:
        - additional: true
          subParameterGroupOption:
          - keys:
            - keys
            - keys
            label: label
          - keys:
            - keys
            - keys
            label: label
          subParameters:
          - null
          - null
          description: description
          label: label
          sort: 0
          disable: true
          jsonKey: jsonKey
          uiType: uiType
          style:
            colSpan: 6
          conditions:
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          validate:
            immutable: true
            min: 5.637376656633329
            max: 1.4658129805029452
            defaultValue: defaultValue
            minLength: 2
            options:
            - label: label
              value: value
            - label: label
              value: value
            pattern: pattern
            maxLength: 5
            required: true
        - additional: true
          subParameterGroupOption:
          - keys:
            - keys
            - keys
            label: label
          - keys:
            - keys
            - keys
            label: label
          subParameters:
          - null
          - null
          description: description
          label: label
          sort: 0
          disable: true
          jsonKey: jsonKey
          uiType: uiType
          style:
            colSpan: 6
          conditions:
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          validate:
            immutable: true
            min: 5.637376656633329
            max: 1.4658129805029452
            defaultValue: defaultValue
            minLength: 2
            options:
            - label: label
              value: value
            - label: label
              value: value
            pattern: pattern
            maxLength: 5
            required: true
        alias: alias
        description: description
        sensitive: true
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        namespace:
          type: string
        schema:
          type: string
        scope:
          type: string
        sensitive:
          type: boolean
        uiSchema:
          items:
            $ref: '#/components/schemas/UtilsUiParameter'
          type: array
      required:
      - alias
      - createTime
      - description
      - name
      - namespace
      - schema
      - scope
      - sensitive
      - uiSchema
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - name
      - namespace
      - schema
      - scope
      - sensitive
      - uiSchema
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1Context:
      example:
        values:
        - value: value
          key: key
        - value: value
          key: key
        name: name
      properties:
        name:
          type: string
        values:
          items:
            $ref: '#/components/schemas/ModelValue'
          type: array
      required:
      - name
      - values
      type: object
      x-apifox-orders:
      - name
      - values
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonDefinitionReference:
      properties:
        name:
          type: string
        version:
          type: string
      required:
      - name
      type: object
      x-apifox-orders:
      - name
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1NameAlias:
      example:
        name: name
        alias: alias
      properties:
        alias:
          type: string
        name:
          type: string
      required:
      - alias
      - name
      type: object
      x-apifox-orders:
      - alias
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1PipelineListItem:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        alias: alias
        description: description
        project:
          name: name
          alias: alias
        info:
          lastRun:
            pipelineName: pipelineName
            contextName: contextName
            pipelineRunName: pipelineRunName
            record: 0
            contextValues:
            - value: value
              key: key
            - value: value
              key: key
            project:
              name: name
              alias: alias
            spec:
              mode:
                subSteps: subSteps
                steps: steps
              context: context
              workflowSpec:
                steps:
                - outputs:
                  - name: name
                    valueFrom: valueFrom
                  - name: name
                    valueFrom: valueFrom
                  dependsOn:
                  - dependsOn
                  - dependsOn
                  subSteps:
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                  inputs:
                  - parameterKey: parameterKey
                    from: from
                  - parameterKey: parameterKey
                    from: from
                  meta:
                    alias: alias
                  name: name
                  type: type
                  if: if
                  properties: properties
                  timeout: timeout
                - outputs:
                  - name: name
                    valueFrom: valueFrom
                  - name: name
                    valueFrom: valueFrom
                  dependsOn:
                  - dependsOn
                  - dependsOn
                  subSteps:
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                  - outputs:
                    - name: name
                      valueFrom: valueFrom
                    - name: name
                      valueFrom: valueFrom
                    dependsOn:
                    - dependsOn
                    - dependsOn
                    inputs:
                    - parameterKey: parameterKey
                      from: from
                    - parameterKey: parameterKey
                      from: from
                    meta:
                      alias: alias
                    name: name
                    type: type
                    if: if
                    properties: properties
                    timeout: timeout
                  inputs:
                  - parameterKey: parameterKey
                    from: from
                  - parameterKey: parameterKey
                    from: from
                  meta:
                    alias: alias
                  name: name
                  type: type
                  if: if
                  properties: properties
                  timeout: timeout
              workflowRef: workflowRef
            status:
              mode:
                subSteps: subSteps
                steps: steps
              suspend: true
              contextBackend:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              suspendState: suspendState
              finished: true
              startTime: startTime
              endTime: endTime
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              message: message
              steps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                subSteps:
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                subSteps:
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                - lastExecuteTime: lastExecuteTime
                  phase: phase
                  firstExecuteTime: firstExecuteTime
                  reason: reason
                  name: name
                  id: id
                  message: message
                  type: type
                name: name
                id: id
                message: message
                type: type
              terminated: true
              status: status
          runStat:
            activeNum: 6
            total:
              fail: 1
              total: 5
              success: 5
            week:
            - fail: 1
              total: 5
              success: 5
            - fail: 1
              total: 5
              success: 5
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        info:
          $ref: '#/components/schemas/V1PipelineInfo'
        name:
          type: string
        project:
          $ref: '#/components/schemas/V1NameAlias'
      required:
      - alias
      - createTime
      - description
      - info
      - name
      - project
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - info
      - name
      - project
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AddProjectUserRequest:
      example:
        userRoles:
        - userRoles
        - userRoles
        userName: userName
      properties:
        userName:
          type: string
        userRoles:
          items:
            type: string
          type: array
      required:
      - userName
      - userRoles
      type: object
      x-apifox-orders:
      - userName
      - userRoles
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonClusterObjectReference:
      description: ObjectReference contains enough information to let you inspect
        or modify the referred object.
      example:
        cluster: cluster
        uid: uid
        creator: creator
        apiVersion: apiVersion
        kind: kind
        resourceVersion: resourceVersion
        fieldPath: fieldPath
        name: name
        namespace: namespace
      properties:
        apiVersion:
          description: API version of the referent.
          type: string
        cluster:
          type: string
        creator:
          type: string
        fieldPath:
          description: 'If referring to a piece of an object instead of an entire
            object, this string should contain a valid JSON/Go field access statement,
            such as desiredState.manifest.containers[2]. For example, if the object
            reference is to a container within a pod, this would take on a value like:
            "spec.containers{name}" (where "name" refers to the name of the container
            that triggered the event) or if no container name is specified "spec.containers[2]"
            (container with index 2 in this pod). This syntax is chosen only to have
            some well-defined way of referencing a part of an object.'
          type: string
        kind:
          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        name:
          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
          type: string
        namespace:
          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
          type: string
        resourceVersion:
          description: 'Specific resourceVersion to which this reference is made,
            if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
          type: string
        uid:
          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
          type: string
      type: object
      x-apifox-orders:
      - apiVersion
      - cluster
      - creator
      - fieldPath
      - kind
      - name
      - namespace
      - resourceVersion
      - uid
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonWorkflowStatus:
      example:
        mode: mode
        suspend: true
        contextBackend:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        appRevision: appRevision
        suspendState: suspendState
        finished: true
        startTime: startTime
        endTime: endTime
        message: message
        steps:
        - lastExecuteTime: lastExecuteTime
          phase: phase
          firstExecuteTime: firstExecuteTime
          reason: reason
          subSteps:
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            name: name
            id: id
            message: message
            type: type
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            name: name
            id: id
            message: message
            type: type
          name: name
          id: id
          message: message
          type: type
        - lastExecuteTime: lastExecuteTime
          phase: phase
          firstExecuteTime: firstExecuteTime
          reason: reason
          subSteps:
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            name: name
            id: id
            message: message
            type: type
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            name: name
            id: id
            message: message
            type: type
          name: name
          id: id
          message: message
          type: type
        terminated: true
        status: status
      properties:
        appRevision:
          type: string
        contextBackend:
          $ref: '#/components/schemas/V1ObjectReference'
        endTime:
          type: string
        finished:
          type: boolean
        message:
          type: string
        mode:
          type: string
        startTime:
          type: string
        status:
          type: string
        steps:
          items:
            $ref: '#/components/schemas/V1alpha1WorkflowStepStatus'
          type: array
        suspend:
          type: boolean
        suspendState:
          type: string
        terminated:
          type: boolean
      required:
      - finished
      - mode
      - suspend
      - terminated
      type: object
      x-apifox-orders:
      - appRevision
      - contextBackend
      - endTime
      - finished
      - message
      - mode
      - startTime
      - status
      - steps
      - suspend
      - suspendState
      - terminated
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1GetPipelineRunInputResponse:
      example:
        inputs:
        - phase: phase
          values:
          - parameterKey: parameterKey
            fromStep: fromStep
            from: from
            value: value
          - parameterKey: parameterKey
            fromStep: fromStep
            from: from
            value: value
          name: name
          id: id
          type: type
        - phase: phase
          values:
          - parameterKey: parameterKey
            fromStep: fromStep
            from: from
            value: value
          - parameterKey: parameterKey
            fromStep: fromStep
            from: from
            value: value
          name: name
          id: id
          type: type
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/V1StepInputBase'
          type: array
      required:
      - inputs
      type: object
      x-apifox-orders:
      - inputs
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelApplicationComponent:
      properties:
        alias:
          type: string
        appPrimaryKey:
          type: string
        createTime:
          format: date-time
          type: string
        creator:
          type: string
        dependsOn:
          items:
            type: string
          type: array
        description:
          type: string
        externalRevision:
          type: string
        icon:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/V1alpha1InputItem'
          type: array
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        main:
          type: boolean
        name:
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/V1alpha1OutputItem'
          type: array
        properties:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        scopes:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        traits:
          items:
            $ref: '#/components/schemas/ModelApplicationTrait'
          type: array
        type:
          type: string
        updateTime:
          format: date-time
          type: string
        workloadType:
          $ref: '#/components/schemas/CommonWorkloadTypeDescriptor'
      required:
      - alias
      - appPrimaryKey
      - createTime
      - creator
      - main
      - name
      - type
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - appPrimaryKey
      - createTime
      - creator
      - dependsOn
      - description
      - externalRevision
      - icon
      - inputs
      - labels
      - main
      - name
      - outputs
      - properties
      - scopes
      - traits
      - type
      - updateTime
      - workloadType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1RunPipelineRequest:
      example:
        mode:
          subSteps: subSteps
          steps: steps
        contextName: contextName
      properties:
        contextName:
          type: string
        mode:
          $ref: '#/components/schemas/V1alpha1WorkflowExecuteMode'
      required:
      - contextName
      type: object
      x-apifox-orders:
      - contextName
      - mode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DetailRevisionResponse:
      example:
        note: note
        reason: reason
        deployUser:
          name: name
          alias: alias
        codeInfo:
          commit: commit
          branch: branch
          user: user
        imageInfo:
          resource:
            createTime: 2000-01-23T04:56:07.000+00:00
            digest: digest
            tag: tag
            url: url
          repository:
            createTime: 2000-01-23T04:56:07.000+00:00
            name: name
            namespace: namespace
            fullName: fullName
            region: region
            type: type
          type: type
        updateTime: 2000-01-23T04:56:07.000+00:00
        workflowName: workflowName
        version: version
        rollbackVersion: rollbackVersion
        revisionCRName: revisionCRName
        createTime: 2000-01-23T04:56:07.000+00:00
        envName: envName
        triggerType: triggerType
        applyAppConfig: applyAppConfig
        appPrimaryKey: appPrimaryKey
        status: status
      properties:
        appPrimaryKey:
          type: string
        applyAppConfig:
          type: string
        codeInfo:
          $ref: '#/components/schemas/ModelCodeInfo'
        createTime:
          format: date-time
          type: string
        deployUser:
          $ref: '#/components/schemas/V1NameAlias'
        envName:
          type: string
        imageInfo:
          $ref: '#/components/schemas/ModelImageInfo'
        note:
          type: string
        reason:
          type: string
        revisionCRName:
          type: string
        rollbackVersion:
          type: string
        status:
          type: string
        triggerType:
          type: string
        updateTime:
          format: date-time
          type: string
        version:
          type: string
        workflowName:
          type: string
      required:
      - appPrimaryKey
      - createTime
      - deployUser
      - envName
      - note
      - reason
      - revisionCRName
      - status
      - triggerType
      - updateTime
      - version
      - workflowName
      type: object
      x-apifox-orders:
      - appPrimaryKey
      - applyAppConfig
      - codeInfo
      - createTime
      - deployUser
      - envName
      - imageInfo
      - note
      - reason
      - revisionCRName
      - rollbackVersion
      - status
      - triggerType
      - updateTime
      - version
      - workflowName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1beta1ComponentDefinitionSpec:
      example:
        extension: extension
        workload:
          definition:
            apiVersion: apiVersion
            kind: kind
          type: type
        podSpecPath: podSpecPath
        schematic:
          cue:
            template: template
          terraform:
            gitCredentialsSecretReference:
              name: name
              namespace: namespace
            path: path
            providerRef:
              name: name
              namespace: namespace
            deleteResource: true
            configuration: configuration
            writeConnectionSecretToRef:
              name: name
              namespace: namespace
            customRegion: customRegion
            type: type
          helm:
            release: release
            repository: repository
          kube:
            template: template
            parameters:
            - fieldPaths:
              - fieldPaths
              - fieldPaths
              name: name
              description: description
              type: type
              required: true
            - fieldPaths:
              - fieldPaths
              - fieldPaths
              name: name
              description: description
              type: type
              required: true
        childResourceKinds:
        - apiVersion: apiVersion
          kind: kind
          selector:
            key: selector
        - apiVersion: apiVersion
          kind: kind
          selector:
            key: selector
        revisionLabel: revisionLabel
        status:
          healthPolicy: healthPolicy
          customStatus: customStatus
      properties:
        childResourceKinds:
          items:
            $ref: '#/components/schemas/CommonChildResourceKind'
          type: array
        extension:
          type: string
        podSpecPath:
          type: string
        revisionLabel:
          type: string
        schematic:
          $ref: '#/components/schemas/CommonSchematic'
        status:
          $ref: '#/components/schemas/CommonStatus'
        workload:
          $ref: '#/components/schemas/CommonWorkloadTypeDescriptor'
      required:
      - workload
      type: object
      x-apifox-orders:
      - childResourceKinds
      - extension
      - podSpecPath
      - revisionLabel
      - schematic
      - status
      - workload
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1beta1PolicyDefinitionSpec:
      properties:
        definitionRef:
          $ref: '#/components/schemas/CommonDefinitionReference'
        manageHealthCheck:
          type: boolean
        schematic:
          $ref: '#/components/schemas/CommonSchematic'
      type: object
      x-apifox-orders:
      - definitionRef
      - manageHealthCheck
      - schematic
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListClusterResponse:
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/V1ClusterBase'
          type: array
        total:
          format: int64
          type: integer
      required:
      - clusters
      - total
      type: object
      x-apifox-orders:
      - clusters
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ClusterTarget:
      example:
        clusterName: clusterName
        namespace: namespace
      properties:
        clusterName:
          type: string
        namespace:
          type: string
      required:
      - clusterName
      type: object
      x-apifox-orders:
      - clusterName
      - namespace
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListCloudClusterCreationResponse:
      example:
        creations:
        - clusterName: clusterName
          clusterID: clusterID
          status: status
        - clusterName: clusterName
          clusterID: clusterID
          status: status
      properties:
        creations:
          items:
            $ref: '#/components/schemas/V1CreateCloudClusterResponse'
          type: array
      required:
      - creations
      type: object
      x-apifox-orders:
      - creations
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UtilsValidate:
      example:
        immutable: true
        min: 5.637376656633329
        max: 1.4658129805029452
        defaultValue: defaultValue
        minLength: 2
        options:
        - label: label
          value: value
        - label: label
          value: value
        pattern: pattern
        maxLength: 5
        required: true
      properties:
        defaultValue:
          type: string
          x-apifox-folder: Schemas
        immutable:
          type: boolean
        max:
          format: double
          type: number
        maxLength:
          format: integer
          type: integer
        min:
          format: double
          type: number
        minLength:
          format: integer
          type: integer
        options:
          items:
            $ref: '#/components/schemas/UtilsOption'
          type: array
        pattern:
          type: string
        required:
          type: boolean
      required:
      - immutable
      type: object
      x-apifox-orders:
      - defaultValue
      - immutable
      - max
      - maxLength
      - min
      - minLength
      - options
      - pattern
      - required
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonWorkloadTypeDescriptor:
      example:
        definition:
          apiVersion: apiVersion
          kind: kind
        type: type
      properties:
        definition:
          $ref: '#/components/schemas/CommonWorkloadGvk'
        type:
          type: string
      type: object
      x-apifox-orders:
      - definition
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ContextNameResponse:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
      x-apifox-orders:
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1TargetBase:
      properties:
        alias:
          type: string
        appNum:
          format: int64
          type: integer
        cluster:
          $ref: '#/components/schemas/V1ClusterTarget'
        clusterAlias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        project:
          $ref: '#/components/schemas/V1NameAlias'
        updateTime:
          format: date-time
          type: string
        variable:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      required:
      - createTime
      - name
      - project
      - updateTime
      type: object
      x-apifox-orders:
      - alias
      - appNum
      - cluster
      - clusterAlias
      - createTime
      - description
      - name
      - project
      - updateTime
      - variable
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1RefreshTokenResponse:
      example:
        accessToken: accessToken
        refreshToken: refreshToken
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
      - accessToken
      - refreshToken
      type: object
      x-apifox-orders:
      - accessToken
      - refreshToken
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonPolicyStatus:
      example:
        name: name
        type: type
        status: status
      properties:
        name:
          type: string
        status:
          type: string
        type:
          type: string
      required:
      - name
      - type
      type: object
      x-apifox-orders:
      - name
      - status
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateProjectRequest:
      example:
        owner: owner
        name: name
        namespace: namespace
        alias: alias
        description: description
      properties:
        alias:
          type: string
        description:
          type: string
        name:
          type: string
        namespace:
          type: string
        owner:
          type: string
      required:
      - name
      type: object
      x-apifox-orders:
      - alias
      - description
      - name
      - namespace
      - owner
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1StepOutputBase:
      example:
        phase: phase
        values:
        - name: name
          value: value
          valueFrom: valueFrom
        - name: name
          value: value
          valueFrom: valueFrom
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        name:
          type: string
        phase:
          type: string
        type:
          type: string
        values:
          items:
            $ref: '#/components/schemas/V1OutputVar'
          type: array
      required:
      - id
      - name
      - phase
      - type
      - values
      type: object
      x-apifox-orders:
      - id
      - name
      - phase
      - type
      - values
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreatePermissionRequest:
      example:
        effect: effect
        name: name
        alias: alias
        resources:
        - resources
        - resources
        actions:
        - actions
        - actions
      properties:
        actions:
          items:
            type: string
          type: array
        alias:
          type: string
        effect:
          type: string
        name:
          type: string
        resources:
          items:
            type: string
          type: array
      required:
      - actions
      - alias
      - effect
      - name
      - resources
      type: object
      x-apifox-orders:
      - actions
      - alias
      - effect
      - name
      - resources
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1WorkflowStepBase:
      example:
        outputs:
        - name: name
          valueFrom: valueFrom
        - name: name
          valueFrom: valueFrom
        dependsOn:
        - dependsOn
        - dependsOn
        inputs:
        - parameterKey: parameterKey
          from: from
        - parameterKey: parameterKey
          from: from
        meta:
          alias: alias
        name: name
        alias: alias
        description: description
        type: type
        if: if
        properties: '{}'
        timeout: timeout
      properties:
        alias:
          type: string
        dependsOn:
          items:
            type: string
          type: array
        description:
          type: string
        if:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/V1alpha1InputItem'
          type: array
        meta:
          $ref: '#/components/schemas/V1alpha1WorkflowStepMeta'
        name:
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/V1alpha1OutputItem'
          type: array
        properties:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        timeout:
          type: string
        type:
          type: string
      required:
      - name
      - type
      type: object
      x-apifox-orders:
      - alias
      - dependsOn
      - description
      - if
      - inputs
      - meta
      - name
      - outputs
      - properties
      - timeout
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1beta1AppPolicy:
      example:
        name: name
        type: type
        properties: properties
      properties:
        name:
          type: string
        properties:
          type: string
        type:
          type: string
      required:
      - name
      - type
      type: object
      x-apifox-orders:
      - name
      - properties
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelProviderInfo:
      example:
        provider: provider
        regionID: regionID
        zone: zone
        clusterName: clusterName
        vpcID: vpcID
        zoneID: zoneID
        clusterID: clusterID
        labels:
          key: labels
      properties:
        clusterID:
          type: string
        clusterName:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        provider:
          type: string
        regionID:
          type: string
        vpcID:
          type: string
        zone:
          type: string
        zoneID:
          type: string
      required:
      - clusterID
      - labels
      - provider
      type: object
      x-apifox-orders:
      - clusterID
      - clusterName
      - labels
      - provider
      - regionID
      - vpcID
      - zone
      - zoneID
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1EnvBindingBase:
      example:
        targetNames:
        - targetNames
        - targetNames
        workflow:
          name: name
          alias: alias
        createTime: 2000-01-23T04:56:07.000+00:00
        appDeployNamespace: appDeployNamespace
        name: name
        alias: alias
        appDeployName: appDeployName
        componentSelector:
          components:
          - components
          - components
        description: description
        updateTime: 2000-01-23T04:56:07.000+00:00
        targets:
        - cluster:
            clusterName: clusterName
            namespace: namespace
          name: name
          alias: alias
        - cluster:
            clusterName: clusterName
            namespace: namespace
          name: name
          alias: alias
      properties:
        alias:
          type: string
        appDeployName:
          type: string
        appDeployNamespace:
          type: string
        componentSelector:
          $ref: '#/components/schemas/V1ComponentSelector'
        createTime:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        targetNames:
          items:
            type: string
          type: array
        targets:
          items:
            $ref: '#/components/schemas/V1EnvBindingTarget'
          type: array
        updateTime:
          format: date-time
          type: string
        workflow:
          $ref: '#/components/schemas/V1NameAlias'
      required:
      - appDeployName
      - appDeployNamespace
      - createTime
      - name
      - targetNames
      - updateTime
      - workflow
      type: object
      x-apifox-orders:
      - alias
      - appDeployName
      - appDeployNamespace
      - componentSelector
      - createTime
      - description
      - name
      - targetNames
      - targets
      - updateTime
      - workflow
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelValue:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
      x-apifox-orders:
      - key
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListProjectResponse:
      example:
        total: 0
        projects:
        - owner:
            name: name
            alias: alias
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
        - owner:
            name: name
            alias: alias
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        projects:
          items:
            $ref: '#/components/schemas/V1ProjectBase'
          type: array
        total:
          format: int64
          type: integer
      required:
      - projects
      - total
      type: object
      x-apifox-orders:
      - projects
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AppCompareReq:
      example:
        compareLatestWithRunning:
          env: env
        compareRevisionWithLatest:
          revision: revision
        compareRevisionWithRunning:
          revision: revision
      properties:
        compareLatestWithRunning:
          $ref: '#/components/schemas/V1CompareLatestWithRunningOption'
        compareRevisionWithLatest:
          $ref: '#/components/schemas/V1CompareRevisionWithLatestOption'
        compareRevisionWithRunning:
          $ref: '#/components/schemas/V1CompareRevisionWithRunningOption'
      type: object
      x-apifox-orders:
      - compareLatestWithRunning
      - compareRevisionWithLatest
      - compareRevisionWithRunning
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ComponentSelector:
      example:
        components:
        - components
        - components
      properties:
        components:
          items:
            type: string
          type: array
      required:
      - components
      type: object
      x-apifox-orders:
      - components
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonChildResourceKind:
      example:
        apiVersion: apiVersion
        kind: kind
        selector:
          key: selector
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        selector:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      required:
      - apiVersion
      - kind
      type: object
      x-apifox-orders:
      - apiVersion
      - kind
      - selector
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ObjectReference:
      description: ObjectReference contains enough information to let you inspect
        or modify the referred object.
      example:
        uid: uid
        apiVersion: apiVersion
        kind: kind
        resourceVersion: resourceVersion
        fieldPath: fieldPath
        name: name
        namespace: namespace
      properties:
        apiVersion:
          description: API version of the referent.
          type: string
        fieldPath:
          description: 'If referring to a piece of an object instead of an entire
            object, this string should contain a valid JSON/Go field access statement,
            such as desiredState.manifest.containers[2]. For example, if the object
            reference is to a container within a pod, this would take on a value like:
            "spec.containers{name}" (where "name" refers to the name of the container
            that triggered the event) or if no container name is specified "spec.containers[2]"
            (container with index 2 in this pod). This syntax is chosen only to have
            some well-defined way of referencing a part of an object.'
          type: string
        kind:
          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        name:
          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
          type: string
        namespace:
          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
          type: string
        resourceVersion:
          description: 'Specific resourceVersion to which this reference is made,
            if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
          type: string
        uid:
          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
          type: string
      type: object
      x-apifox-orders:
      - apiVersion
      - fieldPath
      - kind
      - name
      - namespace
      - resourceVersion
      - uid
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationTriggerBase1:
      type: string
      x-apifox-folder: Schemas
    V1WorkflowPolicyBinding:
      example:
        name: name
        steps:
        - steps
        - steps
      properties:
        name:
          type: string
        steps:
          items:
            type: string
          type: array
      required:
      - name
      - steps
      type: object
      x-apifox-orders:
      - name
      - steps
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1PipelineInfo:
      example:
        lastRun:
          pipelineName: pipelineName
          contextName: contextName
          pipelineRunName: pipelineRunName
          record: 0
          contextValues:
          - value: value
            key: key
          - value: value
            key: key
          project:
            name: name
            alias: alias
          spec:
            mode:
              subSteps: subSteps
              steps: steps
            context: context
            workflowSpec:
              steps:
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                subSteps:
                - outputs:
                  - name: name
                    valueFrom: valueFrom
                  - name: name
                    valueFrom: valueFrom
                  dependsOn:
                  - dependsOn
                  - dependsOn
                  inputs:
                  - parameterKey: parameterKey
                    from: from
                  - parameterKey: parameterKey
                    from: from
                  meta:
                    alias: alias
                  name: name
                  type: type
                  if: if
                  properties: properties
                  timeout: timeout
                - outputs:
                  - name: name
                    valueFrom: valueFrom
                  - name: name
                    valueFrom: valueFrom
                  dependsOn:
                  - dependsOn
                  - dependsOn
                  inputs:
                  - parameterKey: parameterKey
                    from: from
                  - parameterKey: parameterKey
                    from: from
                  meta:
                    alias: alias
                  name: name
                  type: type
                  if: if
                  properties: properties
                  timeout: timeout
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                subSteps:
                - outputs:
                  - name: name
                    valueFrom: valueFrom
                  - name: name
                    valueFrom: valueFrom
                  dependsOn:
                  - dependsOn
                  - dependsOn
                  inputs:
                  - parameterKey: parameterKey
                    from: from
                  - parameterKey: parameterKey
                    from: from
                  meta:
                    alias: alias
                  name: name
                  type: type
                  if: if
                  properties: properties
                  timeout: timeout
                - outputs:
                  - name: name
                    valueFrom: valueFrom
                  - name: name
                    valueFrom: valueFrom
                  dependsOn:
                  - dependsOn
                  - dependsOn
                  inputs:
                  - parameterKey: parameterKey
                    from: from
                  - parameterKey: parameterKey
                    from: from
                  meta:
                    alias: alias
                  name: name
                  type: type
                  if: if
                  properties: properties
                  timeout: timeout
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
            workflowRef: workflowRef
          status:
            mode:
              subSteps: subSteps
              steps: steps
            suspend: true
            contextBackend:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            suspendState: suspendState
            finished: true
            startTime: startTime
            endTime: endTime
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            message: message
            steps:
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              subSteps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              name: name
              id: id
              message: message
              type: type
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              subSteps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              name: name
              id: id
              message: message
              type: type
            terminated: true
            status: status
        runStat:
          activeNum: 6
          total:
            fail: 1
            total: 5
            success: 5
          week:
          - fail: 1
            total: 5
            success: 5
          - fail: 1
            total: 5
            success: 5
      properties:
        lastRun:
          $ref: '#/components/schemas/V1PipelineRun'
        runStat:
          $ref: '#/components/schemas/V1RunStat'
      required:
      - lastRun
      - runStat
      type: object
      x-apifox-orders:
      - lastRun
      - runStat
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateApplicationTraitRequest:
      example:
        alias: alias
        description: description
        properties: properties
      properties:
        alias:
          type: string
        description:
          type: string
        properties:
          type: string
      required:
      - properties
      type: object
      x-apifox-orders:
      - alias
      - description
      - properties
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreatePipelineRequest:
      example:
        name: name
        alias: alias
        description: description
        spec:
          mode:
            subSteps: subSteps
            steps: steps
          steps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            description: description
            type: type
            timeout: timeout
            meta:
              alias: alias
            name: name
            alias: alias
            orderIndex: 0
            if: if
            properties: '{}'
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            description: description
            type: type
            timeout: timeout
            meta:
              alias: alias
            name: name
            alias: alias
            orderIndex: 0
            if: if
            properties: '{}'
      properties:
        alias:
          type: string
        description:
          type: string
        name:
          type: string
        spec:
          $ref: '#/components/schemas/ModelWorkflowSpec'
      required:
      - name
      - spec
      type: object
      x-apifox-orders:
      - alias
      - description
      - name
      - spec
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonStatus:
      example:
        healthPolicy: healthPolicy
        customStatus: customStatus
      properties:
        customStatus:
          type: string
        healthPolicy:
          type: string
      type: object
      x-apifox-orders:
      - customStatus
      - healthPolicy
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1PutApplicationEnvBindingRequest:
      type: string
      x-apifox-folder: Schemas
    ConfigNamespacedName:
      example:
        name: name
        namespace: namespace
      properties:
        name:
          type: string
        namespace:
          type: string
      required:
      - name
      - namespace
      type: object
      x-apifox-orders:
      - name
      - namespace
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1SimpleResponse:
      example:
        status: status
      properties:
        status:
          type: string
      required:
      - status
      type: object
      x-apifox-orders:
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ConfigClusterTarget:
      example:
        clusterName: clusterName
        namespace: namespace
      properties:
        clusterName:
          type: string
        namespace:
          type: string
      required:
      - clusterName
      - namespace
      type: object
      x-apifox-orders:
      - clusterName
      - namespace
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1DetailDefinitionResponse:
      properties:
        alias:
          type: string
        component:
          $ref: '#/components/schemas/V1beta1ComponentDefinitionSpec'
        description:
          type: string
        icon:
          type: string
        labels:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        name:
          type: string
        ownerAddon:
          type: string
        policy:
          $ref: '#/components/schemas/V1beta1PolicyDefinitionSpec'
        schema:
          type: string
        status:
          type: string
        trait:
          $ref: '#/components/schemas/V1beta1TraitDefinitionSpec'
        uiSchema:
          items:
            $ref: '#/components/schemas/UtilsUiParameter'
          type: array
        workflowStep:
          $ref: '#/components/schemas/V1beta1WorkflowStepDefinitionSpec'
        workloadType:
          type: string
      required:
      - alias
      - description
      - icon
      - labels
      - name
      - ownerAddon
      - schema
      - status
      - uiSchema
      type: object
      x-apifox-orders:
      - alias
      - component
      - description
      - icon
      - labels
      - name
      - ownerAddon
      - policy
      - schema
      - status
      - trait
      - uiSchema
      - workflowStep
      - workloadType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListApplicationResponse:
      example:
        applications:
        - createTime: 2000-01-23T04:56:07.000+00:00
          icon: icon
          name: name
          alias: alias
          description: description
          project:
            owner:
              name: name
              alias: alias
            createTime: 2000-01-23T04:56:07.000+00:00
            name: name
            namespace: namespace
            alias: alias
            description: description
            updateTime: 2000-01-23T04:56:07.000+00:00
          readOnly: true
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        - createTime: 2000-01-23T04:56:07.000+00:00
          icon: icon
          name: name
          alias: alias
          description: description
          project:
            owner:
              name: name
              alias: alias
            createTime: 2000-01-23T04:56:07.000+00:00
            name: name
            namespace: namespace
            alias: alias
            description: description
            updateTime: 2000-01-23T04:56:07.000+00:00
          readOnly: true
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
      properties:
        applications:
          items:
            $ref: '#/components/schemas/V1ApplicationBase'
          type: array
      required:
      - applications
      type: object
      x-apifox-orders:
      - applications
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1alpha1OutputItem:
      example:
        name: name
        valueFrom: valueFrom
      properties:
        name:
          type: string
        valueFrom:
          type: string
      required:
      - name
      - valueFrom
      type: object
      x-apifox-orders:
      - name
      - valueFrom
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1GetPipelineRunOutputResponse:
      example:
        outputs:
        - phase: phase
          values:
          - name: name
            value: value
            valueFrom: valueFrom
          - name: name
            value: value
            valueFrom: valueFrom
          name: name
          id: id
          type: type
        - phase: phase
          values:
          - name: name
            value: value
            valueFrom: valueFrom
          - name: name
            value: value
            valueFrom: valueFrom
          name: name
          id: id
          type: type
      properties:
        outputs:
          items:
            $ref: '#/components/schemas/V1StepOutputBase'
          type: array
      required:
      - outputs
      type: object
      x-apifox-orders:
      - outputs
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationResponse:
      example:
        apiVersion: apiVersion
        kind: kind
        spec:
          components:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            traits:
            - type: type
              properties: properties
            - type: type
              properties: properties
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            name: name
            scopes:
              key: scopes
            type: type
            properties: properties
            externalRevision: externalRevision
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            traits:
            - type: type
              properties: properties
            - type: type
              properties: properties
            dependsOn:
            - dependsOn
            - dependsOn
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            name: name
            scopes:
              key: scopes
            type: type
            properties: properties
            externalRevision: externalRevision
          workflow:
            mode:
              subSteps: subSteps
              steps: steps
            ref: ref
            steps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              subSteps:
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              subSteps:
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
          policies:
          - name: name
            type: type
            properties: properties
          - name: name
            type: type
            properties: properties
        status:
          appliedResources:
          - cluster: cluster
            uid: uid
            creator: creator
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          - cluster: cluster
            uid: uid
            creator: creator
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          components:
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          - uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          workflow:
            mode: mode
            suspend: true
            contextBackend:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            appRevision: appRevision
            suspendState: suspendState
            finished: true
            startTime: startTime
            endTime: endTime
            message: message
            steps:
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              subSteps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              name: name
              id: id
              message: message
              type: type
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              subSteps:
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              - lastExecuteTime: lastExecuteTime
                phase: phase
                firstExecuteTime: firstExecuteTime
                reason: reason
                name: name
                id: id
                message: message
                type: type
              name: name
              id: id
              message: message
              type: type
            terminated: true
            status: status
          services:
          - cluster: cluster
            traits:
            - healthy: true
              message: message
              type: type
            - healthy: true
              message: message
              type: type
            healthy: true
            name: name
            namespace: namespace
            workloadDefinition:
              apiVersion: apiVersion
              kind: kind
            scopes:
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env: env
            message: message
          - cluster: cluster
            traits:
            - healthy: true
              message: message
              type: type
            - healthy: true
              message: message
              type: type
            healthy: true
            name: name
            namespace: namespace
            workloadDefinition:
              apiVersion: apiVersion
              kind: kind
            scopes:
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            - uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env: env
            message: message
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          latestRevision:
            name: name
            revisionHash: revisionHash
            revision: 0
          observedGeneration: 6
          policy:
          - name: name
            type: type
            status: status
          - name: name
            type: type
            status: status
          status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        spec:
          $ref: '#/components/schemas/V1beta1ApplicationSpec'
        status:
          $ref: '#/components/schemas/CommonAppStatus'
      required:
      - apiVersion
      - kind
      - spec
      - status
      type: object
      x-apifox-orders:
      - apiVersion
      - kind
      - spec
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ModelBaseModel:
      properties:
        createTime:
          format: date-time
          type: string
        updateTime:
          format: date-time
          type: string
      required:
      - createTime
      - updateTime
      type: object
      x-apifox-orders:
      - createTime
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdatePipelineRequest:
      example:
        alias: alias
        description: description
        spec:
          mode:
            subSteps: subSteps
            steps: steps
          steps:
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            description: description
            type: type
            timeout: timeout
            meta:
              alias: alias
            name: name
            alias: alias
            orderIndex: 0
            if: if
            properties: '{}'
          - outputs:
            - name: name
              valueFrom: valueFrom
            - name: name
              valueFrom: valueFrom
            dependsOn:
            - dependsOn
            - dependsOn
            subSteps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              alias: alias
              description: description
              orderIndex: 6
              type: type
              if: if
              properties: '{}'
              timeout: timeout
            inputs:
            - parameterKey: parameterKey
              from: from
            - parameterKey: parameterKey
              from: from
            description: description
            type: type
            timeout: timeout
            meta:
              alias: alias
            name: name
            alias: alias
            orderIndex: 0
            if: if
            properties: '{}'
      properties:
        alias:
          type: string
        description:
          type: string
        spec:
          $ref: '#/components/schemas/ModelWorkflowSpec'
      type: object
      x-apifox-orders:
      - alias
      - description
      - spec
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationTemplateVersion:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        description: description
        createUser: createUser
        updateTime: 2000-01-23T04:56:07.000+00:00
        version: version
      properties:
        createTime:
          format: date-time
          type: string
        createUser:
          type: string
        description:
          type: string
        updateTime:
          format: date-time
          type: string
        version:
          type: string
      required:
      - createTime
      - createUser
      - description
      - updateTime
      - version
      type: object
      x-apifox-orders:
      - createTime
      - createUser
      - description
      - updateTime
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BcodeBcode:
      properties:
        BusinessCode:
          format: int32
          type: integer
        Message:
          type: string
      required:
      - BusinessCode
      - Message
      type: object
      x-apifox-orders:
      - BusinessCode
      - Message
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ImageRegistry:
      example:
        secretName: secretName
        domain: domain
        name: name
      properties:
        domain:
          type: string
        name:
          type: string
        secretName:
          type: string
      required:
      - domain
      - name
      - secretName
      type: object
      x-apifox-orders:
      - domain
      - name
      - secretName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListRolesResponse:
      example:
        total: 0
        roles:
        - createTime: 2000-01-23T04:56:07.000+00:00
          permissions:
          - name: name
            alias: alias
          - name: name
            alias: alias
          name: name
          alias: alias
          updateTime: 2000-01-23T04:56:07.000+00:00
        - createTime: 2000-01-23T04:56:07.000+00:00
          permissions:
          - name: name
            alias: alias
          - name: name
            alias: alias
          name: name
          alias: alias
          updateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        roles:
          items:
            $ref: '#/components/schemas/V1RoleBase'
          type: array
        total:
          format: int64
          type: integer
      required:
      - roles
      - total
      type: object
      x-apifox-orders:
      - roles
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1PipelineMeta:
      properties:
        alias:
          type: string
        createTime:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        project:
          $ref: '#/components/schemas/V1NameAlias'
      required:
      - alias
      - createTime
      - description
      - name
      - project
      type: object
      x-apifox-orders:
      - alias
      - createTime
      - description
      - name
      - project
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1PipelineRun:
      example:
        pipelineName: pipelineName
        contextName: contextName
        pipelineRunName: pipelineRunName
        record: 0
        contextValues:
        - value: value
          key: key
        - value: value
          key: key
        project:
          name: name
          alias: alias
        spec:
          mode:
            subSteps: subSteps
            steps: steps
          context: context
          workflowSpec:
            steps:
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              subSteps:
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
            - outputs:
              - name: name
                valueFrom: valueFrom
              - name: name
                valueFrom: valueFrom
              dependsOn:
              - dependsOn
              - dependsOn
              subSteps:
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              - outputs:
                - name: name
                  valueFrom: valueFrom
                - name: name
                  valueFrom: valueFrom
                dependsOn:
                - dependsOn
                - dependsOn
                inputs:
                - parameterKey: parameterKey
                  from: from
                - parameterKey: parameterKey
                  from: from
                meta:
                  alias: alias
                name: name
                type: type
                if: if
                properties: properties
                timeout: timeout
              inputs:
              - parameterKey: parameterKey
                from: from
              - parameterKey: parameterKey
                from: from
              meta:
                alias: alias
              name: name
              type: type
              if: if
              properties: properties
              timeout: timeout
          workflowRef: workflowRef
        status:
          mode:
            subSteps: subSteps
            steps: steps
          suspend: true
          contextBackend:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          suspendState: suspendState
          finished: true
          startTime: startTime
          endTime: endTime
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          message: message
          steps:
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            subSteps:
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              name: name
              id: id
              message: message
              type: type
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              name: name
              id: id
              message: message
              type: type
            name: name
            id: id
            message: message
            type: type
          - lastExecuteTime: lastExecuteTime
            phase: phase
            firstExecuteTime: firstExecuteTime
            reason: reason
            subSteps:
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              name: name
              id: id
              message: message
              type: type
            - lastExecuteTime: lastExecuteTime
              phase: phase
              firstExecuteTime: firstExecuteTime
              reason: reason
              name: name
              id: id
              message: message
              type: type
            name: name
            id: id
            message: message
            type: type
          terminated: true
          status: status
      properties:
        contextName:
          type: string
        contextValues:
          items:
            $ref: '#/components/schemas/ModelValue'
          type: array
        pipelineName:
          type: string
        pipelineRunName:
          type: string
        project:
          $ref: '#/components/schemas/V1NameAlias'
        record:
          format: int64
          type: integer
        spec:
          $ref: '#/components/schemas/V1alpha1WorkflowRunSpec'
        status:
          $ref: '#/components/schemas/V1alpha1WorkflowRunStatus'
      required:
      - contextName
      - contextValues
      - pipelineName
      - pipelineRunName
      - project
      - record
      - spec
      - status
      type: object
      x-apifox-orders:
      - contextName
      - contextValues
      - pipelineName
      - pipelineRunName
      - project
      - record
      - spec
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UtilsValidateDefaultValue:
      type: string
      x-apifox-folder: Schemas
    ConfigClusterTargetStatus:
      properties:
        application:
          $ref: '#/components/schemas/ConfigNamespacedName'
        clusterName:
          type: string
        message:
          type: string
        namespace:
          type: string
        status:
          type: string
      required:
      - application
      - clusterName
      - message
      - namespace
      - status
      type: object
      x-apifox-orders:
      - application
      - clusterName
      - message
      - namespace
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1RootFs:
      example:
        diff_ids:
        - Hex: Hex
          Algorithm: Algorithm
        - Hex: Hex
          Algorithm: Algorithm
        type: type
      properties:
        diff_ids:
          items:
            $ref: '#/components/schemas/V1Hash'
          type: array
        type:
          type: string
      required:
      - diff_ids
      - type
      type: object
      x-apifox-orders:
      - diff_ids
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateClusterNamespaceRequest:
      example:
        namespace: namespace
      properties:
        namespace:
          type: string
      required:
      - namespace
      type: object
      x-apifox-orders:
      - namespace
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListApplicationPolicy:
      example:
        policies:
        - creator: creator
          createTime: 2000-01-23T04:56:07.000+00:00
          envName: envName
          name: name
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          type: type
          properties: '{}'
        - creator: creator
          createTime: 2000-01-23T04:56:07.000+00:00
          envName: envName
          name: name
          alias: alias
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          type: type
          properties: '{}'
      properties:
        policies:
          items:
            $ref: '#/components/schemas/V1PolicyBase'
          type: array
      required:
      - policies
      type: object
      x-apifox-orders:
      - policies
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateApplicationComponentRequestLabels:
      additionalProperties:
        type: string
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UtilsOption:
      example:
        label: label
        value: value
      properties:
        label:
          type: string
        value:
          type: string
          x-apifox-folder: Schemas
      required:
      - label
      - value
      type: object
      x-apifox-orders:
      - label
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1StatisticInfo:
      example:
        componentDefinitionTopList:
        - componentDefinitionTopList
        - componentDefinitionTopList
        appCount: appCount
        enableAddonList:
          key: enableAddonList
        clusterCount: clusterCount
        policyDefinitionTopList:
        - policyDefinitionTopList
        - policyDefinitionTopList
        updateTime: 2000-01-23T04:56:07.000+00:00
        traitDefinitionTopList:
        - traitDefinitionTopList
        - traitDefinitionTopList
        workflowDefinitionTopList:
        - workflowDefinitionTopList
        - workflowDefinitionTopList
      properties:
        appCount:
          type: string
        clusterCount:
          type: string
        componentDefinitionTopList:
          items:
            type: string
          type: array
        enableAddonList:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        policyDefinitionTopList:
          items:
            type: string
          type: array
        traitDefinitionTopList:
          items:
            type: string
          type: array
        updateTime:
          format: date-time
          type: string
        workflowDefinitionTopList:
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - appCount
      - clusterCount
      - componentDefinitionTopList
      - enableAddonList
      - policyDefinitionTopList
      - traitDefinitionTopList
      - updateTime
      - workflowDefinitionTopList
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonApplicationTraitStatus:
      example:
        healthy: true
        message: message
        type: type
      properties:
        healthy:
          type: boolean
        message:
          type: string
        type:
          type: string
      required:
      - healthy
      - type
      type: object
      x-apifox-orders:
      - healthy
      - message
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ListEnvResponse:
      example:
        total: 0
        envs:
        - createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          alias: alias
          description: description
          project:
            name: name
            alias: alias
          updateTime: 2000-01-23T04:56:07.000+00:00
          targets:
          - name: name
            alias: alias
          - name: name
            alias: alias
        - createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          alias: alias
          description: description
          project:
            name: name
            alias: alias
          updateTime: 2000-01-23T04:56:07.000+00:00
          targets:
          - name: name
            alias: alias
          - name: name
            alias: alias
      properties:
        envs:
          items:
            $ref: '#/components/schemas/V1Env'
          type: array
        total:
          format: int64
          type: integer
      required:
      - envs
      - total
      type: object
      x-apifox-orders:
      - envs
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1HandleApplicationTriggerWebhookRequest:
      example:
        upgrade:
          key: '{}'
        codeInfo:
          commit: commit
          branch: branch
          user: user
      properties:
        codeInfo:
          $ref: '#/components/schemas/ModelCodeInfo'
        upgrade:
          additionalProperties:
            $ref: '#/definitions/42676733'
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      type: object
      x-apifox-orders:
      - codeInfo
      - upgrade
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateEnvRequest:
      example:
        name: name
        namespace: namespace
        alias: alias
        description: description
        project: project
        allowTargetConflict: true
        targets:
        - targets
        - targets
      properties:
        alias:
          type: string
        allowTargetConflict:
          type: boolean
        description:
          type: string
        name:
          type: string
        namespace:
          type: string
        project:
          type: string
        targets:
          items:
            type: string
          type: array
      required:
      - name
      - namespace
      - project
      type: object
      x-apifox-orders:
      - alias
      - allowTargetConflict
      - description
      - name
      - namespace
      - project
      - targets
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1UpdateUiSchemaRequest:
      example:
        uiSchema:
        - additional: true
          subParameterGroupOption:
          - keys:
            - keys
            - keys
            label: label
          - keys:
            - keys
            - keys
            label: label
          subParameters:
          - null
          - null
          description: description
          label: label
          sort: 0
          disable: true
          jsonKey: jsonKey
          uiType: uiType
          style:
            colSpan: 6
          conditions:
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          validate:
            immutable: true
            min: 5.637376656633329
            max: 1.4658129805029452
            defaultValue: defaultValue
            minLength: 2
            options:
            - label: label
              value: value
            - label: label
              value: value
            pattern: pattern
            maxLength: 5
            required: true
        - additional: true
          subParameterGroupOption:
          - keys:
            - keys
            - keys
            label: label
          - keys:
            - keys
            - keys
            label: label
          subParameters:
          - null
          - null
          description: description
          label: label
          sort: 0
          disable: true
          jsonKey: jsonKey
          uiType: uiType
          style:
            colSpan: 6
          conditions:
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          - op: op
            jsonKey: jsonKey
            action: action
            value: value
          validate:
            immutable: true
            min: 5.637376656633329
            max: 1.4658129805029452
            defaultValue: defaultValue
            minLength: 2
            options:
            - label: label
              value: value
            - label: label
              value: value
            pattern: pattern
            maxLength: 5
            required: true
        type: type
      properties:
        type:
          type: string
        uiSchema:
          items:
            $ref: '#/components/schemas/UtilsUiParameter'
          type: array
      required:
      - type
      - uiSchema
      type: object
      x-apifox-orders:
      - type
      - uiSchema
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UtilsStyle:
      example:
        colSpan: 6
      properties:
        colSpan:
          format: int32
          type: integer
      required:
      - colSpan
      type: object
      x-apifox-orders:
      - colSpan
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CompareRevisionWithLatestOption:
      example:
        revision: revision
      properties:
        revision:
          type: string
      type: object
      x-apifox-orders:
      - revision
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonApplicationTrait:
      example:
        type: type
        properties: properties
      properties:
        properties:
          type: string
        type:
          type: string
      required:
      - type
      type: object
      x-apifox-orders:
      - properties
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1WorkflowRecordBase:
      example:
        mode: mode
        workflowAlias: workflowAlias
        name: name
        namespace: namespace
        startTime: 2000-01-23T04:56:07.000+00:00
        workflowName: workflowName
        applicationRevision: applicationRevision
        endTime: 2000-01-23T04:56:07.000+00:00
        message: message
        status: status
      properties:
        applicationRevision:
          type: string
        endTime:
          format: date-time
          type: string
        message:
          type: string
        mode:
          type: string
        name:
          type: string
        namespace:
          type: string
        startTime:
          format: date-time
          type: string
        status:
          type: string
        workflowAlias:
          type: string
        workflowName:
          type: string
      required:
      - applicationRevision
      - message
      - mode
      - name
      - namespace
      - status
      - workflowAlias
      - workflowName
      type: object
      x-apifox-orders:
      - applicationRevision
      - endTime
      - message
      - mode
      - name
      - namespace
      - startTime
      - status
      - workflowAlias
      - workflowName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AddonSystemRequirements:
      example:
        kubernetes: kubernetes
        vela: vela
      properties:
        kubernetes:
          type: string
        vela:
          type: string
      type: object
      x-apifox-orders:
      - kubernetes
      - vela
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1RunStat:
      example:
        activeNum: 6
        total:
          fail: 1
          total: 5
          success: 5
        week:
        - fail: 1
          total: 5
          success: 5
        - fail: 1
          total: 5
          success: 5
      properties:
        activeNum:
          format: int32
          type: integer
        total:
          $ref: '#/components/schemas/V1RunStatInfo'
        week:
          items:
            $ref: '#/components/schemas/V1RunStatInfo'
          type: array
      required:
      - activeNum
      - total
      - week
      type: object
      x-apifox-orders:
      - activeNum
      - total
      - week
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1StepBase:
      properties:
        id:
          type: string
        name:
          type: string
        phase:
          type: string
        type:
          type: string
      required:
      - id
      - name
      - phase
      - type
      type: object
      x-apifox-orders:
      - id
      - name
      - phase
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonWorkloadGvk:
      example:
        apiVersion: apiVersion
        kind: kind
      properties:
        apiVersion:
          type: string
        kind:
          type: string
      required:
      - apiVersion
      - kind
      type: object
      x-apifox-orders:
      - apiVersion
      - kind
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1AppCompareResponse:
      example:
        targetAppYAML: targetAppYAML
        baseAppYAML: baseAppYAML
        isDiff: true
        diffReport: diffReport
      properties:
        baseAppYAML:
          type: string
        diffReport:
          type: string
        isDiff:
          type: boolean
        targetAppYAML:
          type: string
      required:
      - baseAppYAML
      - diffReport
      - isDiff
      - targetAppYAML
      type: object
      x-apifox-orders:
      - baseAppYAML
      - diffReport
      - isDiff
      - targetAppYAML
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonHelm:
      example:
        release: release
        repository: repository
      properties:
        release:
          type: string
        repository:
          type: string
      required:
      - release
      - repository
      type: object
      x-apifox-orders:
      - release
      - repository
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CommonCue:
      example:
        template: template
      properties:
        template:
          type: string
      required:
      - template
      type: object
      x-apifox-orders:
      - template
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1CreateTargetRequest:
      example:
        cluster:
          clusterName: clusterName
          namespace: namespace
        name: name
        variable: '{}'
        alias: alias
        description: description
        project: project
      properties:
        alias:
          type: string
        cluster:
          $ref: '#/components/schemas/V1ClusterTarget'
        description:
          type: string
        name:
          type: string
        project:
          type: string
        variable:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      required:
      - name
      - project
      type: object
      x-apifox-orders:
      - alias
      - cluster
      - description
      - name
      - project
      - variable
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ApplicationTemplateBase:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        templateName: templateName
        versions:
        - createTime: 2000-01-23T04:56:07.000+00:00
          description: description
          createUser: createUser
          updateTime: 2000-01-23T04:56:07.000+00:00
          version: version
        - createTime: 2000-01-23T04:56:07.000+00:00
          description: description
          createUser: createUser
          updateTime: 2000-01-23T04:56:07.000+00:00
          version: version
        updateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        createTime:
          format: date-time
          type: string
        templateName:
          type: string
        updateTime:
          format: date-time
          type: string
        versions:
          items:
            $ref: '#/components/schemas/V1ApplicationTemplateVersion'
          type: array
      required:
      - createTime
      - templateName
      - updateTime
      type: object
      x-apifox-orders:
      - createTime
      - templateName
      - updateTime
      - versions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1ChartVersionListResponse:
      example:
        versions:
        - tillerVersion: tillerVersion
          urls:
          - urls
          - urls
          removed: true
          engine: engine
          created: 2000-01-23T04:56:07.000+00:00
          Metadata:
            maintainers:
            - name: name
              email: email
              url: url
            - name: name
              email: email
              url: url
            appVersion: appVersion
            keywords:
            - keywords
            - keywords
            sources:
            - sources
            - sources
            deprecated: true
            icon: icon
            annotations:
              key: annotations
            description: description
            type: type
            version: version
            dependencies:
            - condition: condition
              name: name
              alias: alias
              repository: repository
              import-values:
              - null
              - null
              version: version
              enabled: true
              tags:
              - tags
              - tags
            - condition: condition
              name: name
              alias: alias
              repository: repository
              import-values:
              - null
              - null
              version: version
              enabled: true
              tags:
              - tags
              - tags
            home: home
            tags: tags
            condition: condition
            apiVersion: apiVersion
            kubeVersion: kubeVersion
            name: name
          checksum: checksum
          digest: digest
          url: url
        - tillerVersion: tillerVersion
          urls:
          - urls
          - urls
          removed: true
          engine: engine
          created: 2000-01-23T04:56:07.000+00:00
          Metadata:
            maintainers:
            - name: name
              email: email
              url: url
            - name: name
              email: email
              url: url
            appVersion: appVersion
            keywords:
            - keywords
            - keywords
            sources:
            - sources
            - sources
            deprecated: true
            icon: icon
            annotations:
              key: annotations
            description: description
            type: type
            version: version
            dependencies:
            - condition: condition
              name: name
              alias: alias
              repository: repository
              import-values:
              - null
              - null
              version: version
              enabled: true
              tags:
              - tags
              - tags
            - condition: condition
              name: name
              alias: alias
              repository: repository
              import-values:
              - null
              - null
              version: version
              enabled: true
              tags:
              - tags
              - tags
            home: home
            tags: tags
            condition: condition
            apiVersion: apiVersion
            kubeVersion: kubeVersion
            name: name
          checksum: checksum
          digest: digest
          url: url
      properties:
        versions:
          items:
            $ref: '#/components/schemas/RepoChartVersion'
          type: array
      required:
      - versions
      type: object
      x-apifox-orders:
      - versions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1StepInputBase:
      example:
        phase: phase
        values:
        - parameterKey: parameterKey
          fromStep: fromStep
          from: from
          value: value
        - parameterKey: parameterKey
          fromStep: fromStep
          from: from
          value: value
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        name:
          type: string
        phase:
          type: string
        type:
          type: string
        values:
          items:
            $ref: '#/components/schemas/V1InputVar'
          type: array
      required:
      - id
      - name
      - phase
      - type
      - values
      type: object
      x-apifox-orders:
      - id
      - name
      - phase
      - type
      - values
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1OutputVar:
      example:
        name: name
        value: value
        valueFrom: valueFrom
      properties:
        name:
          type: string
        value:
          type: string
        valueFrom:
          type: string
      required:
      - name
      - value
      - valueFrom
      type: object
      x-apifox-orders:
      - name
      - value
      - valueFrom
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    V1SecretReference:
      description: SecretReference represents a Secret Reference. It has enough information
        to retrieve secret in any namespace
      example:
        name: name
        namespace: namespace
      properties:
        name:
          description: name is unique within a namespace to reference a secret resource.
          type: string
        namespace:
          description: namespace defines the space within which the secret name must
            be unique.
          type: string
      type: object
      x-apifox-orders:
      - name
      - namespace
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
